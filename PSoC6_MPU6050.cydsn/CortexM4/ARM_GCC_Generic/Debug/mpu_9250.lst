ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"mpu_9250.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MPU9250_init,"ax",%progbits
  20              		.align	2
  21              		.global	MPU9250_init
  22              		.thumb
  23              		.thumb_func
  24              		.type	MPU9250_init, %function
  25              	MPU9250_init:
  26              	.LFB0:
  27              		.file 1 "mpu_9250.c"
   1:mpu_9250.c    **** /******************************************************************************
   2:mpu_9250.c    **** I2Cdev library collection - MPU9250 I2C device class
   3:mpu_9250.c    **** Based on InvenSense MPU-9250 register map document rev. 2.0, 5/19/2011 
   4:mpu_9250.c    **** (RM-MPU-6000A-00)
   5:mpu_9250.c    **** 
   6:mpu_9250.c    **** 8/24/2011 by Jeff Rowberg <jeff@rowberg.net>
   7:mpu_9250.c    **** Updates should (hopefully) always be available at
   8:mpu_9250.c    **** https://github.com/jrowberg/i2cdevlib
   9:mpu_9250.c    **** 
  10:mpu_9250.c    **** Changelog:
  11:mpu_9250.c    **** 26/May/2014: C version to be used on PSoC Creator (www.cypress.com) by 
  12:mpu_9250.c    **** Hernán Sánchez
  13:mpu_9250.c    **** 
  14:mpu_9250.c    **** NOTE: THIS IS ONLY A PARIAL RELEASE. THIS DEVICE CLASS IS CURRENTLY UNDERGOING 
  15:mpu_9250.c    **** ACTIVE DEVELOPMENT AND IS STILL MISSING SOME IMPORTANT FEATURES. PLEASE KEEP 
  16:mpu_9250.c    **** THIS IN MIND IF YOU DECIDE TO USE THIS PARTICULAR CODE FOR ANYTHING.
  17:mpu_9250.c    **** ===============================================================================
  18:mpu_9250.c    **** I2Cdev device library code is placed under the MIT license
  19:mpu_9250.c    **** Copyright (c) 2012 Jeff Rowberg
  20:mpu_9250.c    **** 
  21:mpu_9250.c    **** Permission is hereby granted, free of charge, to any person obtaining a copy
  22:mpu_9250.c    **** of this software and associated documentation files (the "Software"), to deal
  23:mpu_9250.c    **** in the Software without restriction, including without limitation the rights
  24:mpu_9250.c    **** to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  25:mpu_9250.c    **** copies of the Software, and to permit persons to whom the Software is
  26:mpu_9250.c    **** furnished to do so, subject to the following conditions:
  27:mpu_9250.c    **** 
  28:mpu_9250.c    **** The above copyright notice and this permission notice shall be included in
  29:mpu_9250.c    **** all copies or substantial portions of the Software.
  30:mpu_9250.c    **** 
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 2


  31:mpu_9250.c    **** THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  32:mpu_9250.c    **** IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  33:mpu_9250.c    **** FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  34:mpu_9250.c    **** AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  35:mpu_9250.c    **** LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  36:mpu_9250.c    **** OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  37:mpu_9250.c    **** THE SOFTWARE.
  38:mpu_9250.c    **** ==============================================================================*/
  39:mpu_9250.c    **** 
  40:mpu_9250.c    **** #include <stdint.h>
  41:mpu_9250.c    **** #include "mpu_9250.h"
  42:mpu_9250.c    **** 
  43:mpu_9250.c    **** /** Default constructor, uses default I2C address.
  44:mpu_9250.c    ****  * @see MPU9250_DEFAULT_ADDRESS
  45:mpu_9250.c    ****  */
  46:mpu_9250.c    **** void MPU9250_init() {
  28              		.loc 1 46 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  47:mpu_9250.c    ****     devAddr = MPU9250_DEFAULT_ADDRESS;
  33              		.loc 1 47 0
  34 0000 6822     		movs	r2, #104
  35 0002 014B     		ldr	r3, .L2
  36 0004 1A70     		strb	r2, [r3]
  37 0006 7047     		bx	lr
  38              	.L3:
  39              		.align	2
  40              	.L2:
  41 0008 00000000 		.word	devAddr
  42              		.cfi_endproc
  43              	.LFE0:
  44              		.size	MPU9250_init, .-MPU9250_init
  45              		.section	.text.I2C_MPU9250_I2CAddress,"ax",%progbits
  46              		.align	2
  47              		.global	I2C_MPU9250_I2CAddress
  48              		.thumb
  49              		.thumb_func
  50              		.type	I2C_MPU9250_I2CAddress, %function
  51              	I2C_MPU9250_I2CAddress:
  52              	.LFB1:
  48:mpu_9250.c    **** }
  49:mpu_9250.c    **** 
  50:mpu_9250.c    **** /** Specific address constructor.
  51:mpu_9250.c    ****  * @param address I2C address
  52:mpu_9250.c    ****  * @see MPU9250_DEFAULT_ADDRESS
  53:mpu_9250.c    ****  * @see MPU9250_ADDRESS_AD0_LOW
  54:mpu_9250.c    ****  * @see MPU9250_ADDRESS_AD0_HIGH
  55:mpu_9250.c    ****  */
  56:mpu_9250.c    **** void I2C_MPU9250_I2CAddress(uint8_t address) {
  53              		.loc 1 56 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
  58              	.LVL0:
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 3


  57:mpu_9250.c    ****     devAddr = address;
  59              		.loc 1 57 0
  60 0000 014B     		ldr	r3, .L5
  61 0002 1870     		strb	r0, [r3]
  62 0004 7047     		bx	lr
  63              	.L6:
  64 0006 00BF     		.align	2
  65              	.L5:
  66 0008 00000000 		.word	devAddr
  67              		.cfi_endproc
  68              	.LFE1:
  69              		.size	I2C_MPU9250_I2CAddress, .-I2C_MPU9250_I2CAddress
  70              		.section	.text.MPU9250_getAuxVDDIOLevel,"ax",%progbits
  71              		.align	2
  72              		.global	MPU9250_getAuxVDDIOLevel
  73              		.thumb
  74              		.thumb_func
  75              		.type	MPU9250_getAuxVDDIOLevel, %function
  76              	MPU9250_getAuxVDDIOLevel:
  77              	.LFB4:
  58:mpu_9250.c    **** }
  59:mpu_9250.c    **** 
  60:mpu_9250.c    **** /** Power on and prepare for general usage.
  61:mpu_9250.c    ****  * This will activate the device and take it out of sleep mode (which must be done
  62:mpu_9250.c    ****  * after start-up). This function also sets both the accelerometer and the gyroscope
  63:mpu_9250.c    ****  * to their most sensitive settings, namely +/- 2g and +/- 250 degrees/sec, and sets
  64:mpu_9250.c    ****  * the clock source to use the X Gyro for reference, which is slightly better than
  65:mpu_9250.c    ****  * the default internal clock source.
  66:mpu_9250.c    ****  */
  67:mpu_9250.c    **** void MPU9250_initialize() {
  68:mpu_9250.c    ****     MPU9250_setClockSource(MPU9250_CLOCK_PLL_XGYRO);
  69:mpu_9250.c    ****     I2CWriteByte(devAddr, MPU9250_RA_INT_PIN_CFG, 0x02); 
  70:mpu_9250.c    ****     MPU9250_setFullScaleGyroRange(MPU9250_GYRO_FS_250);
  71:mpu_9250.c    ****     MPU9250_setFullScaleAccelRange(MPU9250_ACCEL_FS_2);
  72:mpu_9250.c    ****     MPU9250_setSleepEnabled(false); // thanks to Jack Elston for pointing this one out!
  73:mpu_9250.c    **** }
  74:mpu_9250.c    **** 
  75:mpu_9250.c    **** /** Verify the I2C connection.
  76:mpu_9250.c    ****  * Make sure the device is connected and responds as expected.
  77:mpu_9250.c    ****  * @return True if connection is valid, false otherwise
  78:mpu_9250.c    ****  */
  79:mpu_9250.c    **** bool MPU9250_testConnection() {
  80:mpu_9250.c    ****     return MPU9250_getDeviceID() == 0x34;
  81:mpu_9250.c    **** }
  82:mpu_9250.c    **** 
  83:mpu_9250.c    **** // AUX_VDDIO register (InvenSense demo code calls this RA_*G_OFFS_TC)
  84:mpu_9250.c    **** 
  85:mpu_9250.c    **** /** Get the auxiliary I2C supply voltage level.
  86:mpu_9250.c    ****  * When set to 1, the auxiliary I2C bus high logic level is VDD. When cleared to
  87:mpu_9250.c    ****  * 0, the auxiliary I2C bus high logic level is VLOGIC. This does not apply to
  88:mpu_9250.c    ****  * the MPU-6000, which does not have a VLOGIC pin.
  89:mpu_9250.c    ****  * @return I2C supply voltage level (0=VLOGIC, 1=VDD)
  90:mpu_9250.c    ****  */
  91:mpu_9250.c    **** uint8_t MPU9250_getAuxVDDIOLevel() {
  78              		.loc 1 91 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 4


  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82 0000 10B5     		push	{r4, lr}
  83              		.cfi_def_cfa_offset 8
  84              		.cfi_offset 4, -8
  85              		.cfi_offset 14, -4
  92:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_YG_OFFS_TC, MPU9250_TC_PWR_MODE_BIT, buffer);
  86              		.loc 1 92 0
  87 0002 054C     		ldr	r4, .L9
  88 0004 054B     		ldr	r3, .L9+4
  89 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
  90 0008 0121     		movs	r1, #1
  91 000a 0722     		movs	r2, #7
  92 000c 2346     		mov	r3, r4
  93 000e FFF7FEFF 		bl	I2CReadBit
  94              	.LVL1:
  93:mpu_9250.c    ****     return buffer[0];
  94:mpu_9250.c    **** }
  95              		.loc 1 94 0
  96 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
  97 0014 10BD     		pop	{r4, pc}
  98              	.L10:
  99 0016 00BF     		.align	2
 100              	.L9:
 101 0018 00000000 		.word	buffer
 102 001c 00000000 		.word	devAddr
 103              		.cfi_endproc
 104              	.LFE4:
 105              		.size	MPU9250_getAuxVDDIOLevel, .-MPU9250_getAuxVDDIOLevel
 106              		.section	.text.MPU9250_setAuxVDDIOLevel,"ax",%progbits
 107              		.align	2
 108              		.global	MPU9250_setAuxVDDIOLevel
 109              		.thumb
 110              		.thumb_func
 111              		.type	MPU9250_setAuxVDDIOLevel, %function
 112              	MPU9250_setAuxVDDIOLevel:
 113              	.LFB5:
  95:mpu_9250.c    **** /** Set the auxiliary I2C supply voltage level.
  96:mpu_9250.c    ****  * When set to 1, the auxiliary I2C bus high logic level is VDD. When cleared to
  97:mpu_9250.c    ****  * 0, the auxiliary I2C bus high logic level is VLOGIC. This does not apply to
  98:mpu_9250.c    ****  * the MPU-6000, which does not have a VLOGIC pin.
  99:mpu_9250.c    ****  * @param level I2C supply voltage level (0=VLOGIC, 1=VDD)
 100:mpu_9250.c    ****  */
 101:mpu_9250.c    **** void MPU9250_setAuxVDDIOLevel(uint8_t level) {
 114              		.loc 1 101 0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 0
 117              		@ frame_needed = 0, uses_anonymous_args = 0
 118              	.LVL2:
 119 0000 08B5     		push	{r3, lr}
 120              		.cfi_def_cfa_offset 8
 121              		.cfi_offset 3, -8
 122              		.cfi_offset 14, -4
 123 0002 0346     		mov	r3, r0
 102:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_YG_OFFS_TC, MPU9250_TC_PWR_MODE_BIT, level);
 124              		.loc 1 102 0
 125 0004 034A     		ldr	r2, .L13
 126 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 5


 127              	.LVL3:
 128 0008 0121     		movs	r1, #1
 129 000a 0722     		movs	r2, #7
 130 000c FFF7FEFF 		bl	I2CWriteBit
 131              	.LVL4:
 132 0010 08BD     		pop	{r3, pc}
 133              	.L14:
 134 0012 00BF     		.align	2
 135              	.L13:
 136 0014 00000000 		.word	devAddr
 137              		.cfi_endproc
 138              	.LFE5:
 139              		.size	MPU9250_setAuxVDDIOLevel, .-MPU9250_setAuxVDDIOLevel
 140              		.section	.text.MPU9250_getRate,"ax",%progbits
 141              		.align	2
 142              		.global	MPU9250_getRate
 143              		.thumb
 144              		.thumb_func
 145              		.type	MPU9250_getRate, %function
 146              	MPU9250_getRate:
 147              	.LFB6:
 103:mpu_9250.c    **** }
 104:mpu_9250.c    **** 
 105:mpu_9250.c    **** // SMPLRT_DIV register
 106:mpu_9250.c    **** 
 107:mpu_9250.c    **** /** Get gyroscope output rate divider.
 108:mpu_9250.c    ****  * The sensor register output, FIFO output, DMP sampling, Motion detection, Zero
 109:mpu_9250.c    ****  * Motion detection, and Free Fall detection are all based on the Sample Rate.
 110:mpu_9250.c    ****  * The Sample Rate is generated by dividing the gyroscope output rate by
 111:mpu_9250.c    ****  * SMPLRT_DIV:
 112:mpu_9250.c    ****  *
 113:mpu_9250.c    ****  * Sample Rate = Gyroscope Output Rate / (1 + SMPLRT_DIV)
 114:mpu_9250.c    ****  *
 115:mpu_9250.c    ****  * where Gyroscope Output Rate = 8kHz when the DLPF is disabled (DLPF_CFG = 0 or
 116:mpu_9250.c    ****  * 7), and 1kHz when the DLPF is enabled (see Register 26).
 117:mpu_9250.c    ****  *
 118:mpu_9250.c    ****  * Note: The accelerometer output rate is 1kHz. This means that for a Sample
 119:mpu_9250.c    ****  * Rate greater than 1kHz, the same accelerometer sample may be output to the
 120:mpu_9250.c    ****  * FIFO, DMP, and sensor registers more than once.
 121:mpu_9250.c    ****  *
 122:mpu_9250.c    ****  * For a diagram of the gyroscope and accelerometer signal paths, see Section 8
 123:mpu_9250.c    ****  * of the MPU-6000/MPU-9250 Product Specification document.
 124:mpu_9250.c    ****  *
 125:mpu_9250.c    ****  * @return Current sample rate
 126:mpu_9250.c    ****  * @see MPU9250_RA_SMPLRT_DIV
 127:mpu_9250.c    ****  */
 128:mpu_9250.c    **** uint8_t MPU9250_getRate() {
 148              		.loc 1 128 0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 0
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152 0000 10B5     		push	{r4, lr}
 153              		.cfi_def_cfa_offset 8
 154              		.cfi_offset 4, -8
 155              		.cfi_offset 14, -4
 129:mpu_9250.c    ****     I2CReadByte(devAddr, MPU9250_RA_SMPLRT_DIV, buffer);
 156              		.loc 1 129 0
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 6


 157 0002 044C     		ldr	r4, .L17
 158 0004 044B     		ldr	r3, .L17+4
 159 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 160 0008 1921     		movs	r1, #25
 161 000a 2246     		mov	r2, r4
 162 000c FFF7FEFF 		bl	I2CReadByte
 163              	.LVL5:
 130:mpu_9250.c    ****     return buffer[0];
 131:mpu_9250.c    **** }
 164              		.loc 1 131 0
 165 0010 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 166 0012 10BD     		pop	{r4, pc}
 167              	.L18:
 168              		.align	2
 169              	.L17:
 170 0014 00000000 		.word	buffer
 171 0018 00000000 		.word	devAddr
 172              		.cfi_endproc
 173              	.LFE6:
 174              		.size	MPU9250_getRate, .-MPU9250_getRate
 175              		.section	.text.MPU9250_setRate,"ax",%progbits
 176              		.align	2
 177              		.global	MPU9250_setRate
 178              		.thumb
 179              		.thumb_func
 180              		.type	MPU9250_setRate, %function
 181              	MPU9250_setRate:
 182              	.LFB7:
 132:mpu_9250.c    **** /** Set gyroscope sample rate divider.
 133:mpu_9250.c    ****  * @param rate New sample rate divider
 134:mpu_9250.c    ****  * @see getRate()
 135:mpu_9250.c    ****  * @see MPU9250_RA_SMPLRT_DIV
 136:mpu_9250.c    ****  */
 137:mpu_9250.c    **** void MPU9250_setRate(uint8_t rate) {
 183              		.loc 1 137 0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 0
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 187              	.LVL6:
 188 0000 08B5     		push	{r3, lr}
 189              		.cfi_def_cfa_offset 8
 190              		.cfi_offset 3, -8
 191              		.cfi_offset 14, -4
 192 0002 0246     		mov	r2, r0
 138:mpu_9250.c    ****     I2CWriteByte(devAddr, MPU9250_RA_SMPLRT_DIV, rate);
 193              		.loc 1 138 0
 194 0004 024B     		ldr	r3, .L21
 195 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 196              	.LVL7:
 197 0008 1921     		movs	r1, #25
 198 000a FFF7FEFF 		bl	I2CWriteByte
 199              	.LVL8:
 200 000e 08BD     		pop	{r3, pc}
 201              	.L22:
 202              		.align	2
 203              	.L21:
 204 0010 00000000 		.word	devAddr
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 7


 205              		.cfi_endproc
 206              	.LFE7:
 207              		.size	MPU9250_setRate, .-MPU9250_setRate
 208              		.section	.text.MPU9250_getExternalFrameSync,"ax",%progbits
 209              		.align	2
 210              		.global	MPU9250_getExternalFrameSync
 211              		.thumb
 212              		.thumb_func
 213              		.type	MPU9250_getExternalFrameSync, %function
 214              	MPU9250_getExternalFrameSync:
 215              	.LFB8:
 139:mpu_9250.c    **** }
 140:mpu_9250.c    **** 
 141:mpu_9250.c    **** // CONFIG register
 142:mpu_9250.c    **** 
 143:mpu_9250.c    **** /** Get external FSYNC configuration.
 144:mpu_9250.c    ****  * Configures the external Frame Synchronization (FSYNC) pin sampling. An
 145:mpu_9250.c    ****  * external signal connected to the FSYNC pin can be sampled by configuring
 146:mpu_9250.c    ****  * EXT_SYNC_SET. Signal changes to the FSYNC pin are latched so that short
 147:mpu_9250.c    ****  * strobes may be captured. The latched FSYNC signal will be sampled at the
 148:mpu_9250.c    ****  * Sampling Rate, as defined in register 25. After sampling, the latch will
 149:mpu_9250.c    ****  * reset to the current FSYNC signal state.
 150:mpu_9250.c    ****  *
 151:mpu_9250.c    ****  * The sampled value will be reported in place of the least significant bit in
 152:mpu_9250.c    ****  * a sensor data register determined by the value of EXT_SYNC_SET according to
 153:mpu_9250.c    ****  * the following table.
 154:mpu_9250.c    ****  *
 155:mpu_9250.c    ****  * <pre>
 156:mpu_9250.c    ****  * EXT_SYNC_SET | FSYNC Bit Location
 157:mpu_9250.c    ****  * -------------+-------------------
 158:mpu_9250.c    ****  * 0            | Input disabled
 159:mpu_9250.c    ****  * 1            | TEMP_OUT_L[0]
 160:mpu_9250.c    ****  * 2            | GYRO_XOUT_L[0]
 161:mpu_9250.c    ****  * 3            | GYRO_YOUT_L[0]
 162:mpu_9250.c    ****  * 4            | GYRO_ZOUT_L[0]
 163:mpu_9250.c    ****  * 5            | ACCEL_XOUT_L[0]
 164:mpu_9250.c    ****  * 6            | ACCEL_YOUT_L[0]
 165:mpu_9250.c    ****  * 7            | ACCEL_ZOUT_L[0]
 166:mpu_9250.c    ****  * </pre>
 167:mpu_9250.c    ****  *
 168:mpu_9250.c    ****  * @return FSYNC configuration value
 169:mpu_9250.c    ****  */
 170:mpu_9250.c    **** uint8_t MPU9250_getExternalFrameSync() {
 216              		.loc 1 170 0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 0
 219              		@ frame_needed = 0, uses_anonymous_args = 0
 220 0000 10B5     		push	{r4, lr}
 221              		.cfi_def_cfa_offset 8
 222              		.cfi_offset 4, -8
 223              		.cfi_offset 14, -4
 224 0002 82B0     		sub	sp, sp, #8
 225              		.cfi_def_cfa_offset 16
 171:mpu_9250.c    ****     I2CReadBits(devAddr, MPU9250_RA_CONFIG, MPU9250_CFG_EXT_SYNC_SET_BIT, MPU9250_CFG_EXT_SYNC_SET_
 226              		.loc 1 171 0
 227 0004 054B     		ldr	r3, .L25
 228 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 8


 229 0008 054C     		ldr	r4, .L25+4
 230 000a 0094     		str	r4, [sp]
 231 000c 1A21     		movs	r1, #26
 232 000e 0522     		movs	r2, #5
 233 0010 0323     		movs	r3, #3
 234 0012 FFF7FEFF 		bl	I2CReadBits
 235              	.LVL9:
 172:mpu_9250.c    ****     return buffer[0];
 173:mpu_9250.c    **** }
 236              		.loc 1 173 0
 237 0016 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 238 0018 02B0     		add	sp, sp, #8
 239              		.cfi_def_cfa_offset 8
 240              		@ sp needed
 241 001a 10BD     		pop	{r4, pc}
 242              	.L26:
 243              		.align	2
 244              	.L25:
 245 001c 00000000 		.word	devAddr
 246 0020 00000000 		.word	buffer
 247              		.cfi_endproc
 248              	.LFE8:
 249              		.size	MPU9250_getExternalFrameSync, .-MPU9250_getExternalFrameSync
 250              		.section	.text.MPU9250_setExternalFrameSync,"ax",%progbits
 251              		.align	2
 252              		.global	MPU9250_setExternalFrameSync
 253              		.thumb
 254              		.thumb_func
 255              		.type	MPU9250_setExternalFrameSync, %function
 256              	MPU9250_setExternalFrameSync:
 257              	.LFB9:
 174:mpu_9250.c    **** /** Set external FSYNC configuration.
 175:mpu_9250.c    ****  * @see getExternalFrameSync()
 176:mpu_9250.c    ****  * @see MPU9250_RA_CONFIG
 177:mpu_9250.c    ****  * @param sync New FSYNC configuration value
 178:mpu_9250.c    ****  */
 179:mpu_9250.c    **** void MPU9250_setExternalFrameSync(uint8_t sync) {
 258              		.loc 1 179 0
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 0
 261              		@ frame_needed = 0, uses_anonymous_args = 0
 262              	.LVL10:
 263 0000 00B5     		push	{lr}
 264              		.cfi_def_cfa_offset 4
 265              		.cfi_offset 14, -4
 266 0002 83B0     		sub	sp, sp, #12
 267              		.cfi_def_cfa_offset 16
 180:mpu_9250.c    ****     I2CWriteBits(devAddr, MPU9250_RA_CONFIG, MPU9250_CFG_EXT_SYNC_SET_BIT, MPU9250_CFG_EXT_SYNC_SET
 268              		.loc 1 180 0
 269 0004 054B     		ldr	r3, .L29
 270 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 271 0008 0090     		str	r0, [sp]
 272 000a 1846     		mov	r0, r3
 273              	.LVL11:
 274 000c 1A21     		movs	r1, #26
 275 000e 0522     		movs	r2, #5
 276 0010 0323     		movs	r3, #3
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 9


 277 0012 FFF7FEFF 		bl	I2CWriteBits
 278              	.LVL12:
 181:mpu_9250.c    **** }
 279              		.loc 1 181 0
 280 0016 03B0     		add	sp, sp, #12
 281              		.cfi_def_cfa_offset 4
 282              		@ sp needed
 283 0018 5DF804FB 		ldr	pc, [sp], #4
 284              	.L30:
 285              		.align	2
 286              	.L29:
 287 001c 00000000 		.word	devAddr
 288              		.cfi_endproc
 289              	.LFE9:
 290              		.size	MPU9250_setExternalFrameSync, .-MPU9250_setExternalFrameSync
 291              		.section	.text.MPU9250_getDLPFMode,"ax",%progbits
 292              		.align	2
 293              		.global	MPU9250_getDLPFMode
 294              		.thumb
 295              		.thumb_func
 296              		.type	MPU9250_getDLPFMode, %function
 297              	MPU9250_getDLPFMode:
 298              	.LFB10:
 182:mpu_9250.c    **** /** Get digital low-pass filter configuration.
 183:mpu_9250.c    ****  * The DLPF_CFG parameter sets the digital low pass filter configuration. It
 184:mpu_9250.c    ****  * also determines the internal sampling rate used by the device as shown in
 185:mpu_9250.c    ****  * the table below.
 186:mpu_9250.c    ****  *
 187:mpu_9250.c    ****  * Note: The accelerometer output rate is 1kHz. This means that for a Sample
 188:mpu_9250.c    ****  * Rate greater than 1kHz, the same accelerometer sample may be output to the
 189:mpu_9250.c    ****  * FIFO, DMP, and sensor registers more than once.
 190:mpu_9250.c    ****  *
 191:mpu_9250.c    ****  * <pre>
 192:mpu_9250.c    ****  *          |   ACCELEROMETER    |           GYROSCOPE
 193:mpu_9250.c    ****  * DLPF_CFG | Bandwidth | Delay  | Bandwidth | Delay  | Sample Rate
 194:mpu_9250.c    ****  * ---------+-----------+--------+-----------+--------+-------------
 195:mpu_9250.c    ****  * 0        | 260Hz     | 0ms    | 256Hz     | 0.98ms | 8kHz
 196:mpu_9250.c    ****  * 1        | 184Hz     | 2.0ms  | 188Hz     | 1.9ms  | 1kHz
 197:mpu_9250.c    ****  * 2        | 94Hz      | 3.0ms  | 98Hz      | 2.8ms  | 1kHz
 198:mpu_9250.c    ****  * 3        | 44Hz      | 4.9ms  | 42Hz      | 4.8ms  | 1kHz
 199:mpu_9250.c    ****  * 4        | 21Hz      | 8.5ms  | 20Hz      | 8.3ms  | 1kHz
 200:mpu_9250.c    ****  * 5        | 10Hz      | 13.8ms | 10Hz      | 13.4ms | 1kHz
 201:mpu_9250.c    ****  * 6        | 5Hz       | 19.0ms | 5Hz       | 18.6ms | 1kHz
 202:mpu_9250.c    ****  * 7        |   -- Reserved --   |   -- Reserved --   | Reserved
 203:mpu_9250.c    ****  * </pre>
 204:mpu_9250.c    ****  *
 205:mpu_9250.c    ****  * @return DLFP configuration
 206:mpu_9250.c    ****  * @see MPU9250_RA_CONFIG
 207:mpu_9250.c    ****  * @see MPU9250_CFG_DLPF_CFG_BIT
 208:mpu_9250.c    ****  * @see MPU9250_CFG_DLPF_CFG_LENGTH
 209:mpu_9250.c    ****  */
 210:mpu_9250.c    **** uint8_t MPU9250_getDLPFMode() {
 299              		.loc 1 210 0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 0
 302              		@ frame_needed = 0, uses_anonymous_args = 0
 303 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 10


 304              		.cfi_def_cfa_offset 8
 305              		.cfi_offset 4, -8
 306              		.cfi_offset 14, -4
 307 0002 82B0     		sub	sp, sp, #8
 308              		.cfi_def_cfa_offset 16
 211:mpu_9250.c    ****     I2CReadBits(devAddr, MPU9250_RA_CONFIG, MPU9250_CFG_DLPF_CFG_BIT, MPU9250_CFG_DLPF_CFG_LENGTH, 
 309              		.loc 1 211 0
 310 0004 054B     		ldr	r3, .L33
 311 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 312 0008 054C     		ldr	r4, .L33+4
 313 000a 0094     		str	r4, [sp]
 314 000c 1A21     		movs	r1, #26
 315 000e 0222     		movs	r2, #2
 316 0010 0323     		movs	r3, #3
 317 0012 FFF7FEFF 		bl	I2CReadBits
 318              	.LVL13:
 212:mpu_9250.c    ****     return buffer[0];
 213:mpu_9250.c    **** }
 319              		.loc 1 213 0
 320 0016 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 321 0018 02B0     		add	sp, sp, #8
 322              		.cfi_def_cfa_offset 8
 323              		@ sp needed
 324 001a 10BD     		pop	{r4, pc}
 325              	.L34:
 326              		.align	2
 327              	.L33:
 328 001c 00000000 		.word	devAddr
 329 0020 00000000 		.word	buffer
 330              		.cfi_endproc
 331              	.LFE10:
 332              		.size	MPU9250_getDLPFMode, .-MPU9250_getDLPFMode
 333              		.section	.text.MPU9250_setDLPFMode,"ax",%progbits
 334              		.align	2
 335              		.global	MPU9250_setDLPFMode
 336              		.thumb
 337              		.thumb_func
 338              		.type	MPU9250_setDLPFMode, %function
 339              	MPU9250_setDLPFMode:
 340              	.LFB11:
 214:mpu_9250.c    **** 
 215:mpu_9250.c    **** 
 216:mpu_9250.c    **** /** Set digital low-pass filter configuration.
 217:mpu_9250.c    ****  * @param mode New DLFP configuration setting
 218:mpu_9250.c    ****  * @see getDLPFBandwidth()
 219:mpu_9250.c    ****  * @see MPU9250_DLPF_BW_256
 220:mpu_9250.c    ****  * @see MPU9250_RA_CONFIG
 221:mpu_9250.c    ****  * @see MPU9250_CFG_DLPF_CFG_BIT
 222:mpu_9250.c    ****  * @see MPU9250_CFG_DLPF_CFG_LENGTH
 223:mpu_9250.c    ****  */
 224:mpu_9250.c    **** void MPU9250_setDLPFMode(uint8_t mode) {
 341              		.loc 1 224 0
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 0
 344              		@ frame_needed = 0, uses_anonymous_args = 0
 345              	.LVL14:
 346 0000 00B5     		push	{lr}
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 11


 347              		.cfi_def_cfa_offset 4
 348              		.cfi_offset 14, -4
 349 0002 83B0     		sub	sp, sp, #12
 350              		.cfi_def_cfa_offset 16
 225:mpu_9250.c    ****     I2CWriteBits(devAddr, MPU9250_RA_CONFIG, MPU9250_CFG_DLPF_CFG_BIT, MPU9250_CFG_DLPF_CFG_LENGTH,
 351              		.loc 1 225 0
 352 0004 054B     		ldr	r3, .L37
 353 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 354 0008 0090     		str	r0, [sp]
 355 000a 1846     		mov	r0, r3
 356              	.LVL15:
 357 000c 1A21     		movs	r1, #26
 358 000e 0222     		movs	r2, #2
 359 0010 0323     		movs	r3, #3
 360 0012 FFF7FEFF 		bl	I2CWriteBits
 361              	.LVL16:
 226:mpu_9250.c    **** }
 362              		.loc 1 226 0
 363 0016 03B0     		add	sp, sp, #12
 364              		.cfi_def_cfa_offset 4
 365              		@ sp needed
 366 0018 5DF804FB 		ldr	pc, [sp], #4
 367              	.L38:
 368              		.align	2
 369              	.L37:
 370 001c 00000000 		.word	devAddr
 371              		.cfi_endproc
 372              	.LFE11:
 373              		.size	MPU9250_setDLPFMode, .-MPU9250_setDLPFMode
 374              		.section	.text.MPU9250_set_A_DLPFMode,"ax",%progbits
 375              		.align	2
 376              		.global	MPU9250_set_A_DLPFMode
 377              		.thumb
 378              		.thumb_func
 379              		.type	MPU9250_set_A_DLPFMode, %function
 380              	MPU9250_set_A_DLPFMode:
 381              	.LFB12:
 227:mpu_9250.c    **** 
 228:mpu_9250.c    **** //Jobin Temp adding function for LPF accelerometer [MPU9250]
 229:mpu_9250.c    **** 
 230:mpu_9250.c    **** void MPU9250_set_A_DLPFMode(uint8_t mode) {
 382              		.loc 1 230 0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 0
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386              	.LVL17:
 387 0000 00B5     		push	{lr}
 388              		.cfi_def_cfa_offset 4
 389              		.cfi_offset 14, -4
 390 0002 83B0     		sub	sp, sp, #12
 391              		.cfi_def_cfa_offset 16
 231:mpu_9250.c    ****     I2CWriteBits(devAddr, 0x1D, MPU9250_CFG_DLPF_CFG_BIT, MPU9250_CFG_DLPF_CFG_LENGTH, mode);
 392              		.loc 1 231 0
 393 0004 054B     		ldr	r3, .L41
 394 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 395 0008 0090     		str	r0, [sp]
 396 000a 1846     		mov	r0, r3
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 12


 397              	.LVL18:
 398 000c 1D21     		movs	r1, #29
 399 000e 0222     		movs	r2, #2
 400 0010 0323     		movs	r3, #3
 401 0012 FFF7FEFF 		bl	I2CWriteBits
 402              	.LVL19:
 232:mpu_9250.c    **** }
 403              		.loc 1 232 0
 404 0016 03B0     		add	sp, sp, #12
 405              		.cfi_def_cfa_offset 4
 406              		@ sp needed
 407 0018 5DF804FB 		ldr	pc, [sp], #4
 408              	.L42:
 409              		.align	2
 410              	.L41:
 411 001c 00000000 		.word	devAddr
 412              		.cfi_endproc
 413              	.LFE12:
 414              		.size	MPU9250_set_A_DLPFMode, .-MPU9250_set_A_DLPFMode
 415              		.section	.text.MPU9250_getFullScaleGyroRange,"ax",%progbits
 416              		.align	2
 417              		.global	MPU9250_getFullScaleGyroRange
 418              		.thumb
 419              		.thumb_func
 420              		.type	MPU9250_getFullScaleGyroRange, %function
 421              	MPU9250_getFullScaleGyroRange:
 422              	.LFB13:
 233:mpu_9250.c    **** 
 234:mpu_9250.c    **** // GYRO_CONFIG register
 235:mpu_9250.c    **** 
 236:mpu_9250.c    **** /** Get full-scale gyroscope range.
 237:mpu_9250.c    ****  * The FS_SEL parameter allows setting the full-scale range of the gyro sensors,
 238:mpu_9250.c    ****  * as described in the table below.
 239:mpu_9250.c    ****  *
 240:mpu_9250.c    ****  * <pre>
 241:mpu_9250.c    ****  * 0 = +/- 250 degrees/sec
 242:mpu_9250.c    ****  * 1 = +/- 500 degrees/sec
 243:mpu_9250.c    ****  * 2 = +/- 1000 degrees/sec
 244:mpu_9250.c    ****  * 3 = +/- 2000 degrees/sec
 245:mpu_9250.c    ****  * </pre>
 246:mpu_9250.c    ****  *
 247:mpu_9250.c    ****  * @return Current full-scale gyroscope range setting
 248:mpu_9250.c    ****  * @see MPU9250_GYRO_FS_250
 249:mpu_9250.c    ****  * @see MPU9250_RA_GYRO_CONFIG
 250:mpu_9250.c    ****  * @see MPU9250_GCONFIG_FS_SEL_BIT
 251:mpu_9250.c    ****  * @see MPU9250_GCONFIG_FS_SEL_LENGTH
 252:mpu_9250.c    ****  */
 253:mpu_9250.c    **** uint8_t MPU9250_getFullScaleGyroRange() {
 423              		.loc 1 253 0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 0
 426              		@ frame_needed = 0, uses_anonymous_args = 0
 427 0000 10B5     		push	{r4, lr}
 428              		.cfi_def_cfa_offset 8
 429              		.cfi_offset 4, -8
 430              		.cfi_offset 14, -4
 431 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 13


 432              		.cfi_def_cfa_offset 16
 254:mpu_9250.c    ****     I2CReadBits(devAddr, MPU9250_RA_GYRO_CONFIG, MPU9250_GCONFIG_FS_SEL_BIT, MPU9250_GCONFIG_FS_SEL
 433              		.loc 1 254 0
 434 0004 054B     		ldr	r3, .L45
 435 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 436 0008 054C     		ldr	r4, .L45+4
 437 000a 0094     		str	r4, [sp]
 438 000c 1B21     		movs	r1, #27
 439 000e 0422     		movs	r2, #4
 440 0010 0223     		movs	r3, #2
 441 0012 FFF7FEFF 		bl	I2CReadBits
 442              	.LVL20:
 255:mpu_9250.c    ****     return buffer[0];
 256:mpu_9250.c    **** }
 443              		.loc 1 256 0
 444 0016 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 445 0018 02B0     		add	sp, sp, #8
 446              		.cfi_def_cfa_offset 8
 447              		@ sp needed
 448 001a 10BD     		pop	{r4, pc}
 449              	.L46:
 450              		.align	2
 451              	.L45:
 452 001c 00000000 		.word	devAddr
 453 0020 00000000 		.word	buffer
 454              		.cfi_endproc
 455              	.LFE13:
 456              		.size	MPU9250_getFullScaleGyroRange, .-MPU9250_getFullScaleGyroRange
 457              		.section	.text.MPU9250_setFullScaleGyroRange,"ax",%progbits
 458              		.align	2
 459              		.global	MPU9250_setFullScaleGyroRange
 460              		.thumb
 461              		.thumb_func
 462              		.type	MPU9250_setFullScaleGyroRange, %function
 463              	MPU9250_setFullScaleGyroRange:
 464              	.LFB14:
 257:mpu_9250.c    **** /** Set full-scale gyroscope range.
 258:mpu_9250.c    ****  * @param range New full-scale gyroscope range value
 259:mpu_9250.c    ****  * @see getFullScaleRange()
 260:mpu_9250.c    ****  * @see MPU9250_GYRO_FS_250
 261:mpu_9250.c    ****  * @see MPU9250_RA_GYRO_CONFIG
 262:mpu_9250.c    ****  * @see MPU9250_GCONFIG_FS_SEL_BIT
 263:mpu_9250.c    ****  * @see MPU9250_GCONFIG_FS_SEL_LENGTH
 264:mpu_9250.c    ****  */
 265:mpu_9250.c    **** void MPU9250_setFullScaleGyroRange(uint8_t range) {
 465              		.loc 1 265 0
 466              		.cfi_startproc
 467              		@ args = 0, pretend = 0, frame = 0
 468              		@ frame_needed = 0, uses_anonymous_args = 0
 469              	.LVL21:
 470 0000 00B5     		push	{lr}
 471              		.cfi_def_cfa_offset 4
 472              		.cfi_offset 14, -4
 473 0002 83B0     		sub	sp, sp, #12
 474              		.cfi_def_cfa_offset 16
 266:mpu_9250.c    ****     I2CWriteBits(devAddr, MPU9250_RA_GYRO_CONFIG, MPU9250_GCONFIG_FS_SEL_BIT, MPU9250_GCONFIG_FS_SE
 475              		.loc 1 266 0
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 14


 476 0004 054B     		ldr	r3, .L49
 477 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 478 0008 0090     		str	r0, [sp]
 479 000a 1846     		mov	r0, r3
 480              	.LVL22:
 481 000c 1B21     		movs	r1, #27
 482 000e 0422     		movs	r2, #4
 483 0010 0223     		movs	r3, #2
 484 0012 FFF7FEFF 		bl	I2CWriteBits
 485              	.LVL23:
 267:mpu_9250.c    **** }
 486              		.loc 1 267 0
 487 0016 03B0     		add	sp, sp, #12
 488              		.cfi_def_cfa_offset 4
 489              		@ sp needed
 490 0018 5DF804FB 		ldr	pc, [sp], #4
 491              	.L50:
 492              		.align	2
 493              	.L49:
 494 001c 00000000 		.word	devAddr
 495              		.cfi_endproc
 496              	.LFE14:
 497              		.size	MPU9250_setFullScaleGyroRange, .-MPU9250_setFullScaleGyroRange
 498              		.section	.text.MPU9250_getAccelXSelfTest,"ax",%progbits
 499              		.align	2
 500              		.global	MPU9250_getAccelXSelfTest
 501              		.thumb
 502              		.thumb_func
 503              		.type	MPU9250_getAccelXSelfTest, %function
 504              	MPU9250_getAccelXSelfTest:
 505              	.LFB15:
 268:mpu_9250.c    **** 
 269:mpu_9250.c    **** // ACCEL_CONFIG register
 270:mpu_9250.c    **** 
 271:mpu_9250.c    **** /** Get self-test enabled setting for accelerometer X axis.
 272:mpu_9250.c    ****  * @return Self-test enabled value
 273:mpu_9250.c    ****  * @see MPU9250_RA_ACCEL_CONFIG
 274:mpu_9250.c    ****  */
 275:mpu_9250.c    **** bool MPU9250_getAccelXSelfTest() {
 506              		.loc 1 275 0
 507              		.cfi_startproc
 508              		@ args = 0, pretend = 0, frame = 0
 509              		@ frame_needed = 0, uses_anonymous_args = 0
 510 0000 10B5     		push	{r4, lr}
 511              		.cfi_def_cfa_offset 8
 512              		.cfi_offset 4, -8
 513              		.cfi_offset 14, -4
 276:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_ACCEL_CONFIG, MPU9250_ACONFIG_XA_ST_BIT, buffer);
 514              		.loc 1 276 0
 515 0002 064C     		ldr	r4, .L53
 516 0004 064B     		ldr	r3, .L53+4
 517 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 518 0008 1C21     		movs	r1, #28
 519 000a 0722     		movs	r2, #7
 520 000c 2346     		mov	r3, r4
 521 000e FFF7FEFF 		bl	I2CReadBit
 522              	.LVL24:
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 15


 277:mpu_9250.c    ****     return buffer[0];
 523              		.loc 1 277 0
 524 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 278:mpu_9250.c    **** }
 525              		.loc 1 278 0
 526 0014 0030     		adds	r0, r0, #0
 527 0016 18BF     		it	ne
 528 0018 0120     		movne	r0, #1
 529 001a 10BD     		pop	{r4, pc}
 530              	.L54:
 531              		.align	2
 532              	.L53:
 533 001c 00000000 		.word	buffer
 534 0020 00000000 		.word	devAddr
 535              		.cfi_endproc
 536              	.LFE15:
 537              		.size	MPU9250_getAccelXSelfTest, .-MPU9250_getAccelXSelfTest
 538              		.section	.text.MPU9250_setAccelXSelfTest,"ax",%progbits
 539              		.align	2
 540              		.global	MPU9250_setAccelXSelfTest
 541              		.thumb
 542              		.thumb_func
 543              		.type	MPU9250_setAccelXSelfTest, %function
 544              	MPU9250_setAccelXSelfTest:
 545              	.LFB16:
 279:mpu_9250.c    **** /** Set self-test enabled setting for accelerometer X axis.
 280:mpu_9250.c    ****  * @param enabled Self-test enabled value
 281:mpu_9250.c    ****  * @see MPU9250_RA_ACCEL_CONFIG
 282:mpu_9250.c    ****  */
 283:mpu_9250.c    **** void MPU9250_setAccelXSelfTest(bool enabled) {
 546              		.loc 1 283 0
 547              		.cfi_startproc
 548              		@ args = 0, pretend = 0, frame = 0
 549              		@ frame_needed = 0, uses_anonymous_args = 0
 550              	.LVL25:
 551 0000 08B5     		push	{r3, lr}
 552              		.cfi_def_cfa_offset 8
 553              		.cfi_offset 3, -8
 554              		.cfi_offset 14, -4
 555 0002 0346     		mov	r3, r0
 284:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_ACCEL_CONFIG, MPU9250_ACONFIG_XA_ST_BIT, enabled);
 556              		.loc 1 284 0
 557 0004 034A     		ldr	r2, .L57
 558 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 559              	.LVL26:
 560 0008 1C21     		movs	r1, #28
 561 000a 0722     		movs	r2, #7
 562 000c FFF7FEFF 		bl	I2CWriteBit
 563              	.LVL27:
 564 0010 08BD     		pop	{r3, pc}
 565              	.L58:
 566 0012 00BF     		.align	2
 567              	.L57:
 568 0014 00000000 		.word	devAddr
 569              		.cfi_endproc
 570              	.LFE16:
 571              		.size	MPU9250_setAccelXSelfTest, .-MPU9250_setAccelXSelfTest
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 16


 572              		.section	.text.MPU9250_getAccelYSelfTest,"ax",%progbits
 573              		.align	2
 574              		.global	MPU9250_getAccelYSelfTest
 575              		.thumb
 576              		.thumb_func
 577              		.type	MPU9250_getAccelYSelfTest, %function
 578              	MPU9250_getAccelYSelfTest:
 579              	.LFB17:
 285:mpu_9250.c    **** }
 286:mpu_9250.c    **** /** Get self-test enabled value for accelerometer Y axis.
 287:mpu_9250.c    ****  * @return Self-test enabled value
 288:mpu_9250.c    ****  * @see MPU9250_RA_ACCEL_CONFIG
 289:mpu_9250.c    ****  */
 290:mpu_9250.c    **** bool MPU9250_getAccelYSelfTest() {
 580              		.loc 1 290 0
 581              		.cfi_startproc
 582              		@ args = 0, pretend = 0, frame = 0
 583              		@ frame_needed = 0, uses_anonymous_args = 0
 584 0000 10B5     		push	{r4, lr}
 585              		.cfi_def_cfa_offset 8
 586              		.cfi_offset 4, -8
 587              		.cfi_offset 14, -4
 291:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_ACCEL_CONFIG, MPU9250_ACONFIG_YA_ST_BIT, buffer);
 588              		.loc 1 291 0
 589 0002 064C     		ldr	r4, .L61
 590 0004 064B     		ldr	r3, .L61+4
 591 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 592 0008 1C21     		movs	r1, #28
 593 000a 0622     		movs	r2, #6
 594 000c 2346     		mov	r3, r4
 595 000e FFF7FEFF 		bl	I2CReadBit
 596              	.LVL28:
 292:mpu_9250.c    ****     return buffer[0];
 597              		.loc 1 292 0
 598 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 293:mpu_9250.c    **** }
 599              		.loc 1 293 0
 600 0014 0030     		adds	r0, r0, #0
 601 0016 18BF     		it	ne
 602 0018 0120     		movne	r0, #1
 603 001a 10BD     		pop	{r4, pc}
 604              	.L62:
 605              		.align	2
 606              	.L61:
 607 001c 00000000 		.word	buffer
 608 0020 00000000 		.word	devAddr
 609              		.cfi_endproc
 610              	.LFE17:
 611              		.size	MPU9250_getAccelYSelfTest, .-MPU9250_getAccelYSelfTest
 612              		.section	.text.MPU9250_setAccelYSelfTest,"ax",%progbits
 613              		.align	2
 614              		.global	MPU9250_setAccelYSelfTest
 615              		.thumb
 616              		.thumb_func
 617              		.type	MPU9250_setAccelYSelfTest, %function
 618              	MPU9250_setAccelYSelfTest:
 619              	.LFB18:
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 17


 294:mpu_9250.c    **** /** Set self-test enabled value for accelerometer Y axis.
 295:mpu_9250.c    ****  * @param enabled Self-test enabled value
 296:mpu_9250.c    ****  * @see MPU9250_RA_ACCEL_CONFIG
 297:mpu_9250.c    ****  */
 298:mpu_9250.c    **** void MPU9250_setAccelYSelfTest(bool enabled) {
 620              		.loc 1 298 0
 621              		.cfi_startproc
 622              		@ args = 0, pretend = 0, frame = 0
 623              		@ frame_needed = 0, uses_anonymous_args = 0
 624              	.LVL29:
 625 0000 08B5     		push	{r3, lr}
 626              		.cfi_def_cfa_offset 8
 627              		.cfi_offset 3, -8
 628              		.cfi_offset 14, -4
 629 0002 0346     		mov	r3, r0
 299:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_ACCEL_CONFIG, MPU9250_ACONFIG_YA_ST_BIT, enabled);
 630              		.loc 1 299 0
 631 0004 034A     		ldr	r2, .L65
 632 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 633              	.LVL30:
 634 0008 1C21     		movs	r1, #28
 635 000a 0622     		movs	r2, #6
 636 000c FFF7FEFF 		bl	I2CWriteBit
 637              	.LVL31:
 638 0010 08BD     		pop	{r3, pc}
 639              	.L66:
 640 0012 00BF     		.align	2
 641              	.L65:
 642 0014 00000000 		.word	devAddr
 643              		.cfi_endproc
 644              	.LFE18:
 645              		.size	MPU9250_setAccelYSelfTest, .-MPU9250_setAccelYSelfTest
 646              		.section	.text.MPU9250_getAccelZSelfTest,"ax",%progbits
 647              		.align	2
 648              		.global	MPU9250_getAccelZSelfTest
 649              		.thumb
 650              		.thumb_func
 651              		.type	MPU9250_getAccelZSelfTest, %function
 652              	MPU9250_getAccelZSelfTest:
 653              	.LFB19:
 300:mpu_9250.c    **** }
 301:mpu_9250.c    **** /** Get self-test enabled value for accelerometer Z axis.
 302:mpu_9250.c    ****  * @return Self-test enabled value
 303:mpu_9250.c    ****  * @see MPU9250_RA_ACCEL_CONFIG
 304:mpu_9250.c    ****  */
 305:mpu_9250.c    **** bool MPU9250_getAccelZSelfTest() {
 654              		.loc 1 305 0
 655              		.cfi_startproc
 656              		@ args = 0, pretend = 0, frame = 0
 657              		@ frame_needed = 0, uses_anonymous_args = 0
 658 0000 10B5     		push	{r4, lr}
 659              		.cfi_def_cfa_offset 8
 660              		.cfi_offset 4, -8
 661              		.cfi_offset 14, -4
 306:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_ACCEL_CONFIG, MPU9250_ACONFIG_ZA_ST_BIT, buffer);
 662              		.loc 1 306 0
 663 0002 064C     		ldr	r4, .L69
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 18


 664 0004 064B     		ldr	r3, .L69+4
 665 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 666 0008 1C21     		movs	r1, #28
 667 000a 0522     		movs	r2, #5
 668 000c 2346     		mov	r3, r4
 669 000e FFF7FEFF 		bl	I2CReadBit
 670              	.LVL32:
 307:mpu_9250.c    ****     return buffer[0];
 671              		.loc 1 307 0
 672 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 308:mpu_9250.c    **** }
 673              		.loc 1 308 0
 674 0014 0030     		adds	r0, r0, #0
 675 0016 18BF     		it	ne
 676 0018 0120     		movne	r0, #1
 677 001a 10BD     		pop	{r4, pc}
 678              	.L70:
 679              		.align	2
 680              	.L69:
 681 001c 00000000 		.word	buffer
 682 0020 00000000 		.word	devAddr
 683              		.cfi_endproc
 684              	.LFE19:
 685              		.size	MPU9250_getAccelZSelfTest, .-MPU9250_getAccelZSelfTest
 686              		.section	.text.MPU9250_setAccelZSelfTest,"ax",%progbits
 687              		.align	2
 688              		.global	MPU9250_setAccelZSelfTest
 689              		.thumb
 690              		.thumb_func
 691              		.type	MPU9250_setAccelZSelfTest, %function
 692              	MPU9250_setAccelZSelfTest:
 693              	.LFB20:
 309:mpu_9250.c    **** /** Set self-test enabled value for accelerometer Z axis.
 310:mpu_9250.c    ****  * @param enabled Self-test enabled value
 311:mpu_9250.c    ****  * @see MPU9250_RA_ACCEL_CONFIG
 312:mpu_9250.c    ****  */
 313:mpu_9250.c    **** void MPU9250_setAccelZSelfTest(bool enabled) {
 694              		.loc 1 313 0
 695              		.cfi_startproc
 696              		@ args = 0, pretend = 0, frame = 0
 697              		@ frame_needed = 0, uses_anonymous_args = 0
 698              	.LVL33:
 699 0000 08B5     		push	{r3, lr}
 700              		.cfi_def_cfa_offset 8
 701              		.cfi_offset 3, -8
 702              		.cfi_offset 14, -4
 703 0002 0346     		mov	r3, r0
 314:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_ACCEL_CONFIG, MPU9250_ACONFIG_ZA_ST_BIT, enabled);
 704              		.loc 1 314 0
 705 0004 034A     		ldr	r2, .L73
 706 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 707              	.LVL34:
 708 0008 1C21     		movs	r1, #28
 709 000a 0522     		movs	r2, #5
 710 000c FFF7FEFF 		bl	I2CWriteBit
 711              	.LVL35:
 712 0010 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 19


 713              	.L74:
 714 0012 00BF     		.align	2
 715              	.L73:
 716 0014 00000000 		.word	devAddr
 717              		.cfi_endproc
 718              	.LFE20:
 719              		.size	MPU9250_setAccelZSelfTest, .-MPU9250_setAccelZSelfTest
 720              		.section	.text.MPU9250_getFullScaleAccelRange,"ax",%progbits
 721              		.align	2
 722              		.global	MPU9250_getFullScaleAccelRange
 723              		.thumb
 724              		.thumb_func
 725              		.type	MPU9250_getFullScaleAccelRange, %function
 726              	MPU9250_getFullScaleAccelRange:
 727              	.LFB21:
 315:mpu_9250.c    **** }
 316:mpu_9250.c    **** /** Get full-scale accelerometer range.
 317:mpu_9250.c    ****  * The FS_SEL parameter allows setting the full-scale range of the accelerometer
 318:mpu_9250.c    ****  * sensors, as described in the table below.
 319:mpu_9250.c    ****  *
 320:mpu_9250.c    ****  * <pre>
 321:mpu_9250.c    ****  * 0 = +/- 2g
 322:mpu_9250.c    ****  * 1 = +/- 4g
 323:mpu_9250.c    ****  * 2 = +/- 8g
 324:mpu_9250.c    ****  * 3 = +/- 16g
 325:mpu_9250.c    ****  * </pre>
 326:mpu_9250.c    ****  *
 327:mpu_9250.c    ****  * @return Current full-scale accelerometer range setting
 328:mpu_9250.c    ****  * @see MPU9250_ACCEL_FS_2
 329:mpu_9250.c    ****  * @see MPU9250_RA_ACCEL_CONFIG
 330:mpu_9250.c    ****  * @see MPU9250_ACONFIG_AFS_SEL_BIT
 331:mpu_9250.c    ****  * @see MPU9250_ACONFIG_AFS_SEL_LENGTH
 332:mpu_9250.c    ****  */
 333:mpu_9250.c    **** uint8_t MPU9250_getFullScaleAccelRange() {
 728              		.loc 1 333 0
 729              		.cfi_startproc
 730              		@ args = 0, pretend = 0, frame = 0
 731              		@ frame_needed = 0, uses_anonymous_args = 0
 732 0000 10B5     		push	{r4, lr}
 733              		.cfi_def_cfa_offset 8
 734              		.cfi_offset 4, -8
 735              		.cfi_offset 14, -4
 736 0002 82B0     		sub	sp, sp, #8
 737              		.cfi_def_cfa_offset 16
 334:mpu_9250.c    ****     I2CReadBits(devAddr, MPU9250_RA_ACCEL_CONFIG, MPU9250_ACONFIG_AFS_SEL_BIT, MPU9250_ACONFIG_AFS_
 738              		.loc 1 334 0
 739 0004 054B     		ldr	r3, .L77
 740 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 741 0008 054C     		ldr	r4, .L77+4
 742 000a 0094     		str	r4, [sp]
 743 000c 1C21     		movs	r1, #28
 744 000e 0422     		movs	r2, #4
 745 0010 0223     		movs	r3, #2
 746 0012 FFF7FEFF 		bl	I2CReadBits
 747              	.LVL36:
 335:mpu_9250.c    ****     return buffer[0];
 336:mpu_9250.c    **** }
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 20


 748              		.loc 1 336 0
 749 0016 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 750 0018 02B0     		add	sp, sp, #8
 751              		.cfi_def_cfa_offset 8
 752              		@ sp needed
 753 001a 10BD     		pop	{r4, pc}
 754              	.L78:
 755              		.align	2
 756              	.L77:
 757 001c 00000000 		.word	devAddr
 758 0020 00000000 		.word	buffer
 759              		.cfi_endproc
 760              	.LFE21:
 761              		.size	MPU9250_getFullScaleAccelRange, .-MPU9250_getFullScaleAccelRange
 762              		.section	.text.MPU9250_setFullScaleAccelRange,"ax",%progbits
 763              		.align	2
 764              		.global	MPU9250_setFullScaleAccelRange
 765              		.thumb
 766              		.thumb_func
 767              		.type	MPU9250_setFullScaleAccelRange, %function
 768              	MPU9250_setFullScaleAccelRange:
 769              	.LFB22:
 337:mpu_9250.c    **** /** Set full-scale accelerometer range.
 338:mpu_9250.c    ****  * @param range New full-scale accelerometer range setting
 339:mpu_9250.c    ****  * @see getFullScaleAccelRange()
 340:mpu_9250.c    ****  */
 341:mpu_9250.c    **** void MPU9250_setFullScaleAccelRange(uint8_t range) {
 770              		.loc 1 341 0
 771              		.cfi_startproc
 772              		@ args = 0, pretend = 0, frame = 0
 773              		@ frame_needed = 0, uses_anonymous_args = 0
 774              	.LVL37:
 775 0000 00B5     		push	{lr}
 776              		.cfi_def_cfa_offset 4
 777              		.cfi_offset 14, -4
 778 0002 83B0     		sub	sp, sp, #12
 779              		.cfi_def_cfa_offset 16
 342:mpu_9250.c    ****     I2CWriteBits(devAddr, MPU9250_RA_ACCEL_CONFIG, MPU9250_ACONFIG_AFS_SEL_BIT, MPU9250_ACONFIG_AFS
 780              		.loc 1 342 0
 781 0004 054B     		ldr	r3, .L81
 782 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 783 0008 0090     		str	r0, [sp]
 784 000a 1846     		mov	r0, r3
 785              	.LVL38:
 786 000c 1C21     		movs	r1, #28
 787 000e 0422     		movs	r2, #4
 788 0010 0223     		movs	r3, #2
 789 0012 FFF7FEFF 		bl	I2CWriteBits
 790              	.LVL39:
 343:mpu_9250.c    **** }
 791              		.loc 1 343 0
 792 0016 03B0     		add	sp, sp, #12
 793              		.cfi_def_cfa_offset 4
 794              		@ sp needed
 795 0018 5DF804FB 		ldr	pc, [sp], #4
 796              	.L82:
 797              		.align	2
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 21


 798              	.L81:
 799 001c 00000000 		.word	devAddr
 800              		.cfi_endproc
 801              	.LFE22:
 802              		.size	MPU9250_setFullScaleAccelRange, .-MPU9250_setFullScaleAccelRange
 803              		.section	.text.MPU9250_getDHPFMode,"ax",%progbits
 804              		.align	2
 805              		.global	MPU9250_getDHPFMode
 806              		.thumb
 807              		.thumb_func
 808              		.type	MPU9250_getDHPFMode, %function
 809              	MPU9250_getDHPFMode:
 810              	.LFB23:
 344:mpu_9250.c    **** /** Get the high-pass filter configuration.
 345:mpu_9250.c    ****  * The DHPF is a filter module in the path leading to motion detectors (Free
 346:mpu_9250.c    ****  * Fall, Motion threshold, and Zero Motion). The high pass filter output is not
 347:mpu_9250.c    ****  * available to the data registers (see Figure in Section 8 of the MPU-6000/
 348:mpu_9250.c    ****  * MPU-9250 Product Specification document).
 349:mpu_9250.c    ****  *
 350:mpu_9250.c    ****  * The high pass filter has three modes:
 351:mpu_9250.c    ****  *
 352:mpu_9250.c    ****  * <pre>
 353:mpu_9250.c    ****  *    Reset: The filter output settles to zero within one sample. This
 354:mpu_9250.c    ****  *           effectively disables the high pass filter. This mode may be toggled
 355:mpu_9250.c    ****  *           to quickly settle the filter.
 356:mpu_9250.c    ****  *
 357:mpu_9250.c    ****  *    On:    The high pass filter will pass signals above the cut off frequency.
 358:mpu_9250.c    ****  *
 359:mpu_9250.c    ****  *    Hold:  When triggered, the filter holds the present sample. The filter
 360:mpu_9250.c    ****  *           output will be the difference between the input sample and the held
 361:mpu_9250.c    ****  *           sample.
 362:mpu_9250.c    ****  * </pre>
 363:mpu_9250.c    ****  *
 364:mpu_9250.c    ****  * <pre>
 365:mpu_9250.c    ****  * ACCEL_HPF | Filter Mode | Cut-off Frequency
 366:mpu_9250.c    ****  * ----------+-------------+------------------
 367:mpu_9250.c    ****  * 0         | Reset       | None
 368:mpu_9250.c    ****  * 1         | On          | 5Hz
 369:mpu_9250.c    ****  * 2         | On          | 2.5Hz
 370:mpu_9250.c    ****  * 3         | On          | 1.25Hz
 371:mpu_9250.c    ****  * 4         | On          | 0.63Hz
 372:mpu_9250.c    ****  * 7         | Hold        | None
 373:mpu_9250.c    ****  * </pre>
 374:mpu_9250.c    ****  *
 375:mpu_9250.c    ****  * @return Current high-pass filter configuration
 376:mpu_9250.c    ****  * @see MPU9250_DHPF_RESET
 377:mpu_9250.c    ****  * @see MPU9250_RA_ACCEL_CONFIG
 378:mpu_9250.c    ****  */
 379:mpu_9250.c    **** uint8_t MPU9250_getDHPFMode() {
 811              		.loc 1 379 0
 812              		.cfi_startproc
 813              		@ args = 0, pretend = 0, frame = 0
 814              		@ frame_needed = 0, uses_anonymous_args = 0
 815 0000 10B5     		push	{r4, lr}
 816              		.cfi_def_cfa_offset 8
 817              		.cfi_offset 4, -8
 818              		.cfi_offset 14, -4
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 22


 819 0002 82B0     		sub	sp, sp, #8
 820              		.cfi_def_cfa_offset 16
 380:mpu_9250.c    ****     I2CReadBits(devAddr, MPU9250_RA_ACCEL_CONFIG, MPU9250_ACONFIG_ACCEL_HPF_BIT, MPU9250_ACONFIG_AC
 821              		.loc 1 380 0
 822 0004 054B     		ldr	r3, .L85
 823 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 824 0008 054C     		ldr	r4, .L85+4
 825 000a 0094     		str	r4, [sp]
 826 000c 1C21     		movs	r1, #28
 827 000e 0222     		movs	r2, #2
 828 0010 0323     		movs	r3, #3
 829 0012 FFF7FEFF 		bl	I2CReadBits
 830              	.LVL40:
 381:mpu_9250.c    ****     return buffer[0];
 382:mpu_9250.c    **** }
 831              		.loc 1 382 0
 832 0016 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 833 0018 02B0     		add	sp, sp, #8
 834              		.cfi_def_cfa_offset 8
 835              		@ sp needed
 836 001a 10BD     		pop	{r4, pc}
 837              	.L86:
 838              		.align	2
 839              	.L85:
 840 001c 00000000 		.word	devAddr
 841 0020 00000000 		.word	buffer
 842              		.cfi_endproc
 843              	.LFE23:
 844              		.size	MPU9250_getDHPFMode, .-MPU9250_getDHPFMode
 845              		.section	.text.MPU9250_setDHPFMode,"ax",%progbits
 846              		.align	2
 847              		.global	MPU9250_setDHPFMode
 848              		.thumb
 849              		.thumb_func
 850              		.type	MPU9250_setDHPFMode, %function
 851              	MPU9250_setDHPFMode:
 852              	.LFB24:
 383:mpu_9250.c    **** /** Set the high-pass filter configuration.
 384:mpu_9250.c    ****  * @param bandwidth New high-pass filter configuration
 385:mpu_9250.c    ****  * @see setDHPFMode()
 386:mpu_9250.c    ****  * @see MPU9250_DHPF_RESET
 387:mpu_9250.c    ****  * @see MPU9250_RA_ACCEL_CONFIG
 388:mpu_9250.c    ****  */
 389:mpu_9250.c    **** void MPU9250_setDHPFMode(uint8_t bandwidth) {
 853              		.loc 1 389 0
 854              		.cfi_startproc
 855              		@ args = 0, pretend = 0, frame = 0
 856              		@ frame_needed = 0, uses_anonymous_args = 0
 857              	.LVL41:
 858 0000 00B5     		push	{lr}
 859              		.cfi_def_cfa_offset 4
 860              		.cfi_offset 14, -4
 861 0002 83B0     		sub	sp, sp, #12
 862              		.cfi_def_cfa_offset 16
 390:mpu_9250.c    ****     I2CWriteBits(devAddr, MPU9250_RA_ACCEL_CONFIG, MPU9250_ACONFIG_ACCEL_HPF_BIT, MPU9250_ACONFIG_A
 863              		.loc 1 390 0
 864 0004 054B     		ldr	r3, .L89
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 23


 865 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 866 0008 0090     		str	r0, [sp]
 867 000a 1846     		mov	r0, r3
 868              	.LVL42:
 869 000c 1C21     		movs	r1, #28
 870 000e 0222     		movs	r2, #2
 871 0010 0323     		movs	r3, #3
 872 0012 FFF7FEFF 		bl	I2CWriteBits
 873              	.LVL43:
 391:mpu_9250.c    **** }
 874              		.loc 1 391 0
 875 0016 03B0     		add	sp, sp, #12
 876              		.cfi_def_cfa_offset 4
 877              		@ sp needed
 878 0018 5DF804FB 		ldr	pc, [sp], #4
 879              	.L90:
 880              		.align	2
 881              	.L89:
 882 001c 00000000 		.word	devAddr
 883              		.cfi_endproc
 884              	.LFE24:
 885              		.size	MPU9250_setDHPFMode, .-MPU9250_setDHPFMode
 886              		.section	.text.MPU9250_getFreefallDetectionThreshold,"ax",%progbits
 887              		.align	2
 888              		.global	MPU9250_getFreefallDetectionThreshold
 889              		.thumb
 890              		.thumb_func
 891              		.type	MPU9250_getFreefallDetectionThreshold, %function
 892              	MPU9250_getFreefallDetectionThreshold:
 893              	.LFB25:
 392:mpu_9250.c    **** 
 393:mpu_9250.c    **** // FF_THR register
 394:mpu_9250.c    **** 
 395:mpu_9250.c    **** /** Get free-fall event acceleration threshold.
 396:mpu_9250.c    ****  * This register configures the detection threshold for Free Fall event
 397:mpu_9250.c    ****  * detection. The unit of FF_THR is 1LSB = 2mg. Free Fall is detected when the
 398:mpu_9250.c    ****  * absolute value of the accelerometer measurements for the three axes are each
 399:mpu_9250.c    ****  * less than the detection threshold. This condition increments the Free Fall
 400:mpu_9250.c    ****  * duration counter (Register 30). The Free Fall interrupt is triggered when the
 401:mpu_9250.c    ****  * Free Fall duration counter reaches the time specified in FF_DUR.
 402:mpu_9250.c    ****  *
 403:mpu_9250.c    ****  * For more details on the Free Fall detection interrupt, see Section 8.2 of the
 404:mpu_9250.c    ****  * MPU-6000/MPU-9250 Product Specification document as well as Registers 56 and
 405:mpu_9250.c    ****  * 58 of this document.
 406:mpu_9250.c    ****  *
 407:mpu_9250.c    ****  * @return Current free-fall acceleration threshold value (LSB = 2mg)
 408:mpu_9250.c    ****  * @see MPU9250_RA_FF_THR
 409:mpu_9250.c    ****  */
 410:mpu_9250.c    **** uint8_t MPU9250_getFreefallDetectionThreshold() {
 894              		.loc 1 410 0
 895              		.cfi_startproc
 896              		@ args = 0, pretend = 0, frame = 0
 897              		@ frame_needed = 0, uses_anonymous_args = 0
 898 0000 10B5     		push	{r4, lr}
 899              		.cfi_def_cfa_offset 8
 900              		.cfi_offset 4, -8
 901              		.cfi_offset 14, -4
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 24


 411:mpu_9250.c    ****     I2CReadByte(devAddr, MPU9250_RA_FF_THR, buffer);
 902              		.loc 1 411 0
 903 0002 044C     		ldr	r4, .L93
 904 0004 044B     		ldr	r3, .L93+4
 905 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 906 0008 1D21     		movs	r1, #29
 907 000a 2246     		mov	r2, r4
 908 000c FFF7FEFF 		bl	I2CReadByte
 909              	.LVL44:
 412:mpu_9250.c    ****     return buffer[0];
 413:mpu_9250.c    **** }
 910              		.loc 1 413 0
 911 0010 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 912 0012 10BD     		pop	{r4, pc}
 913              	.L94:
 914              		.align	2
 915              	.L93:
 916 0014 00000000 		.word	buffer
 917 0018 00000000 		.word	devAddr
 918              		.cfi_endproc
 919              	.LFE25:
 920              		.size	MPU9250_getFreefallDetectionThreshold, .-MPU9250_getFreefallDetectionThreshold
 921              		.section	.text.MPU9250_setFreefallDetectionThreshold,"ax",%progbits
 922              		.align	2
 923              		.global	MPU9250_setFreefallDetectionThreshold
 924              		.thumb
 925              		.thumb_func
 926              		.type	MPU9250_setFreefallDetectionThreshold, %function
 927              	MPU9250_setFreefallDetectionThreshold:
 928              	.LFB26:
 414:mpu_9250.c    **** /** Get free-fall event acceleration threshold.
 415:mpu_9250.c    ****  * @param threshold New free-fall acceleration threshold value (LSB = 2mg)
 416:mpu_9250.c    ****  * @see getFreefallDetectionThreshold()
 417:mpu_9250.c    ****  * @see MPU9250_RA_FF_THR
 418:mpu_9250.c    ****  */
 419:mpu_9250.c    **** void MPU9250_setFreefallDetectionThreshold(uint8_t threshold) {
 929              		.loc 1 419 0
 930              		.cfi_startproc
 931              		@ args = 0, pretend = 0, frame = 0
 932              		@ frame_needed = 0, uses_anonymous_args = 0
 933              	.LVL45:
 934 0000 08B5     		push	{r3, lr}
 935              		.cfi_def_cfa_offset 8
 936              		.cfi_offset 3, -8
 937              		.cfi_offset 14, -4
 938 0002 0246     		mov	r2, r0
 420:mpu_9250.c    ****     I2CWriteByte(devAddr, MPU9250_RA_FF_THR, threshold);
 939              		.loc 1 420 0
 940 0004 024B     		ldr	r3, .L97
 941 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 942              	.LVL46:
 943 0008 1D21     		movs	r1, #29
 944 000a FFF7FEFF 		bl	I2CWriteByte
 945              	.LVL47:
 946 000e 08BD     		pop	{r3, pc}
 947              	.L98:
 948              		.align	2
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 25


 949              	.L97:
 950 0010 00000000 		.word	devAddr
 951              		.cfi_endproc
 952              	.LFE26:
 953              		.size	MPU9250_setFreefallDetectionThreshold, .-MPU9250_setFreefallDetectionThreshold
 954              		.section	.text.MPU9250_getFreefallDetectionDuration,"ax",%progbits
 955              		.align	2
 956              		.global	MPU9250_getFreefallDetectionDuration
 957              		.thumb
 958              		.thumb_func
 959              		.type	MPU9250_getFreefallDetectionDuration, %function
 960              	MPU9250_getFreefallDetectionDuration:
 961              	.LFB27:
 421:mpu_9250.c    **** }
 422:mpu_9250.c    **** 
 423:mpu_9250.c    **** // FF_DUR register
 424:mpu_9250.c    **** 
 425:mpu_9250.c    **** /** Get free-fall event duration threshold.
 426:mpu_9250.c    ****  * This register configures the duration counter threshold for Free Fall event
 427:mpu_9250.c    ****  * detection. The duration counter ticks at 1kHz, therefore FF_DUR has a unit
 428:mpu_9250.c    ****  * of 1 LSB = 1 ms.
 429:mpu_9250.c    ****  *
 430:mpu_9250.c    ****  * The Free Fall duration counter increments while the absolute value of the
 431:mpu_9250.c    ****  * accelerometer measurements are each less than the detection threshold
 432:mpu_9250.c    ****  * (Register 29). The Free Fall interrupt is triggered when the Free Fall
 433:mpu_9250.c    ****  * duration counter reaches the time specified in this register.
 434:mpu_9250.c    ****  *
 435:mpu_9250.c    ****  * For more details on the Free Fall detection interrupt, see Section 8.2 of
 436:mpu_9250.c    ****  * the MPU-6000/MPU-9250 Product Specification document as well as Registers 56
 437:mpu_9250.c    ****  * and 58 of this document.
 438:mpu_9250.c    ****  *
 439:mpu_9250.c    ****  * @return Current free-fall duration threshold value (LSB = 1ms)
 440:mpu_9250.c    ****  * @see MPU9250_RA_FF_DUR
 441:mpu_9250.c    ****  */
 442:mpu_9250.c    **** uint8_t MPU9250_getFreefallDetectionDuration() {
 962              		.loc 1 442 0
 963              		.cfi_startproc
 964              		@ args = 0, pretend = 0, frame = 0
 965              		@ frame_needed = 0, uses_anonymous_args = 0
 966 0000 10B5     		push	{r4, lr}
 967              		.cfi_def_cfa_offset 8
 968              		.cfi_offset 4, -8
 969              		.cfi_offset 14, -4
 443:mpu_9250.c    ****     I2CReadByte(devAddr, MPU9250_RA_FF_DUR, buffer);
 970              		.loc 1 443 0
 971 0002 044C     		ldr	r4, .L101
 972 0004 044B     		ldr	r3, .L101+4
 973 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 974 0008 1E21     		movs	r1, #30
 975 000a 2246     		mov	r2, r4
 976 000c FFF7FEFF 		bl	I2CReadByte
 977              	.LVL48:
 444:mpu_9250.c    ****     return buffer[0];
 445:mpu_9250.c    **** }
 978              		.loc 1 445 0
 979 0010 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 980 0012 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 26


 981              	.L102:
 982              		.align	2
 983              	.L101:
 984 0014 00000000 		.word	buffer
 985 0018 00000000 		.word	devAddr
 986              		.cfi_endproc
 987              	.LFE27:
 988              		.size	MPU9250_getFreefallDetectionDuration, .-MPU9250_getFreefallDetectionDuration
 989              		.section	.text.MPU9250_setFreefallDetectionDuration,"ax",%progbits
 990              		.align	2
 991              		.global	MPU9250_setFreefallDetectionDuration
 992              		.thumb
 993              		.thumb_func
 994              		.type	MPU9250_setFreefallDetectionDuration, %function
 995              	MPU9250_setFreefallDetectionDuration:
 996              	.LFB28:
 446:mpu_9250.c    **** /** Get free-fall event duration threshold.
 447:mpu_9250.c    ****  * @param duration New free-fall duration threshold value (LSB = 1ms)
 448:mpu_9250.c    ****  * @see getFreefallDetectionDuration()
 449:mpu_9250.c    ****  * @see MPU9250_RA_FF_DUR
 450:mpu_9250.c    ****  */
 451:mpu_9250.c    **** void MPU9250_setFreefallDetectionDuration(uint8_t duration) {
 997              		.loc 1 451 0
 998              		.cfi_startproc
 999              		@ args = 0, pretend = 0, frame = 0
 1000              		@ frame_needed = 0, uses_anonymous_args = 0
 1001              	.LVL49:
 1002 0000 08B5     		push	{r3, lr}
 1003              		.cfi_def_cfa_offset 8
 1004              		.cfi_offset 3, -8
 1005              		.cfi_offset 14, -4
 1006 0002 0246     		mov	r2, r0
 452:mpu_9250.c    ****     I2CWriteByte(devAddr, MPU9250_RA_FF_DUR, duration);
 1007              		.loc 1 452 0
 1008 0004 024B     		ldr	r3, .L105
 1009 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1010              	.LVL50:
 1011 0008 1E21     		movs	r1, #30
 1012 000a FFF7FEFF 		bl	I2CWriteByte
 1013              	.LVL51:
 1014 000e 08BD     		pop	{r3, pc}
 1015              	.L106:
 1016              		.align	2
 1017              	.L105:
 1018 0010 00000000 		.word	devAddr
 1019              		.cfi_endproc
 1020              	.LFE28:
 1021              		.size	MPU9250_setFreefallDetectionDuration, .-MPU9250_setFreefallDetectionDuration
 1022              		.section	.text.MPU9250_getMotionDetectionThreshold,"ax",%progbits
 1023              		.align	2
 1024              		.global	MPU9250_getMotionDetectionThreshold
 1025              		.thumb
 1026              		.thumb_func
 1027              		.type	MPU9250_getMotionDetectionThreshold, %function
 1028              	MPU9250_getMotionDetectionThreshold:
 1029              	.LFB29:
 453:mpu_9250.c    **** }
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 27


 454:mpu_9250.c    **** 
 455:mpu_9250.c    **** // MOT_THR register
 456:mpu_9250.c    **** 
 457:mpu_9250.c    **** /** Get motion detection event acceleration threshold.
 458:mpu_9250.c    ****  * This register configures the detection threshold for Motion interrupt
 459:mpu_9250.c    ****  * generation. The unit of MOT_THR is 1LSB = 2mg. Motion is detected when the
 460:mpu_9250.c    ****  * absolute value of any of the accelerometer measurements exceeds this Motion
 461:mpu_9250.c    ****  * detection threshold. This condition increments the Motion detection duration
 462:mpu_9250.c    ****  * counter (Register 32). The Motion detection interrupt is triggered when the
 463:mpu_9250.c    ****  * Motion Detection counter reaches the time count specified in MOT_DUR
 464:mpu_9250.c    ****  * (Register 32).
 465:mpu_9250.c    ****  *
 466:mpu_9250.c    ****  * The Motion interrupt will indicate the axis and polarity of detected motion
 467:mpu_9250.c    ****  * in MOT_DETECT_STATUS (Register 97).
 468:mpu_9250.c    ****  *
 469:mpu_9250.c    ****  * For more details on the Motion detection interrupt, see Section 8.3 of the
 470:mpu_9250.c    ****  * MPU-6000/MPU-9250 Product Specification document as well as Registers 56 and
 471:mpu_9250.c    ****  * 58 of this document.
 472:mpu_9250.c    ****  *
 473:mpu_9250.c    ****  * @return Current motion detection acceleration threshold value (LSB = 2mg)
 474:mpu_9250.c    ****  * @see MPU9250_RA_MOT_THR
 475:mpu_9250.c    ****  */
 476:mpu_9250.c    **** uint8_t MPU9250_getMotionDetectionThreshold() {
 1030              		.loc 1 476 0
 1031              		.cfi_startproc
 1032              		@ args = 0, pretend = 0, frame = 0
 1033              		@ frame_needed = 0, uses_anonymous_args = 0
 1034 0000 10B5     		push	{r4, lr}
 1035              		.cfi_def_cfa_offset 8
 1036              		.cfi_offset 4, -8
 1037              		.cfi_offset 14, -4
 477:mpu_9250.c    ****     I2CReadByte(devAddr, MPU9250_RA_MOT_THR, buffer);
 1038              		.loc 1 477 0
 1039 0002 044C     		ldr	r4, .L109
 1040 0004 044B     		ldr	r3, .L109+4
 1041 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1042 0008 1F21     		movs	r1, #31
 1043 000a 2246     		mov	r2, r4
 1044 000c FFF7FEFF 		bl	I2CReadByte
 1045              	.LVL52:
 478:mpu_9250.c    ****     return buffer[0];
 479:mpu_9250.c    **** }
 1046              		.loc 1 479 0
 1047 0010 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 1048 0012 10BD     		pop	{r4, pc}
 1049              	.L110:
 1050              		.align	2
 1051              	.L109:
 1052 0014 00000000 		.word	buffer
 1053 0018 00000000 		.word	devAddr
 1054              		.cfi_endproc
 1055              	.LFE29:
 1056              		.size	MPU9250_getMotionDetectionThreshold, .-MPU9250_getMotionDetectionThreshold
 1057              		.section	.text.MPU9250_setMotionDetectionThreshold,"ax",%progbits
 1058              		.align	2
 1059              		.global	MPU9250_setMotionDetectionThreshold
 1060              		.thumb
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 28


 1061              		.thumb_func
 1062              		.type	MPU9250_setMotionDetectionThreshold, %function
 1063              	MPU9250_setMotionDetectionThreshold:
 1064              	.LFB30:
 480:mpu_9250.c    **** /** Set free-fall event acceleration threshold.
 481:mpu_9250.c    ****  * @param threshold New motion detection acceleration threshold value (LSB = 2mg)
 482:mpu_9250.c    ****  * @see getMotionDetectionThreshold()
 483:mpu_9250.c    ****  * @see MPU9250_RA_MOT_THR
 484:mpu_9250.c    ****  */
 485:mpu_9250.c    **** void MPU9250_setMotionDetectionThreshold(uint8_t threshold) {
 1065              		.loc 1 485 0
 1066              		.cfi_startproc
 1067              		@ args = 0, pretend = 0, frame = 0
 1068              		@ frame_needed = 0, uses_anonymous_args = 0
 1069              	.LVL53:
 1070 0000 08B5     		push	{r3, lr}
 1071              		.cfi_def_cfa_offset 8
 1072              		.cfi_offset 3, -8
 1073              		.cfi_offset 14, -4
 1074 0002 0246     		mov	r2, r0
 486:mpu_9250.c    ****     I2CWriteByte(devAddr, MPU9250_RA_MOT_THR, threshold);
 1075              		.loc 1 486 0
 1076 0004 024B     		ldr	r3, .L113
 1077 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1078              	.LVL54:
 1079 0008 1F21     		movs	r1, #31
 1080 000a FFF7FEFF 		bl	I2CWriteByte
 1081              	.LVL55:
 1082 000e 08BD     		pop	{r3, pc}
 1083              	.L114:
 1084              		.align	2
 1085              	.L113:
 1086 0010 00000000 		.word	devAddr
 1087              		.cfi_endproc
 1088              	.LFE30:
 1089              		.size	MPU9250_setMotionDetectionThreshold, .-MPU9250_setMotionDetectionThreshold
 1090              		.section	.text.MPU9250_getMotionDetectionDuration,"ax",%progbits
 1091              		.align	2
 1092              		.global	MPU9250_getMotionDetectionDuration
 1093              		.thumb
 1094              		.thumb_func
 1095              		.type	MPU9250_getMotionDetectionDuration, %function
 1096              	MPU9250_getMotionDetectionDuration:
 1097              	.LFB31:
 487:mpu_9250.c    **** }
 488:mpu_9250.c    **** 
 489:mpu_9250.c    **** // MOT_DUR register
 490:mpu_9250.c    **** 
 491:mpu_9250.c    **** /** Get motion detection event duration threshold.
 492:mpu_9250.c    ****  * This register configures the duration counter threshold for Motion interrupt
 493:mpu_9250.c    ****  * generation. The duration counter ticks at 1 kHz, therefore MOT_DUR has a unit
 494:mpu_9250.c    ****  * of 1LSB = 1ms. The Motion detection duration counter increments when the
 495:mpu_9250.c    ****  * absolute value of any of the accelerometer measurements exceeds the Motion
 496:mpu_9250.c    ****  * detection threshold (Register 31). The Motion detection interrupt is
 497:mpu_9250.c    ****  * triggered when the Motion detection counter reaches the time count specified
 498:mpu_9250.c    ****  * in this register.
 499:mpu_9250.c    ****  *
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 29


 500:mpu_9250.c    ****  * For more details on the Motion detection interrupt, see Section 8.3 of the
 501:mpu_9250.c    ****  * MPU-6000/MPU-9250 Product Specification document.
 502:mpu_9250.c    ****  *
 503:mpu_9250.c    ****  * @return Current motion detection duration threshold value (LSB = 1ms)
 504:mpu_9250.c    ****  * @see MPU9250_RA_MOT_DUR
 505:mpu_9250.c    ****  */
 506:mpu_9250.c    **** uint8_t MPU9250_getMotionDetectionDuration() {
 1098              		.loc 1 506 0
 1099              		.cfi_startproc
 1100              		@ args = 0, pretend = 0, frame = 0
 1101              		@ frame_needed = 0, uses_anonymous_args = 0
 1102 0000 10B5     		push	{r4, lr}
 1103              		.cfi_def_cfa_offset 8
 1104              		.cfi_offset 4, -8
 1105              		.cfi_offset 14, -4
 507:mpu_9250.c    ****     I2CReadByte(devAddr, MPU9250_RA_MOT_DUR, buffer);
 1106              		.loc 1 507 0
 1107 0002 044C     		ldr	r4, .L117
 1108 0004 044B     		ldr	r3, .L117+4
 1109 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1110 0008 2021     		movs	r1, #32
 1111 000a 2246     		mov	r2, r4
 1112 000c FFF7FEFF 		bl	I2CReadByte
 1113              	.LVL56:
 508:mpu_9250.c    ****     return buffer[0];
 509:mpu_9250.c    **** }
 1114              		.loc 1 509 0
 1115 0010 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 1116 0012 10BD     		pop	{r4, pc}
 1117              	.L118:
 1118              		.align	2
 1119              	.L117:
 1120 0014 00000000 		.word	buffer
 1121 0018 00000000 		.word	devAddr
 1122              		.cfi_endproc
 1123              	.LFE31:
 1124              		.size	MPU9250_getMotionDetectionDuration, .-MPU9250_getMotionDetectionDuration
 1125              		.section	.text.MPU9250_setMotionDetectionDuration,"ax",%progbits
 1126              		.align	2
 1127              		.global	MPU9250_setMotionDetectionDuration
 1128              		.thumb
 1129              		.thumb_func
 1130              		.type	MPU9250_setMotionDetectionDuration, %function
 1131              	MPU9250_setMotionDetectionDuration:
 1132              	.LFB32:
 510:mpu_9250.c    **** /** Set motion detection event duration threshold.
 511:mpu_9250.c    ****  * @param duration New motion detection duration threshold value (LSB = 1ms)
 512:mpu_9250.c    ****  * @see getMotionDetectionDuration()
 513:mpu_9250.c    ****  * @see MPU9250_RA_MOT_DUR
 514:mpu_9250.c    ****  */
 515:mpu_9250.c    **** void MPU9250_setMotionDetectionDuration(uint8_t duration) {
 1133              		.loc 1 515 0
 1134              		.cfi_startproc
 1135              		@ args = 0, pretend = 0, frame = 0
 1136              		@ frame_needed = 0, uses_anonymous_args = 0
 1137              	.LVL57:
 1138 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 30


 1139              		.cfi_def_cfa_offset 8
 1140              		.cfi_offset 3, -8
 1141              		.cfi_offset 14, -4
 1142 0002 0246     		mov	r2, r0
 516:mpu_9250.c    ****     I2CWriteByte(devAddr, MPU9250_RA_MOT_DUR, duration);
 1143              		.loc 1 516 0
 1144 0004 024B     		ldr	r3, .L121
 1145 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1146              	.LVL58:
 1147 0008 2021     		movs	r1, #32
 1148 000a FFF7FEFF 		bl	I2CWriteByte
 1149              	.LVL59:
 1150 000e 08BD     		pop	{r3, pc}
 1151              	.L122:
 1152              		.align	2
 1153              	.L121:
 1154 0010 00000000 		.word	devAddr
 1155              		.cfi_endproc
 1156              	.LFE32:
 1157              		.size	MPU9250_setMotionDetectionDuration, .-MPU9250_setMotionDetectionDuration
 1158              		.section	.text.MPU9250_getZeroMotionDetectionThreshold,"ax",%progbits
 1159              		.align	2
 1160              		.global	MPU9250_getZeroMotionDetectionThreshold
 1161              		.thumb
 1162              		.thumb_func
 1163              		.type	MPU9250_getZeroMotionDetectionThreshold, %function
 1164              	MPU9250_getZeroMotionDetectionThreshold:
 1165              	.LFB33:
 517:mpu_9250.c    **** }
 518:mpu_9250.c    **** 
 519:mpu_9250.c    **** // ZRMOT_THR register
 520:mpu_9250.c    **** 
 521:mpu_9250.c    **** /** Get zero motion detection event acceleration threshold.
 522:mpu_9250.c    ****  * This register configures the detection threshold for Zero Motion interrupt
 523:mpu_9250.c    ****  * generation. The unit of ZRMOT_THR is 1LSB = 2mg. Zero Motion is detected when
 524:mpu_9250.c    ****  * the absolute value of the accelerometer measurements for the 3 axes are each
 525:mpu_9250.c    ****  * less than the detection threshold. This condition increments the Zero Motion
 526:mpu_9250.c    ****  * duration counter (Register 34). The Zero Motion interrupt is triggered when
 527:mpu_9250.c    ****  * the Zero Motion duration counter reaches the time count specified in
 528:mpu_9250.c    ****  * ZRMOT_DUR (Register 34).
 529:mpu_9250.c    ****  *
 530:mpu_9250.c    ****  * Unlike Free Fall or Motion detection, Zero Motion detection triggers an
 531:mpu_9250.c    ****  * interrupt both when Zero Motion is first detected and when Zero Motion is no
 532:mpu_9250.c    ****  * longer detected.
 533:mpu_9250.c    ****  *
 534:mpu_9250.c    ****  * When a zero motion event is detected, a Zero Motion Status will be indicated
 535:mpu_9250.c    ****  * in the MOT_DETECT_STATUS register (Register 97). When a motion-to-zero-motion
 536:mpu_9250.c    ****  * condition is detected, the status bit is set to 1. When a zero-motion-to-
 537:mpu_9250.c    ****  * motion condition is detected, the status bit is set to 0.
 538:mpu_9250.c    ****  *
 539:mpu_9250.c    ****  * For more details on the Zero Motion detection interrupt, see Section 8.4 of
 540:mpu_9250.c    ****  * the MPU-6000/MPU-9250 Product Specification document as well as Registers 56
 541:mpu_9250.c    ****  * and 58 of this document.
 542:mpu_9250.c    ****  *
 543:mpu_9250.c    ****  * @return Current zero motion detection acceleration threshold value (LSB = 2mg)
 544:mpu_9250.c    ****  * @see MPU9250_RA_ZRMOT_THR
 545:mpu_9250.c    ****  */
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 31


 546:mpu_9250.c    **** uint8_t MPU9250_getZeroMotionDetectionThreshold() {
 1166              		.loc 1 546 0
 1167              		.cfi_startproc
 1168              		@ args = 0, pretend = 0, frame = 0
 1169              		@ frame_needed = 0, uses_anonymous_args = 0
 1170 0000 10B5     		push	{r4, lr}
 1171              		.cfi_def_cfa_offset 8
 1172              		.cfi_offset 4, -8
 1173              		.cfi_offset 14, -4
 547:mpu_9250.c    ****     I2CReadByte(devAddr, MPU9250_RA_ZRMOT_THR, buffer);
 1174              		.loc 1 547 0
 1175 0002 044C     		ldr	r4, .L125
 1176 0004 044B     		ldr	r3, .L125+4
 1177 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1178 0008 2121     		movs	r1, #33
 1179 000a 2246     		mov	r2, r4
 1180 000c FFF7FEFF 		bl	I2CReadByte
 1181              	.LVL60:
 548:mpu_9250.c    ****     return buffer[0];
 549:mpu_9250.c    **** }
 1182              		.loc 1 549 0
 1183 0010 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 1184 0012 10BD     		pop	{r4, pc}
 1185              	.L126:
 1186              		.align	2
 1187              	.L125:
 1188 0014 00000000 		.word	buffer
 1189 0018 00000000 		.word	devAddr
 1190              		.cfi_endproc
 1191              	.LFE33:
 1192              		.size	MPU9250_getZeroMotionDetectionThreshold, .-MPU9250_getZeroMotionDetectionThreshold
 1193              		.section	.text.MPU9250_setZeroMotionDetectionThreshold,"ax",%progbits
 1194              		.align	2
 1195              		.global	MPU9250_setZeroMotionDetectionThreshold
 1196              		.thumb
 1197              		.thumb_func
 1198              		.type	MPU9250_setZeroMotionDetectionThreshold, %function
 1199              	MPU9250_setZeroMotionDetectionThreshold:
 1200              	.LFB34:
 550:mpu_9250.c    **** /** Set zero motion detection event acceleration threshold.
 551:mpu_9250.c    ****  * @param threshold New zero motion detection acceleration threshold value (LSB = 2mg)
 552:mpu_9250.c    ****  * @see getZeroMotionDetectionThreshold()
 553:mpu_9250.c    ****  * @see MPU9250_RA_ZRMOT_THR
 554:mpu_9250.c    ****  */
 555:mpu_9250.c    **** void MPU9250_setZeroMotionDetectionThreshold(uint8_t threshold) {
 1201              		.loc 1 555 0
 1202              		.cfi_startproc
 1203              		@ args = 0, pretend = 0, frame = 0
 1204              		@ frame_needed = 0, uses_anonymous_args = 0
 1205              	.LVL61:
 1206 0000 08B5     		push	{r3, lr}
 1207              		.cfi_def_cfa_offset 8
 1208              		.cfi_offset 3, -8
 1209              		.cfi_offset 14, -4
 1210 0002 0246     		mov	r2, r0
 556:mpu_9250.c    ****     I2CWriteByte(devAddr, MPU9250_RA_ZRMOT_THR, threshold);
 1211              		.loc 1 556 0
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 32


 1212 0004 024B     		ldr	r3, .L129
 1213 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1214              	.LVL62:
 1215 0008 2121     		movs	r1, #33
 1216 000a FFF7FEFF 		bl	I2CWriteByte
 1217              	.LVL63:
 1218 000e 08BD     		pop	{r3, pc}
 1219              	.L130:
 1220              		.align	2
 1221              	.L129:
 1222 0010 00000000 		.word	devAddr
 1223              		.cfi_endproc
 1224              	.LFE34:
 1225              		.size	MPU9250_setZeroMotionDetectionThreshold, .-MPU9250_setZeroMotionDetectionThreshold
 1226              		.section	.text.MPU9250_getZeroMotionDetectionDuration,"ax",%progbits
 1227              		.align	2
 1228              		.global	MPU9250_getZeroMotionDetectionDuration
 1229              		.thumb
 1230              		.thumb_func
 1231              		.type	MPU9250_getZeroMotionDetectionDuration, %function
 1232              	MPU9250_getZeroMotionDetectionDuration:
 1233              	.LFB35:
 557:mpu_9250.c    **** }
 558:mpu_9250.c    **** 
 559:mpu_9250.c    **** // ZRMOT_DUR register
 560:mpu_9250.c    **** 
 561:mpu_9250.c    **** /** Get zero motion detection event duration threshold.
 562:mpu_9250.c    ****  * This register configures the duration counter threshold for Zero Motion
 563:mpu_9250.c    ****  * interrupt generation. The duration counter ticks at 16 Hz, therefore
 564:mpu_9250.c    ****  * ZRMOT_DUR has a unit of 1 LSB = 64 ms. The Zero Motion duration counter
 565:mpu_9250.c    ****  * increments while the absolute value of the accelerometer measurements are
 566:mpu_9250.c    ****  * each less than the detection threshold (Register 33). The Zero Motion
 567:mpu_9250.c    ****  * interrupt is triggered when the Zero Motion duration counter reaches the time
 568:mpu_9250.c    ****  * count specified in this register.
 569:mpu_9250.c    ****  *
 570:mpu_9250.c    ****  * For more details on the Zero Motion detection interrupt, see Section 8.4 of
 571:mpu_9250.c    ****  * the MPU-6000/MPU-9250 Product Specification document, as well as Registers 56
 572:mpu_9250.c    ****  * and 58 of this document.
 573:mpu_9250.c    ****  *
 574:mpu_9250.c    ****  * @return Current zero motion detection duration threshold value (LSB = 64ms)
 575:mpu_9250.c    ****  * @see MPU9250_RA_ZRMOT_DUR
 576:mpu_9250.c    ****  */
 577:mpu_9250.c    **** uint8_t MPU9250_getZeroMotionDetectionDuration() {
 1234              		.loc 1 577 0
 1235              		.cfi_startproc
 1236              		@ args = 0, pretend = 0, frame = 0
 1237              		@ frame_needed = 0, uses_anonymous_args = 0
 1238 0000 10B5     		push	{r4, lr}
 1239              		.cfi_def_cfa_offset 8
 1240              		.cfi_offset 4, -8
 1241              		.cfi_offset 14, -4
 578:mpu_9250.c    ****     I2CReadByte(devAddr, MPU9250_RA_ZRMOT_DUR, buffer);
 1242              		.loc 1 578 0
 1243 0002 044C     		ldr	r4, .L133
 1244 0004 044B     		ldr	r3, .L133+4
 1245 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1246 0008 2221     		movs	r1, #34
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 33


 1247 000a 2246     		mov	r2, r4
 1248 000c FFF7FEFF 		bl	I2CReadByte
 1249              	.LVL64:
 579:mpu_9250.c    ****     return buffer[0];
 580:mpu_9250.c    **** }
 1250              		.loc 1 580 0
 1251 0010 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 1252 0012 10BD     		pop	{r4, pc}
 1253              	.L134:
 1254              		.align	2
 1255              	.L133:
 1256 0014 00000000 		.word	buffer
 1257 0018 00000000 		.word	devAddr
 1258              		.cfi_endproc
 1259              	.LFE35:
 1260              		.size	MPU9250_getZeroMotionDetectionDuration, .-MPU9250_getZeroMotionDetectionDuration
 1261              		.section	.text.MPU9250_setZeroMotionDetectionDuration,"ax",%progbits
 1262              		.align	2
 1263              		.global	MPU9250_setZeroMotionDetectionDuration
 1264              		.thumb
 1265              		.thumb_func
 1266              		.type	MPU9250_setZeroMotionDetectionDuration, %function
 1267              	MPU9250_setZeroMotionDetectionDuration:
 1268              	.LFB36:
 581:mpu_9250.c    **** /** Set zero motion detection event duration threshold.
 582:mpu_9250.c    ****  * @param duration New zero motion detection duration threshold value (LSB = 1ms)
 583:mpu_9250.c    ****  * @see getZeroMotionDetectionDuration()
 584:mpu_9250.c    ****  * @see MPU9250_RA_ZRMOT_DUR
 585:mpu_9250.c    ****  */
 586:mpu_9250.c    **** void MPU9250_setZeroMotionDetectionDuration(uint8_t duration) {
 1269              		.loc 1 586 0
 1270              		.cfi_startproc
 1271              		@ args = 0, pretend = 0, frame = 0
 1272              		@ frame_needed = 0, uses_anonymous_args = 0
 1273              	.LVL65:
 1274 0000 08B5     		push	{r3, lr}
 1275              		.cfi_def_cfa_offset 8
 1276              		.cfi_offset 3, -8
 1277              		.cfi_offset 14, -4
 1278 0002 0246     		mov	r2, r0
 587:mpu_9250.c    ****     I2CWriteByte(devAddr, MPU9250_RA_ZRMOT_DUR, duration);
 1279              		.loc 1 587 0
 1280 0004 024B     		ldr	r3, .L137
 1281 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1282              	.LVL66:
 1283 0008 2221     		movs	r1, #34
 1284 000a FFF7FEFF 		bl	I2CWriteByte
 1285              	.LVL67:
 1286 000e 08BD     		pop	{r3, pc}
 1287              	.L138:
 1288              		.align	2
 1289              	.L137:
 1290 0010 00000000 		.word	devAddr
 1291              		.cfi_endproc
 1292              	.LFE36:
 1293              		.size	MPU9250_setZeroMotionDetectionDuration, .-MPU9250_setZeroMotionDetectionDuration
 1294              		.section	.text.MPU9250_getTempFIFOEnabled,"ax",%progbits
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 34


 1295              		.align	2
 1296              		.global	MPU9250_getTempFIFOEnabled
 1297              		.thumb
 1298              		.thumb_func
 1299              		.type	MPU9250_getTempFIFOEnabled, %function
 1300              	MPU9250_getTempFIFOEnabled:
 1301              	.LFB37:
 588:mpu_9250.c    **** }
 589:mpu_9250.c    **** 
 590:mpu_9250.c    **** // FIFO_EN register
 591:mpu_9250.c    **** 
 592:mpu_9250.c    **** /** Get temperature FIFO enabled value.
 593:mpu_9250.c    ****  * When set to 1, this bit enables TEMP_OUT_H and TEMP_OUT_L (Registers 65 and
 594:mpu_9250.c    ****  * 66) to be written into the FIFO buffer.
 595:mpu_9250.c    ****  * @return Current temperature FIFO enabled value
 596:mpu_9250.c    ****  * @see MPU9250_RA_FIFO_EN
 597:mpu_9250.c    ****  */
 598:mpu_9250.c    **** bool MPU9250_getTempFIFOEnabled() {
 1302              		.loc 1 598 0
 1303              		.cfi_startproc
 1304              		@ args = 0, pretend = 0, frame = 0
 1305              		@ frame_needed = 0, uses_anonymous_args = 0
 1306 0000 10B5     		push	{r4, lr}
 1307              		.cfi_def_cfa_offset 8
 1308              		.cfi_offset 4, -8
 1309              		.cfi_offset 14, -4
 599:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_FIFO_EN, MPU9250_TEMP_FIFO_EN_BIT, buffer);
 1310              		.loc 1 599 0
 1311 0002 064C     		ldr	r4, .L141
 1312 0004 064B     		ldr	r3, .L141+4
 1313 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1314 0008 2321     		movs	r1, #35
 1315 000a 0722     		movs	r2, #7
 1316 000c 2346     		mov	r3, r4
 1317 000e FFF7FEFF 		bl	I2CReadBit
 1318              	.LVL68:
 600:mpu_9250.c    ****     return buffer[0];
 1319              		.loc 1 600 0
 1320 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 601:mpu_9250.c    **** }
 1321              		.loc 1 601 0
 1322 0014 0030     		adds	r0, r0, #0
 1323 0016 18BF     		it	ne
 1324 0018 0120     		movne	r0, #1
 1325 001a 10BD     		pop	{r4, pc}
 1326              	.L142:
 1327              		.align	2
 1328              	.L141:
 1329 001c 00000000 		.word	buffer
 1330 0020 00000000 		.word	devAddr
 1331              		.cfi_endproc
 1332              	.LFE37:
 1333              		.size	MPU9250_getTempFIFOEnabled, .-MPU9250_getTempFIFOEnabled
 1334              		.section	.text.MPU9250_setTempFIFOEnabled,"ax",%progbits
 1335              		.align	2
 1336              		.global	MPU9250_setTempFIFOEnabled
 1337              		.thumb
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 35


 1338              		.thumb_func
 1339              		.type	MPU9250_setTempFIFOEnabled, %function
 1340              	MPU9250_setTempFIFOEnabled:
 1341              	.LFB38:
 602:mpu_9250.c    **** /** Set temperature FIFO enabled value.
 603:mpu_9250.c    ****  * @param enabled New temperature FIFO enabled value
 604:mpu_9250.c    ****  * @see getTempFIFOEnabled()
 605:mpu_9250.c    ****  * @see MPU9250_RA_FIFO_EN
 606:mpu_9250.c    ****  */
 607:mpu_9250.c    **** void MPU9250_setTempFIFOEnabled(bool enabled) {
 1342              		.loc 1 607 0
 1343              		.cfi_startproc
 1344              		@ args = 0, pretend = 0, frame = 0
 1345              		@ frame_needed = 0, uses_anonymous_args = 0
 1346              	.LVL69:
 1347 0000 08B5     		push	{r3, lr}
 1348              		.cfi_def_cfa_offset 8
 1349              		.cfi_offset 3, -8
 1350              		.cfi_offset 14, -4
 1351 0002 0346     		mov	r3, r0
 608:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_FIFO_EN, MPU9250_TEMP_FIFO_EN_BIT, enabled);
 1352              		.loc 1 608 0
 1353 0004 034A     		ldr	r2, .L145
 1354 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 1355              	.LVL70:
 1356 0008 2321     		movs	r1, #35
 1357 000a 0722     		movs	r2, #7
 1358 000c FFF7FEFF 		bl	I2CWriteBit
 1359              	.LVL71:
 1360 0010 08BD     		pop	{r3, pc}
 1361              	.L146:
 1362 0012 00BF     		.align	2
 1363              	.L145:
 1364 0014 00000000 		.word	devAddr
 1365              		.cfi_endproc
 1366              	.LFE38:
 1367              		.size	MPU9250_setTempFIFOEnabled, .-MPU9250_setTempFIFOEnabled
 1368              		.section	.text.MPU9250_getXGyroFIFOEnabled,"ax",%progbits
 1369              		.align	2
 1370              		.global	MPU9250_getXGyroFIFOEnabled
 1371              		.thumb
 1372              		.thumb_func
 1373              		.type	MPU9250_getXGyroFIFOEnabled, %function
 1374              	MPU9250_getXGyroFIFOEnabled:
 1375              	.LFB39:
 609:mpu_9250.c    **** }
 610:mpu_9250.c    **** /** Get gyroscope X-axis FIFO enabled value.
 611:mpu_9250.c    ****  * When set to 1, this bit enables GYRO_XOUT_H and GYRO_XOUT_L (Registers 67 and
 612:mpu_9250.c    ****  * 68) to be written into the FIFO buffer.
 613:mpu_9250.c    ****  * @return Current gyroscope X-axis FIFO enabled value
 614:mpu_9250.c    ****  * @see MPU9250_RA_FIFO_EN
 615:mpu_9250.c    ****  */
 616:mpu_9250.c    **** bool MPU9250_getXGyroFIFOEnabled() {
 1376              		.loc 1 616 0
 1377              		.cfi_startproc
 1378              		@ args = 0, pretend = 0, frame = 0
 1379              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 36


 1380 0000 10B5     		push	{r4, lr}
 1381              		.cfi_def_cfa_offset 8
 1382              		.cfi_offset 4, -8
 1383              		.cfi_offset 14, -4
 617:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_FIFO_EN, MPU9250_XG_FIFO_EN_BIT, buffer);
 1384              		.loc 1 617 0
 1385 0002 064C     		ldr	r4, .L149
 1386 0004 064B     		ldr	r3, .L149+4
 1387 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1388 0008 2321     		movs	r1, #35
 1389 000a 0622     		movs	r2, #6
 1390 000c 2346     		mov	r3, r4
 1391 000e FFF7FEFF 		bl	I2CReadBit
 1392              	.LVL72:
 618:mpu_9250.c    ****     return buffer[0];
 1393              		.loc 1 618 0
 1394 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 619:mpu_9250.c    **** }
 1395              		.loc 1 619 0
 1396 0014 0030     		adds	r0, r0, #0
 1397 0016 18BF     		it	ne
 1398 0018 0120     		movne	r0, #1
 1399 001a 10BD     		pop	{r4, pc}
 1400              	.L150:
 1401              		.align	2
 1402              	.L149:
 1403 001c 00000000 		.word	buffer
 1404 0020 00000000 		.word	devAddr
 1405              		.cfi_endproc
 1406              	.LFE39:
 1407              		.size	MPU9250_getXGyroFIFOEnabled, .-MPU9250_getXGyroFIFOEnabled
 1408              		.section	.text.MPU9250_setXGyroFIFOEnabled,"ax",%progbits
 1409              		.align	2
 1410              		.global	MPU9250_setXGyroFIFOEnabled
 1411              		.thumb
 1412              		.thumb_func
 1413              		.type	MPU9250_setXGyroFIFOEnabled, %function
 1414              	MPU9250_setXGyroFIFOEnabled:
 1415              	.LFB40:
 620:mpu_9250.c    **** /** Set gyroscope X-axis FIFO enabled value.
 621:mpu_9250.c    ****  * @param enabled New gyroscope X-axis FIFO enabled value
 622:mpu_9250.c    ****  * @see getXGyroFIFOEnabled()
 623:mpu_9250.c    ****  * @see MPU9250_RA_FIFO_EN
 624:mpu_9250.c    ****  */
 625:mpu_9250.c    **** void MPU9250_setXGyroFIFOEnabled(bool enabled) {
 1416              		.loc 1 625 0
 1417              		.cfi_startproc
 1418              		@ args = 0, pretend = 0, frame = 0
 1419              		@ frame_needed = 0, uses_anonymous_args = 0
 1420              	.LVL73:
 1421 0000 08B5     		push	{r3, lr}
 1422              		.cfi_def_cfa_offset 8
 1423              		.cfi_offset 3, -8
 1424              		.cfi_offset 14, -4
 1425 0002 0346     		mov	r3, r0
 626:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_FIFO_EN, MPU9250_XG_FIFO_EN_BIT, enabled);
 1426              		.loc 1 626 0
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 37


 1427 0004 034A     		ldr	r2, .L153
 1428 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 1429              	.LVL74:
 1430 0008 2321     		movs	r1, #35
 1431 000a 0622     		movs	r2, #6
 1432 000c FFF7FEFF 		bl	I2CWriteBit
 1433              	.LVL75:
 1434 0010 08BD     		pop	{r3, pc}
 1435              	.L154:
 1436 0012 00BF     		.align	2
 1437              	.L153:
 1438 0014 00000000 		.word	devAddr
 1439              		.cfi_endproc
 1440              	.LFE40:
 1441              		.size	MPU9250_setXGyroFIFOEnabled, .-MPU9250_setXGyroFIFOEnabled
 1442              		.section	.text.MPU9250_getYGyroFIFOEnabled,"ax",%progbits
 1443              		.align	2
 1444              		.global	MPU9250_getYGyroFIFOEnabled
 1445              		.thumb
 1446              		.thumb_func
 1447              		.type	MPU9250_getYGyroFIFOEnabled, %function
 1448              	MPU9250_getYGyroFIFOEnabled:
 1449              	.LFB41:
 627:mpu_9250.c    **** }
 628:mpu_9250.c    **** /** Get gyroscope Y-axis FIFO enabled value.
 629:mpu_9250.c    ****  * When set to 1, this bit enables GYRO_YOUT_H and GYRO_YOUT_L (Registers 69 and
 630:mpu_9250.c    ****  * 70) to be written into the FIFO buffer.
 631:mpu_9250.c    ****  * @return Current gyroscope Y-axis FIFO enabled value
 632:mpu_9250.c    ****  * @see MPU9250_RA_FIFO_EN
 633:mpu_9250.c    ****  */
 634:mpu_9250.c    **** bool MPU9250_getYGyroFIFOEnabled() {
 1450              		.loc 1 634 0
 1451              		.cfi_startproc
 1452              		@ args = 0, pretend = 0, frame = 0
 1453              		@ frame_needed = 0, uses_anonymous_args = 0
 1454 0000 10B5     		push	{r4, lr}
 1455              		.cfi_def_cfa_offset 8
 1456              		.cfi_offset 4, -8
 1457              		.cfi_offset 14, -4
 635:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_FIFO_EN, MPU9250_YG_FIFO_EN_BIT, buffer);
 1458              		.loc 1 635 0
 1459 0002 064C     		ldr	r4, .L157
 1460 0004 064B     		ldr	r3, .L157+4
 1461 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1462 0008 2321     		movs	r1, #35
 1463 000a 0522     		movs	r2, #5
 1464 000c 2346     		mov	r3, r4
 1465 000e FFF7FEFF 		bl	I2CReadBit
 1466              	.LVL76:
 636:mpu_9250.c    ****     return buffer[0];
 1467              		.loc 1 636 0
 1468 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 637:mpu_9250.c    **** }
 1469              		.loc 1 637 0
 1470 0014 0030     		adds	r0, r0, #0
 1471 0016 18BF     		it	ne
 1472 0018 0120     		movne	r0, #1
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 38


 1473 001a 10BD     		pop	{r4, pc}
 1474              	.L158:
 1475              		.align	2
 1476              	.L157:
 1477 001c 00000000 		.word	buffer
 1478 0020 00000000 		.word	devAddr
 1479              		.cfi_endproc
 1480              	.LFE41:
 1481              		.size	MPU9250_getYGyroFIFOEnabled, .-MPU9250_getYGyroFIFOEnabled
 1482              		.section	.text.MPU9250_setYGyroFIFOEnabled,"ax",%progbits
 1483              		.align	2
 1484              		.global	MPU9250_setYGyroFIFOEnabled
 1485              		.thumb
 1486              		.thumb_func
 1487              		.type	MPU9250_setYGyroFIFOEnabled, %function
 1488              	MPU9250_setYGyroFIFOEnabled:
 1489              	.LFB42:
 638:mpu_9250.c    **** /** Set gyroscope Y-axis FIFO enabled value.
 639:mpu_9250.c    ****  * @param enabled New gyroscope Y-axis FIFO enabled value
 640:mpu_9250.c    ****  * @see getYGyroFIFOEnabled()
 641:mpu_9250.c    ****  * @see MPU9250_RA_FIFO_EN
 642:mpu_9250.c    ****  */
 643:mpu_9250.c    **** void MPU9250_setYGyroFIFOEnabled(bool enabled) {
 1490              		.loc 1 643 0
 1491              		.cfi_startproc
 1492              		@ args = 0, pretend = 0, frame = 0
 1493              		@ frame_needed = 0, uses_anonymous_args = 0
 1494              	.LVL77:
 1495 0000 08B5     		push	{r3, lr}
 1496              		.cfi_def_cfa_offset 8
 1497              		.cfi_offset 3, -8
 1498              		.cfi_offset 14, -4
 1499 0002 0346     		mov	r3, r0
 644:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_FIFO_EN, MPU9250_YG_FIFO_EN_BIT, enabled);
 1500              		.loc 1 644 0
 1501 0004 034A     		ldr	r2, .L161
 1502 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 1503              	.LVL78:
 1504 0008 2321     		movs	r1, #35
 1505 000a 0522     		movs	r2, #5
 1506 000c FFF7FEFF 		bl	I2CWriteBit
 1507              	.LVL79:
 1508 0010 08BD     		pop	{r3, pc}
 1509              	.L162:
 1510 0012 00BF     		.align	2
 1511              	.L161:
 1512 0014 00000000 		.word	devAddr
 1513              		.cfi_endproc
 1514              	.LFE42:
 1515              		.size	MPU9250_setYGyroFIFOEnabled, .-MPU9250_setYGyroFIFOEnabled
 1516              		.section	.text.MPU9250_getZGyroFIFOEnabled,"ax",%progbits
 1517              		.align	2
 1518              		.global	MPU9250_getZGyroFIFOEnabled
 1519              		.thumb
 1520              		.thumb_func
 1521              		.type	MPU9250_getZGyroFIFOEnabled, %function
 1522              	MPU9250_getZGyroFIFOEnabled:
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 39


 1523              	.LFB43:
 645:mpu_9250.c    **** }
 646:mpu_9250.c    **** /** Get gyroscope Z-axis FIFO enabled value.
 647:mpu_9250.c    ****  * When set to 1, this bit enables GYRO_ZOUT_H and GYRO_ZOUT_L (Registers 71 and
 648:mpu_9250.c    ****  * 72) to be written into the FIFO buffer.
 649:mpu_9250.c    ****  * @return Current gyroscope Z-axis FIFO enabled value
 650:mpu_9250.c    ****  * @see MPU9250_RA_FIFO_EN
 651:mpu_9250.c    ****  */
 652:mpu_9250.c    **** bool MPU9250_getZGyroFIFOEnabled() {
 1524              		.loc 1 652 0
 1525              		.cfi_startproc
 1526              		@ args = 0, pretend = 0, frame = 0
 1527              		@ frame_needed = 0, uses_anonymous_args = 0
 1528 0000 10B5     		push	{r4, lr}
 1529              		.cfi_def_cfa_offset 8
 1530              		.cfi_offset 4, -8
 1531              		.cfi_offset 14, -4
 653:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_FIFO_EN, MPU9250_ZG_FIFO_EN_BIT, buffer);
 1532              		.loc 1 653 0
 1533 0002 064C     		ldr	r4, .L165
 1534 0004 064B     		ldr	r3, .L165+4
 1535 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1536 0008 2321     		movs	r1, #35
 1537 000a 0422     		movs	r2, #4
 1538 000c 2346     		mov	r3, r4
 1539 000e FFF7FEFF 		bl	I2CReadBit
 1540              	.LVL80:
 654:mpu_9250.c    ****     return buffer[0];
 1541              		.loc 1 654 0
 1542 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 655:mpu_9250.c    **** }
 1543              		.loc 1 655 0
 1544 0014 0030     		adds	r0, r0, #0
 1545 0016 18BF     		it	ne
 1546 0018 0120     		movne	r0, #1
 1547 001a 10BD     		pop	{r4, pc}
 1548              	.L166:
 1549              		.align	2
 1550              	.L165:
 1551 001c 00000000 		.word	buffer
 1552 0020 00000000 		.word	devAddr
 1553              		.cfi_endproc
 1554              	.LFE43:
 1555              		.size	MPU9250_getZGyroFIFOEnabled, .-MPU9250_getZGyroFIFOEnabled
 1556              		.section	.text.MPU9250_setZGyroFIFOEnabled,"ax",%progbits
 1557              		.align	2
 1558              		.global	MPU9250_setZGyroFIFOEnabled
 1559              		.thumb
 1560              		.thumb_func
 1561              		.type	MPU9250_setZGyroFIFOEnabled, %function
 1562              	MPU9250_setZGyroFIFOEnabled:
 1563              	.LFB44:
 656:mpu_9250.c    **** /** Set gyroscope Z-axis FIFO enabled value.
 657:mpu_9250.c    ****  * @param enabled New gyroscope Z-axis FIFO enabled value
 658:mpu_9250.c    ****  * @see getZGyroFIFOEnabled()
 659:mpu_9250.c    ****  * @see MPU9250_RA_FIFO_EN
 660:mpu_9250.c    ****  */
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 40


 661:mpu_9250.c    **** void MPU9250_setZGyroFIFOEnabled(bool enabled) {
 1564              		.loc 1 661 0
 1565              		.cfi_startproc
 1566              		@ args = 0, pretend = 0, frame = 0
 1567              		@ frame_needed = 0, uses_anonymous_args = 0
 1568              	.LVL81:
 1569 0000 08B5     		push	{r3, lr}
 1570              		.cfi_def_cfa_offset 8
 1571              		.cfi_offset 3, -8
 1572              		.cfi_offset 14, -4
 1573 0002 0346     		mov	r3, r0
 662:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_FIFO_EN, MPU9250_ZG_FIFO_EN_BIT, enabled);
 1574              		.loc 1 662 0
 1575 0004 034A     		ldr	r2, .L169
 1576 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 1577              	.LVL82:
 1578 0008 2321     		movs	r1, #35
 1579 000a 0422     		movs	r2, #4
 1580 000c FFF7FEFF 		bl	I2CWriteBit
 1581              	.LVL83:
 1582 0010 08BD     		pop	{r3, pc}
 1583              	.L170:
 1584 0012 00BF     		.align	2
 1585              	.L169:
 1586 0014 00000000 		.word	devAddr
 1587              		.cfi_endproc
 1588              	.LFE44:
 1589              		.size	MPU9250_setZGyroFIFOEnabled, .-MPU9250_setZGyroFIFOEnabled
 1590              		.section	.text.MPU9250_getAccelFIFOEnabled,"ax",%progbits
 1591              		.align	2
 1592              		.global	MPU9250_getAccelFIFOEnabled
 1593              		.thumb
 1594              		.thumb_func
 1595              		.type	MPU9250_getAccelFIFOEnabled, %function
 1596              	MPU9250_getAccelFIFOEnabled:
 1597              	.LFB45:
 663:mpu_9250.c    **** }
 664:mpu_9250.c    **** /** Get accelerometer FIFO enabled value.
 665:mpu_9250.c    ****  * When set to 1, this bit enables ACCEL_XOUT_H, ACCEL_XOUT_L, ACCEL_YOUT_H,
 666:mpu_9250.c    ****  * ACCEL_YOUT_L, ACCEL_ZOUT_H, and ACCEL_ZOUT_L (Registers 59 to 64) to be
 667:mpu_9250.c    ****  * written into the FIFO buffer.
 668:mpu_9250.c    ****  * @return Current accelerometer FIFO enabled value
 669:mpu_9250.c    ****  * @see MPU9250_RA_FIFO_EN
 670:mpu_9250.c    ****  */
 671:mpu_9250.c    **** bool MPU9250_getAccelFIFOEnabled() {
 1598              		.loc 1 671 0
 1599              		.cfi_startproc
 1600              		@ args = 0, pretend = 0, frame = 0
 1601              		@ frame_needed = 0, uses_anonymous_args = 0
 1602 0000 10B5     		push	{r4, lr}
 1603              		.cfi_def_cfa_offset 8
 1604              		.cfi_offset 4, -8
 1605              		.cfi_offset 14, -4
 672:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_FIFO_EN, MPU9250_ACCEL_FIFO_EN_BIT, buffer);
 1606              		.loc 1 672 0
 1607 0002 064C     		ldr	r4, .L173
 1608 0004 064B     		ldr	r3, .L173+4
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 41


 1609 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1610 0008 2321     		movs	r1, #35
 1611 000a 0322     		movs	r2, #3
 1612 000c 2346     		mov	r3, r4
 1613 000e FFF7FEFF 		bl	I2CReadBit
 1614              	.LVL84:
 673:mpu_9250.c    ****     return buffer[0];
 1615              		.loc 1 673 0
 1616 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 674:mpu_9250.c    **** }
 1617              		.loc 1 674 0
 1618 0014 0030     		adds	r0, r0, #0
 1619 0016 18BF     		it	ne
 1620 0018 0120     		movne	r0, #1
 1621 001a 10BD     		pop	{r4, pc}
 1622              	.L174:
 1623              		.align	2
 1624              	.L173:
 1625 001c 00000000 		.word	buffer
 1626 0020 00000000 		.word	devAddr
 1627              		.cfi_endproc
 1628              	.LFE45:
 1629              		.size	MPU9250_getAccelFIFOEnabled, .-MPU9250_getAccelFIFOEnabled
 1630              		.section	.text.MPU9250_setAccelFIFOEnabled,"ax",%progbits
 1631              		.align	2
 1632              		.global	MPU9250_setAccelFIFOEnabled
 1633              		.thumb
 1634              		.thumb_func
 1635              		.type	MPU9250_setAccelFIFOEnabled, %function
 1636              	MPU9250_setAccelFIFOEnabled:
 1637              	.LFB46:
 675:mpu_9250.c    **** /** Set accelerometer FIFO enabled value.
 676:mpu_9250.c    ****  * @param enabled New accelerometer FIFO enabled value
 677:mpu_9250.c    ****  * @see getAccelFIFOEnabled()
 678:mpu_9250.c    ****  * @see MPU9250_RA_FIFO_EN
 679:mpu_9250.c    ****  */
 680:mpu_9250.c    **** void MPU9250_setAccelFIFOEnabled(bool enabled) {
 1638              		.loc 1 680 0
 1639              		.cfi_startproc
 1640              		@ args = 0, pretend = 0, frame = 0
 1641              		@ frame_needed = 0, uses_anonymous_args = 0
 1642              	.LVL85:
 1643 0000 08B5     		push	{r3, lr}
 1644              		.cfi_def_cfa_offset 8
 1645              		.cfi_offset 3, -8
 1646              		.cfi_offset 14, -4
 1647 0002 0346     		mov	r3, r0
 681:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_FIFO_EN, MPU9250_ACCEL_FIFO_EN_BIT, enabled);
 1648              		.loc 1 681 0
 1649 0004 034A     		ldr	r2, .L177
 1650 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 1651              	.LVL86:
 1652 0008 2321     		movs	r1, #35
 1653 000a 0322     		movs	r2, #3
 1654 000c FFF7FEFF 		bl	I2CWriteBit
 1655              	.LVL87:
 1656 0010 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 42


 1657              	.L178:
 1658 0012 00BF     		.align	2
 1659              	.L177:
 1660 0014 00000000 		.word	devAddr
 1661              		.cfi_endproc
 1662              	.LFE46:
 1663              		.size	MPU9250_setAccelFIFOEnabled, .-MPU9250_setAccelFIFOEnabled
 1664              		.section	.text.MPU9250_getSlave2FIFOEnabled,"ax",%progbits
 1665              		.align	2
 1666              		.global	MPU9250_getSlave2FIFOEnabled
 1667              		.thumb
 1668              		.thumb_func
 1669              		.type	MPU9250_getSlave2FIFOEnabled, %function
 1670              	MPU9250_getSlave2FIFOEnabled:
 1671              	.LFB47:
 682:mpu_9250.c    **** }
 683:mpu_9250.c    **** /** Get Slave 2 FIFO enabled value.
 684:mpu_9250.c    ****  * When set to 1, this bit enables EXT_SENS_DATA registers (Registers 73 to 96)
 685:mpu_9250.c    ****  * associated with Slave 2 to be written into the FIFO buffer.
 686:mpu_9250.c    ****  * @return Current Slave 2 FIFO enabled value
 687:mpu_9250.c    ****  * @see MPU9250_RA_FIFO_EN
 688:mpu_9250.c    ****  */
 689:mpu_9250.c    **** bool MPU9250_getSlave2FIFOEnabled() {
 1672              		.loc 1 689 0
 1673              		.cfi_startproc
 1674              		@ args = 0, pretend = 0, frame = 0
 1675              		@ frame_needed = 0, uses_anonymous_args = 0
 1676 0000 10B5     		push	{r4, lr}
 1677              		.cfi_def_cfa_offset 8
 1678              		.cfi_offset 4, -8
 1679              		.cfi_offset 14, -4
 690:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_FIFO_EN, MPU9250_SLV2_FIFO_EN_BIT, buffer);
 1680              		.loc 1 690 0
 1681 0002 064C     		ldr	r4, .L181
 1682 0004 064B     		ldr	r3, .L181+4
 1683 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1684 0008 2321     		movs	r1, #35
 1685 000a 0222     		movs	r2, #2
 1686 000c 2346     		mov	r3, r4
 1687 000e FFF7FEFF 		bl	I2CReadBit
 1688              	.LVL88:
 691:mpu_9250.c    ****     return buffer[0];
 1689              		.loc 1 691 0
 1690 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 692:mpu_9250.c    **** }
 1691              		.loc 1 692 0
 1692 0014 0030     		adds	r0, r0, #0
 1693 0016 18BF     		it	ne
 1694 0018 0120     		movne	r0, #1
 1695 001a 10BD     		pop	{r4, pc}
 1696              	.L182:
 1697              		.align	2
 1698              	.L181:
 1699 001c 00000000 		.word	buffer
 1700 0020 00000000 		.word	devAddr
 1701              		.cfi_endproc
 1702              	.LFE47:
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 43


 1703              		.size	MPU9250_getSlave2FIFOEnabled, .-MPU9250_getSlave2FIFOEnabled
 1704              		.section	.text.MPU9250_setSlave2FIFOEnabled,"ax",%progbits
 1705              		.align	2
 1706              		.global	MPU9250_setSlave2FIFOEnabled
 1707              		.thumb
 1708              		.thumb_func
 1709              		.type	MPU9250_setSlave2FIFOEnabled, %function
 1710              	MPU9250_setSlave2FIFOEnabled:
 1711              	.LFB48:
 693:mpu_9250.c    **** /** Set Slave 2 FIFO enabled value.
 694:mpu_9250.c    ****  * @param enabled New Slave 2 FIFO enabled value
 695:mpu_9250.c    ****  * @see getSlave2FIFOEnabled()
 696:mpu_9250.c    ****  * @see MPU9250_RA_FIFO_EN
 697:mpu_9250.c    ****  */
 698:mpu_9250.c    **** void MPU9250_setSlave2FIFOEnabled(bool enabled) {
 1712              		.loc 1 698 0
 1713              		.cfi_startproc
 1714              		@ args = 0, pretend = 0, frame = 0
 1715              		@ frame_needed = 0, uses_anonymous_args = 0
 1716              	.LVL89:
 1717 0000 08B5     		push	{r3, lr}
 1718              		.cfi_def_cfa_offset 8
 1719              		.cfi_offset 3, -8
 1720              		.cfi_offset 14, -4
 1721 0002 0346     		mov	r3, r0
 699:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_FIFO_EN, MPU9250_SLV2_FIFO_EN_BIT, enabled);
 1722              		.loc 1 699 0
 1723 0004 034A     		ldr	r2, .L185
 1724 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 1725              	.LVL90:
 1726 0008 2321     		movs	r1, #35
 1727 000a 0222     		movs	r2, #2
 1728 000c FFF7FEFF 		bl	I2CWriteBit
 1729              	.LVL91:
 1730 0010 08BD     		pop	{r3, pc}
 1731              	.L186:
 1732 0012 00BF     		.align	2
 1733              	.L185:
 1734 0014 00000000 		.word	devAddr
 1735              		.cfi_endproc
 1736              	.LFE48:
 1737              		.size	MPU9250_setSlave2FIFOEnabled, .-MPU9250_setSlave2FIFOEnabled
 1738              		.section	.text.MPU9250_getSlave1FIFOEnabled,"ax",%progbits
 1739              		.align	2
 1740              		.global	MPU9250_getSlave1FIFOEnabled
 1741              		.thumb
 1742              		.thumb_func
 1743              		.type	MPU9250_getSlave1FIFOEnabled, %function
 1744              	MPU9250_getSlave1FIFOEnabled:
 1745              	.LFB49:
 700:mpu_9250.c    **** }
 701:mpu_9250.c    **** /** Get Slave 1 FIFO enabled value.
 702:mpu_9250.c    ****  * When set to 1, this bit enables EXT_SENS_DATA registers (Registers 73 to 96)
 703:mpu_9250.c    ****  * associated with Slave 1 to be written into the FIFO buffer.
 704:mpu_9250.c    ****  * @return Current Slave 1 FIFO enabled value
 705:mpu_9250.c    ****  * @see MPU9250_RA_FIFO_EN
 706:mpu_9250.c    ****  */
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 44


 707:mpu_9250.c    **** bool MPU9250_getSlave1FIFOEnabled() {
 1746              		.loc 1 707 0
 1747              		.cfi_startproc
 1748              		@ args = 0, pretend = 0, frame = 0
 1749              		@ frame_needed = 0, uses_anonymous_args = 0
 1750 0000 10B5     		push	{r4, lr}
 1751              		.cfi_def_cfa_offset 8
 1752              		.cfi_offset 4, -8
 1753              		.cfi_offset 14, -4
 708:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_FIFO_EN, MPU9250_SLV1_FIFO_EN_BIT, buffer);
 1754              		.loc 1 708 0
 1755 0002 064C     		ldr	r4, .L189
 1756 0004 064B     		ldr	r3, .L189+4
 1757 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1758 0008 2321     		movs	r1, #35
 1759 000a 0122     		movs	r2, #1
 1760 000c 2346     		mov	r3, r4
 1761 000e FFF7FEFF 		bl	I2CReadBit
 1762              	.LVL92:
 709:mpu_9250.c    ****     return buffer[0];
 1763              		.loc 1 709 0
 1764 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 710:mpu_9250.c    **** }
 1765              		.loc 1 710 0
 1766 0014 0030     		adds	r0, r0, #0
 1767 0016 18BF     		it	ne
 1768 0018 0120     		movne	r0, #1
 1769 001a 10BD     		pop	{r4, pc}
 1770              	.L190:
 1771              		.align	2
 1772              	.L189:
 1773 001c 00000000 		.word	buffer
 1774 0020 00000000 		.word	devAddr
 1775              		.cfi_endproc
 1776              	.LFE49:
 1777              		.size	MPU9250_getSlave1FIFOEnabled, .-MPU9250_getSlave1FIFOEnabled
 1778              		.section	.text.MPU9250_setSlave1FIFOEnabled,"ax",%progbits
 1779              		.align	2
 1780              		.global	MPU9250_setSlave1FIFOEnabled
 1781              		.thumb
 1782              		.thumb_func
 1783              		.type	MPU9250_setSlave1FIFOEnabled, %function
 1784              	MPU9250_setSlave1FIFOEnabled:
 1785              	.LFB50:
 711:mpu_9250.c    **** /** Set Slave 1 FIFO enabled value.
 712:mpu_9250.c    ****  * @param enabled New Slave 1 FIFO enabled value
 713:mpu_9250.c    ****  * @see getSlave1FIFOEnabled()
 714:mpu_9250.c    ****  * @see MPU9250_RA_FIFO_EN
 715:mpu_9250.c    ****  */
 716:mpu_9250.c    **** void MPU9250_setSlave1FIFOEnabled(bool enabled) {
 1786              		.loc 1 716 0
 1787              		.cfi_startproc
 1788              		@ args = 0, pretend = 0, frame = 0
 1789              		@ frame_needed = 0, uses_anonymous_args = 0
 1790              	.LVL93:
 1791 0000 08B5     		push	{r3, lr}
 1792              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 45


 1793              		.cfi_offset 3, -8
 1794              		.cfi_offset 14, -4
 1795 0002 0346     		mov	r3, r0
 717:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_FIFO_EN, MPU9250_SLV1_FIFO_EN_BIT, enabled);
 1796              		.loc 1 717 0
 1797 0004 034A     		ldr	r2, .L193
 1798 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 1799              	.LVL94:
 1800 0008 2321     		movs	r1, #35
 1801 000a 0122     		movs	r2, #1
 1802 000c FFF7FEFF 		bl	I2CWriteBit
 1803              	.LVL95:
 1804 0010 08BD     		pop	{r3, pc}
 1805              	.L194:
 1806 0012 00BF     		.align	2
 1807              	.L193:
 1808 0014 00000000 		.word	devAddr
 1809              		.cfi_endproc
 1810              	.LFE50:
 1811              		.size	MPU9250_setSlave1FIFOEnabled, .-MPU9250_setSlave1FIFOEnabled
 1812              		.section	.text.MPU9250_getSlave0FIFOEnabled,"ax",%progbits
 1813              		.align	2
 1814              		.global	MPU9250_getSlave0FIFOEnabled
 1815              		.thumb
 1816              		.thumb_func
 1817              		.type	MPU9250_getSlave0FIFOEnabled, %function
 1818              	MPU9250_getSlave0FIFOEnabled:
 1819              	.LFB51:
 718:mpu_9250.c    **** }
 719:mpu_9250.c    **** /** Get Slave 0 FIFO enabled value.
 720:mpu_9250.c    ****  * When set to 1, this bit enables EXT_SENS_DATA registers (Registers 73 to 96)
 721:mpu_9250.c    ****  * associated with Slave 0 to be written into the FIFO buffer.
 722:mpu_9250.c    ****  * @return Current Slave 0 FIFO enabled value
 723:mpu_9250.c    ****  * @see MPU9250_RA_FIFO_EN
 724:mpu_9250.c    ****  */
 725:mpu_9250.c    **** bool MPU9250_getSlave0FIFOEnabled() {
 1820              		.loc 1 725 0
 1821              		.cfi_startproc
 1822              		@ args = 0, pretend = 0, frame = 0
 1823              		@ frame_needed = 0, uses_anonymous_args = 0
 1824 0000 10B5     		push	{r4, lr}
 1825              		.cfi_def_cfa_offset 8
 1826              		.cfi_offset 4, -8
 1827              		.cfi_offset 14, -4
 726:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_FIFO_EN, MPU9250_SLV0_FIFO_EN_BIT, buffer);
 1828              		.loc 1 726 0
 1829 0002 064C     		ldr	r4, .L197
 1830 0004 064B     		ldr	r3, .L197+4
 1831 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1832 0008 2321     		movs	r1, #35
 1833 000a 0022     		movs	r2, #0
 1834 000c 2346     		mov	r3, r4
 1835 000e FFF7FEFF 		bl	I2CReadBit
 1836              	.LVL96:
 727:mpu_9250.c    ****     return buffer[0];
 1837              		.loc 1 727 0
 1838 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 46


 728:mpu_9250.c    **** }
 1839              		.loc 1 728 0
 1840 0014 0030     		adds	r0, r0, #0
 1841 0016 18BF     		it	ne
 1842 0018 0120     		movne	r0, #1
 1843 001a 10BD     		pop	{r4, pc}
 1844              	.L198:
 1845              		.align	2
 1846              	.L197:
 1847 001c 00000000 		.word	buffer
 1848 0020 00000000 		.word	devAddr
 1849              		.cfi_endproc
 1850              	.LFE51:
 1851              		.size	MPU9250_getSlave0FIFOEnabled, .-MPU9250_getSlave0FIFOEnabled
 1852              		.section	.text.MPU9250_setSlave0FIFOEnabled,"ax",%progbits
 1853              		.align	2
 1854              		.global	MPU9250_setSlave0FIFOEnabled
 1855              		.thumb
 1856              		.thumb_func
 1857              		.type	MPU9250_setSlave0FIFOEnabled, %function
 1858              	MPU9250_setSlave0FIFOEnabled:
 1859              	.LFB52:
 729:mpu_9250.c    **** /** Set Slave 0 FIFO enabled value.
 730:mpu_9250.c    ****  * @param enabled New Slave 0 FIFO enabled value
 731:mpu_9250.c    ****  * @see getSlave0FIFOEnabled()
 732:mpu_9250.c    ****  * @see MPU9250_RA_FIFO_EN
 733:mpu_9250.c    ****  */
 734:mpu_9250.c    **** void MPU9250_setSlave0FIFOEnabled(bool enabled) {
 1860              		.loc 1 734 0
 1861              		.cfi_startproc
 1862              		@ args = 0, pretend = 0, frame = 0
 1863              		@ frame_needed = 0, uses_anonymous_args = 0
 1864              	.LVL97:
 1865 0000 08B5     		push	{r3, lr}
 1866              		.cfi_def_cfa_offset 8
 1867              		.cfi_offset 3, -8
 1868              		.cfi_offset 14, -4
 1869 0002 0346     		mov	r3, r0
 735:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_FIFO_EN, MPU9250_SLV0_FIFO_EN_BIT, enabled);
 1870              		.loc 1 735 0
 1871 0004 034A     		ldr	r2, .L201
 1872 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 1873              	.LVL98:
 1874 0008 2321     		movs	r1, #35
 1875 000a 0022     		movs	r2, #0
 1876 000c FFF7FEFF 		bl	I2CWriteBit
 1877              	.LVL99:
 1878 0010 08BD     		pop	{r3, pc}
 1879              	.L202:
 1880 0012 00BF     		.align	2
 1881              	.L201:
 1882 0014 00000000 		.word	devAddr
 1883              		.cfi_endproc
 1884              	.LFE52:
 1885              		.size	MPU9250_setSlave0FIFOEnabled, .-MPU9250_setSlave0FIFOEnabled
 1886              		.section	.text.MPU9250_getMultiMasterEnabled,"ax",%progbits
 1887              		.align	2
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 47


 1888              		.global	MPU9250_getMultiMasterEnabled
 1889              		.thumb
 1890              		.thumb_func
 1891              		.type	MPU9250_getMultiMasterEnabled, %function
 1892              	MPU9250_getMultiMasterEnabled:
 1893              	.LFB53:
 736:mpu_9250.c    **** }
 737:mpu_9250.c    **** 
 738:mpu_9250.c    **** // I2C_MST_CTRL register
 739:mpu_9250.c    **** 
 740:mpu_9250.c    **** /** Get multi-master enabled value.
 741:mpu_9250.c    ****  * Multi-master capability allows multiple I2C masters to operate on the same
 742:mpu_9250.c    ****  * bus. In circuits where multi-master capability is required, set MULT_MST_EN
 743:mpu_9250.c    ****  * to 1. This will increase current drawn by approximately 30uA.
 744:mpu_9250.c    ****  *
 745:mpu_9250.c    ****  * In circuits where multi-master capability is required, the state of the I2C
 746:mpu_9250.c    ****  * bus must always be monitored by each separate I2C Master. Before an I2C
 747:mpu_9250.c    ****  * Master can assume arbitration of the bus, it must first confirm that no other
 748:mpu_9250.c    ****  * I2C Master has arbitration of the bus. When MULT_MST_EN is set to 1, the
 749:mpu_9250.c    ****  * MPU-60X0's bus arbitration detection logic is turned on, enabling it to
 750:mpu_9250.c    ****  * detect when the bus is available.
 751:mpu_9250.c    ****  *
 752:mpu_9250.c    ****  * @return Current multi-master enabled value
 753:mpu_9250.c    ****  * @see MPU9250_RA_I2C_MST_CTRL
 754:mpu_9250.c    ****  */
 755:mpu_9250.c    **** bool MPU9250_getMultiMasterEnabled() {
 1894              		.loc 1 755 0
 1895              		.cfi_startproc
 1896              		@ args = 0, pretend = 0, frame = 0
 1897              		@ frame_needed = 0, uses_anonymous_args = 0
 1898 0000 10B5     		push	{r4, lr}
 1899              		.cfi_def_cfa_offset 8
 1900              		.cfi_offset 4, -8
 1901              		.cfi_offset 14, -4
 756:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_I2C_MST_CTRL, MPU9250_MULT_MST_EN_BIT, buffer);
 1902              		.loc 1 756 0
 1903 0002 064C     		ldr	r4, .L205
 1904 0004 064B     		ldr	r3, .L205+4
 1905 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1906 0008 2421     		movs	r1, #36
 1907 000a 0722     		movs	r2, #7
 1908 000c 2346     		mov	r3, r4
 1909 000e FFF7FEFF 		bl	I2CReadBit
 1910              	.LVL100:
 757:mpu_9250.c    ****     return buffer[0];
 1911              		.loc 1 757 0
 1912 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 758:mpu_9250.c    **** }
 1913              		.loc 1 758 0
 1914 0014 0030     		adds	r0, r0, #0
 1915 0016 18BF     		it	ne
 1916 0018 0120     		movne	r0, #1
 1917 001a 10BD     		pop	{r4, pc}
 1918              	.L206:
 1919              		.align	2
 1920              	.L205:
 1921 001c 00000000 		.word	buffer
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 48


 1922 0020 00000000 		.word	devAddr
 1923              		.cfi_endproc
 1924              	.LFE53:
 1925              		.size	MPU9250_getMultiMasterEnabled, .-MPU9250_getMultiMasterEnabled
 1926              		.section	.text.MPU9250_setMultiMasterEnabled,"ax",%progbits
 1927              		.align	2
 1928              		.global	MPU9250_setMultiMasterEnabled
 1929              		.thumb
 1930              		.thumb_func
 1931              		.type	MPU9250_setMultiMasterEnabled, %function
 1932              	MPU9250_setMultiMasterEnabled:
 1933              	.LFB54:
 759:mpu_9250.c    **** /** Set multi-master enabled value.
 760:mpu_9250.c    ****  * @param enabled New multi-master enabled value
 761:mpu_9250.c    ****  * @see getMultiMasterEnabled()
 762:mpu_9250.c    ****  * @see MPU9250_RA_I2C_MST_CTRL
 763:mpu_9250.c    ****  */
 764:mpu_9250.c    **** void MPU9250_setMultiMasterEnabled(bool enabled) {
 1934              		.loc 1 764 0
 1935              		.cfi_startproc
 1936              		@ args = 0, pretend = 0, frame = 0
 1937              		@ frame_needed = 0, uses_anonymous_args = 0
 1938              	.LVL101:
 1939 0000 08B5     		push	{r3, lr}
 1940              		.cfi_def_cfa_offset 8
 1941              		.cfi_offset 3, -8
 1942              		.cfi_offset 14, -4
 1943 0002 0346     		mov	r3, r0
 765:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_I2C_MST_CTRL, MPU9250_MULT_MST_EN_BIT, enabled);
 1944              		.loc 1 765 0
 1945 0004 034A     		ldr	r2, .L209
 1946 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 1947              	.LVL102:
 1948 0008 2421     		movs	r1, #36
 1949 000a 0722     		movs	r2, #7
 1950 000c FFF7FEFF 		bl	I2CWriteBit
 1951              	.LVL103:
 1952 0010 08BD     		pop	{r3, pc}
 1953              	.L210:
 1954 0012 00BF     		.align	2
 1955              	.L209:
 1956 0014 00000000 		.word	devAddr
 1957              		.cfi_endproc
 1958              	.LFE54:
 1959              		.size	MPU9250_setMultiMasterEnabled, .-MPU9250_setMultiMasterEnabled
 1960              		.section	.text.MPU9250_getWaitForExternalSensorEnabled,"ax",%progbits
 1961              		.align	2
 1962              		.global	MPU9250_getWaitForExternalSensorEnabled
 1963              		.thumb
 1964              		.thumb_func
 1965              		.type	MPU9250_getWaitForExternalSensorEnabled, %function
 1966              	MPU9250_getWaitForExternalSensorEnabled:
 1967              	.LFB55:
 766:mpu_9250.c    **** }
 767:mpu_9250.c    **** /** Get wait-for-external-sensor-data enabled value.
 768:mpu_9250.c    ****  * When the WAIT_FOR_ES bit is set to 1, the Data Ready interrupt will be
 769:mpu_9250.c    ****  * delayed until External Sensor data from the Slave Devices are loaded into the
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 49


 770:mpu_9250.c    ****  * EXT_SENS_DATA registers. This is used to ensure that both the internal sensor
 771:mpu_9250.c    ****  * data (i.e. from gyro and accel) and external sensor data have been loaded to
 772:mpu_9250.c    ****  * their respective data registers (i.e. the data is synced) when the Data Ready
 773:mpu_9250.c    ****  * interrupt is triggered.
 774:mpu_9250.c    ****  *
 775:mpu_9250.c    ****  * @return Current wait-for-external-sensor-data enabled value
 776:mpu_9250.c    ****  * @see MPU9250_RA_I2C_MST_CTRL
 777:mpu_9250.c    ****  */
 778:mpu_9250.c    **** bool MPU9250_getWaitForExternalSensorEnabled() {
 1968              		.loc 1 778 0
 1969              		.cfi_startproc
 1970              		@ args = 0, pretend = 0, frame = 0
 1971              		@ frame_needed = 0, uses_anonymous_args = 0
 1972 0000 10B5     		push	{r4, lr}
 1973              		.cfi_def_cfa_offset 8
 1974              		.cfi_offset 4, -8
 1975              		.cfi_offset 14, -4
 779:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_I2C_MST_CTRL, MPU9250_WAIT_FOR_ES_BIT, buffer);
 1976              		.loc 1 779 0
 1977 0002 064C     		ldr	r4, .L213
 1978 0004 064B     		ldr	r3, .L213+4
 1979 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1980 0008 2421     		movs	r1, #36
 1981 000a 0622     		movs	r2, #6
 1982 000c 2346     		mov	r3, r4
 1983 000e FFF7FEFF 		bl	I2CReadBit
 1984              	.LVL104:
 780:mpu_9250.c    ****     return buffer[0];
 1985              		.loc 1 780 0
 1986 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 781:mpu_9250.c    **** }
 1987              		.loc 1 781 0
 1988 0014 0030     		adds	r0, r0, #0
 1989 0016 18BF     		it	ne
 1990 0018 0120     		movne	r0, #1
 1991 001a 10BD     		pop	{r4, pc}
 1992              	.L214:
 1993              		.align	2
 1994              	.L213:
 1995 001c 00000000 		.word	buffer
 1996 0020 00000000 		.word	devAddr
 1997              		.cfi_endproc
 1998              	.LFE55:
 1999              		.size	MPU9250_getWaitForExternalSensorEnabled, .-MPU9250_getWaitForExternalSensorEnabled
 2000              		.section	.text.MPU9250_setWaitForExternalSensorEnabled,"ax",%progbits
 2001              		.align	2
 2002              		.global	MPU9250_setWaitForExternalSensorEnabled
 2003              		.thumb
 2004              		.thumb_func
 2005              		.type	MPU9250_setWaitForExternalSensorEnabled, %function
 2006              	MPU9250_setWaitForExternalSensorEnabled:
 2007              	.LFB56:
 782:mpu_9250.c    **** /** Set wait-for-external-sensor-data enabled value.
 783:mpu_9250.c    ****  * @param enabled New wait-for-external-sensor-data enabled value
 784:mpu_9250.c    ****  * @see getWaitForExternalSensorEnabled()
 785:mpu_9250.c    ****  * @see MPU9250_RA_I2C_MST_CTRL
 786:mpu_9250.c    ****  */
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 50


 787:mpu_9250.c    **** void MPU9250_setWaitForExternalSensorEnabled(bool enabled) {
 2008              		.loc 1 787 0
 2009              		.cfi_startproc
 2010              		@ args = 0, pretend = 0, frame = 0
 2011              		@ frame_needed = 0, uses_anonymous_args = 0
 2012              	.LVL105:
 2013 0000 08B5     		push	{r3, lr}
 2014              		.cfi_def_cfa_offset 8
 2015              		.cfi_offset 3, -8
 2016              		.cfi_offset 14, -4
 2017 0002 0346     		mov	r3, r0
 788:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_I2C_MST_CTRL, MPU9250_WAIT_FOR_ES_BIT, enabled);
 2018              		.loc 1 788 0
 2019 0004 034A     		ldr	r2, .L217
 2020 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 2021              	.LVL106:
 2022 0008 2421     		movs	r1, #36
 2023 000a 0622     		movs	r2, #6
 2024 000c FFF7FEFF 		bl	I2CWriteBit
 2025              	.LVL107:
 2026 0010 08BD     		pop	{r3, pc}
 2027              	.L218:
 2028 0012 00BF     		.align	2
 2029              	.L217:
 2030 0014 00000000 		.word	devAddr
 2031              		.cfi_endproc
 2032              	.LFE56:
 2033              		.size	MPU9250_setWaitForExternalSensorEnabled, .-MPU9250_setWaitForExternalSensorEnabled
 2034              		.section	.text.MPU9250_getSlave3FIFOEnabled,"ax",%progbits
 2035              		.align	2
 2036              		.global	MPU9250_getSlave3FIFOEnabled
 2037              		.thumb
 2038              		.thumb_func
 2039              		.type	MPU9250_getSlave3FIFOEnabled, %function
 2040              	MPU9250_getSlave3FIFOEnabled:
 2041              	.LFB57:
 789:mpu_9250.c    **** }
 790:mpu_9250.c    **** /** Get Slave 3 FIFO enabled value.
 791:mpu_9250.c    ****  * When set to 1, this bit enables EXT_SENS_DATA registers (Registers 73 to 96)
 792:mpu_9250.c    ****  * associated with Slave 3 to be written into the FIFO buffer.
 793:mpu_9250.c    ****  * @return Current Slave 3 FIFO enabled value
 794:mpu_9250.c    ****  * @see MPU9250_RA_MST_CTRL
 795:mpu_9250.c    ****  */
 796:mpu_9250.c    **** bool MPU9250_getSlave3FIFOEnabled() {
 2042              		.loc 1 796 0
 2043              		.cfi_startproc
 2044              		@ args = 0, pretend = 0, frame = 0
 2045              		@ frame_needed = 0, uses_anonymous_args = 0
 2046 0000 10B5     		push	{r4, lr}
 2047              		.cfi_def_cfa_offset 8
 2048              		.cfi_offset 4, -8
 2049              		.cfi_offset 14, -4
 797:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_I2C_MST_CTRL, MPU9250_SLV_3_FIFO_EN_BIT, buffer);
 2050              		.loc 1 797 0
 2051 0002 064C     		ldr	r4, .L221
 2052 0004 064B     		ldr	r3, .L221+4
 2053 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 51


 2054 0008 2421     		movs	r1, #36
 2055 000a 0522     		movs	r2, #5
 2056 000c 2346     		mov	r3, r4
 2057 000e FFF7FEFF 		bl	I2CReadBit
 2058              	.LVL108:
 798:mpu_9250.c    ****     return buffer[0];
 2059              		.loc 1 798 0
 2060 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 799:mpu_9250.c    **** }
 2061              		.loc 1 799 0
 2062 0014 0030     		adds	r0, r0, #0
 2063 0016 18BF     		it	ne
 2064 0018 0120     		movne	r0, #1
 2065 001a 10BD     		pop	{r4, pc}
 2066              	.L222:
 2067              		.align	2
 2068              	.L221:
 2069 001c 00000000 		.word	buffer
 2070 0020 00000000 		.word	devAddr
 2071              		.cfi_endproc
 2072              	.LFE57:
 2073              		.size	MPU9250_getSlave3FIFOEnabled, .-MPU9250_getSlave3FIFOEnabled
 2074              		.section	.text.MPU9250_setSlave3FIFOEnabled,"ax",%progbits
 2075              		.align	2
 2076              		.global	MPU9250_setSlave3FIFOEnabled
 2077              		.thumb
 2078              		.thumb_func
 2079              		.type	MPU9250_setSlave3FIFOEnabled, %function
 2080              	MPU9250_setSlave3FIFOEnabled:
 2081              	.LFB58:
 800:mpu_9250.c    **** /** Set Slave 3 FIFO enabled value.
 801:mpu_9250.c    ****  * @param enabled New Slave 3 FIFO enabled value
 802:mpu_9250.c    ****  * @see getSlave3FIFOEnabled()
 803:mpu_9250.c    ****  * @see MPU9250_RA_MST_CTRL
 804:mpu_9250.c    ****  */
 805:mpu_9250.c    **** void MPU9250_setSlave3FIFOEnabled(bool enabled) {
 2082              		.loc 1 805 0
 2083              		.cfi_startproc
 2084              		@ args = 0, pretend = 0, frame = 0
 2085              		@ frame_needed = 0, uses_anonymous_args = 0
 2086              	.LVL109:
 2087 0000 08B5     		push	{r3, lr}
 2088              		.cfi_def_cfa_offset 8
 2089              		.cfi_offset 3, -8
 2090              		.cfi_offset 14, -4
 2091 0002 0346     		mov	r3, r0
 806:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_I2C_MST_CTRL, MPU9250_SLV_3_FIFO_EN_BIT, enabled);
 2092              		.loc 1 806 0
 2093 0004 034A     		ldr	r2, .L225
 2094 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 2095              	.LVL110:
 2096 0008 2421     		movs	r1, #36
 2097 000a 0522     		movs	r2, #5
 2098 000c FFF7FEFF 		bl	I2CWriteBit
 2099              	.LVL111:
 2100 0010 08BD     		pop	{r3, pc}
 2101              	.L226:
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 52


 2102 0012 00BF     		.align	2
 2103              	.L225:
 2104 0014 00000000 		.word	devAddr
 2105              		.cfi_endproc
 2106              	.LFE58:
 2107              		.size	MPU9250_setSlave3FIFOEnabled, .-MPU9250_setSlave3FIFOEnabled
 2108              		.section	.text.MPU9250_getSlaveReadWriteTransitionEnabled,"ax",%progbits
 2109              		.align	2
 2110              		.global	MPU9250_getSlaveReadWriteTransitionEnabled
 2111              		.thumb
 2112              		.thumb_func
 2113              		.type	MPU9250_getSlaveReadWriteTransitionEnabled, %function
 2114              	MPU9250_getSlaveReadWriteTransitionEnabled:
 2115              	.LFB59:
 807:mpu_9250.c    **** }
 808:mpu_9250.c    **** /** Get slave read/write transition enabled value.
 809:mpu_9250.c    ****  * The I2C_MST_P_NSR bit configures the I2C Master's transition from one slave
 810:mpu_9250.c    ****  * read to the next slave read. If the bit equals 0, there will be a restart
 811:mpu_9250.c    ****  * between reads. If the bit equals 1, there will be a stop followed by a start
 812:mpu_9250.c    ****  * of the following read. When a write transaction follows a read transaction,
 813:mpu_9250.c    ****  * the stop followed by a start of the successive write will be always used.
 814:mpu_9250.c    ****  *
 815:mpu_9250.c    ****  * @return Current slave read/write transition enabled value
 816:mpu_9250.c    ****  * @see MPU9250_RA_I2C_MST_CTRL
 817:mpu_9250.c    ****  */
 818:mpu_9250.c    **** bool MPU9250_getSlaveReadWriteTransitionEnabled() {
 2116              		.loc 1 818 0
 2117              		.cfi_startproc
 2118              		@ args = 0, pretend = 0, frame = 0
 2119              		@ frame_needed = 0, uses_anonymous_args = 0
 2120 0000 10B5     		push	{r4, lr}
 2121              		.cfi_def_cfa_offset 8
 2122              		.cfi_offset 4, -8
 2123              		.cfi_offset 14, -4
 819:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_I2C_MST_CTRL, I2C_MPU9250_I2C_MST_P_NSR_BIT, buffer);
 2124              		.loc 1 819 0
 2125 0002 064C     		ldr	r4, .L229
 2126 0004 064B     		ldr	r3, .L229+4
 2127 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2128 0008 2421     		movs	r1, #36
 2129 000a 0422     		movs	r2, #4
 2130 000c 2346     		mov	r3, r4
 2131 000e FFF7FEFF 		bl	I2CReadBit
 2132              	.LVL112:
 820:mpu_9250.c    ****     return buffer[0];
 2133              		.loc 1 820 0
 2134 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 821:mpu_9250.c    **** }
 2135              		.loc 1 821 0
 2136 0014 0030     		adds	r0, r0, #0
 2137 0016 18BF     		it	ne
 2138 0018 0120     		movne	r0, #1
 2139 001a 10BD     		pop	{r4, pc}
 2140              	.L230:
 2141              		.align	2
 2142              	.L229:
 2143 001c 00000000 		.word	buffer
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 53


 2144 0020 00000000 		.word	devAddr
 2145              		.cfi_endproc
 2146              	.LFE59:
 2147              		.size	MPU9250_getSlaveReadWriteTransitionEnabled, .-MPU9250_getSlaveReadWriteTransitionEnabled
 2148              		.section	.text.MPU9250_setSlaveReadWriteTransitionEnabled,"ax",%progbits
 2149              		.align	2
 2150              		.global	MPU9250_setSlaveReadWriteTransitionEnabled
 2151              		.thumb
 2152              		.thumb_func
 2153              		.type	MPU9250_setSlaveReadWriteTransitionEnabled, %function
 2154              	MPU9250_setSlaveReadWriteTransitionEnabled:
 2155              	.LFB60:
 822:mpu_9250.c    **** /** Set slave read/write transition enabled value.
 823:mpu_9250.c    ****  * @param enabled New slave read/write transition enabled value
 824:mpu_9250.c    ****  * @see getSlaveReadWriteTransitionEnabled()
 825:mpu_9250.c    ****  * @see MPU9250_RA_I2C_MST_CTRL
 826:mpu_9250.c    ****  */
 827:mpu_9250.c    **** void MPU9250_setSlaveReadWriteTransitionEnabled(bool enabled) {
 2156              		.loc 1 827 0
 2157              		.cfi_startproc
 2158              		@ args = 0, pretend = 0, frame = 0
 2159              		@ frame_needed = 0, uses_anonymous_args = 0
 2160              	.LVL113:
 2161 0000 08B5     		push	{r3, lr}
 2162              		.cfi_def_cfa_offset 8
 2163              		.cfi_offset 3, -8
 2164              		.cfi_offset 14, -4
 2165 0002 0346     		mov	r3, r0
 828:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_I2C_MST_CTRL, I2C_MPU9250_I2C_MST_P_NSR_BIT, enabled);
 2166              		.loc 1 828 0
 2167 0004 034A     		ldr	r2, .L233
 2168 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 2169              	.LVL114:
 2170 0008 2421     		movs	r1, #36
 2171 000a 0422     		movs	r2, #4
 2172 000c FFF7FEFF 		bl	I2CWriteBit
 2173              	.LVL115:
 2174 0010 08BD     		pop	{r3, pc}
 2175              	.L234:
 2176 0012 00BF     		.align	2
 2177              	.L233:
 2178 0014 00000000 		.word	devAddr
 2179              		.cfi_endproc
 2180              	.LFE60:
 2181              		.size	MPU9250_setSlaveReadWriteTransitionEnabled, .-MPU9250_setSlaveReadWriteTransitionEnabled
 2182              		.section	.text.MPU9250_getMasterClockSpeed,"ax",%progbits
 2183              		.align	2
 2184              		.global	MPU9250_getMasterClockSpeed
 2185              		.thumb
 2186              		.thumb_func
 2187              		.type	MPU9250_getMasterClockSpeed, %function
 2188              	MPU9250_getMasterClockSpeed:
 2189              	.LFB61:
 829:mpu_9250.c    **** }
 830:mpu_9250.c    **** /** Get I2C master clock speed.
 831:mpu_9250.c    ****  * I2C_MST_CLK is a 4 bit unsigned value which configures a divider on the
 832:mpu_9250.c    ****  * MPU-60X0 internal 8MHz clock. It sets the I2C master clock speed according to
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 54


 833:mpu_9250.c    ****  * the following table:
 834:mpu_9250.c    ****  *
 835:mpu_9250.c    ****  * <pre>
 836:mpu_9250.c    ****  * I2C_MST_CLK | I2C Master Clock Speed | 8MHz Clock Divider
 837:mpu_9250.c    ****  * ------------+------------------------+-------------------
 838:mpu_9250.c    ****  * 0           | 348kHz                 | 23
 839:mpu_9250.c    ****  * 1           | 333kHz                 | 24
 840:mpu_9250.c    ****  * 2           | 320kHz                 | 25
 841:mpu_9250.c    ****  * 3           | 308kHz                 | 26
 842:mpu_9250.c    ****  * 4           | 296kHz                 | 27
 843:mpu_9250.c    ****  * 5           | 286kHz                 | 28
 844:mpu_9250.c    ****  * 6           | 276kHz                 | 29
 845:mpu_9250.c    ****  * 7           | 267kHz                 | 30
 846:mpu_9250.c    ****  * 8           | 258kHz                 | 31
 847:mpu_9250.c    ****  * 9           | 500kHz                 | 16
 848:mpu_9250.c    ****  * 10          | 471kHz                 | 17
 849:mpu_9250.c    ****  * 11          | 444kHz                 | 18
 850:mpu_9250.c    ****  * 12          | 421kHz                 | 19
 851:mpu_9250.c    ****  * 13          | 400kHz                 | 20
 852:mpu_9250.c    ****  * 14          | 381kHz                 | 21
 853:mpu_9250.c    ****  * 15          | 364kHz                 | 22
 854:mpu_9250.c    ****  * </pre>
 855:mpu_9250.c    ****  *
 856:mpu_9250.c    ****  * @return Current I2C master clock speed
 857:mpu_9250.c    ****  * @see MPU9250_RA_I2C_MST_CTRL
 858:mpu_9250.c    ****  */
 859:mpu_9250.c    **** uint8_t MPU9250_getMasterClockSpeed() {
 2190              		.loc 1 859 0
 2191              		.cfi_startproc
 2192              		@ args = 0, pretend = 0, frame = 0
 2193              		@ frame_needed = 0, uses_anonymous_args = 0
 2194 0000 10B5     		push	{r4, lr}
 2195              		.cfi_def_cfa_offset 8
 2196              		.cfi_offset 4, -8
 2197              		.cfi_offset 14, -4
 2198 0002 82B0     		sub	sp, sp, #8
 2199              		.cfi_def_cfa_offset 16
 860:mpu_9250.c    ****     I2CReadBits(devAddr, MPU9250_RA_I2C_MST_CTRL, I2C_MPU9250_I2C_MST_CLK_BIT, I2C_MPU9250_I2C_MST_
 2200              		.loc 1 860 0
 2201 0004 054B     		ldr	r3, .L237
 2202 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2203 0008 054C     		ldr	r4, .L237+4
 2204 000a 0094     		str	r4, [sp]
 2205 000c 2421     		movs	r1, #36
 2206 000e 0322     		movs	r2, #3
 2207 0010 0423     		movs	r3, #4
 2208 0012 FFF7FEFF 		bl	I2CReadBits
 2209              	.LVL116:
 861:mpu_9250.c    ****     return buffer[0];
 862:mpu_9250.c    **** }
 2210              		.loc 1 862 0
 2211 0016 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 2212 0018 02B0     		add	sp, sp, #8
 2213              		.cfi_def_cfa_offset 8
 2214              		@ sp needed
 2215 001a 10BD     		pop	{r4, pc}
 2216              	.L238:
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 55


 2217              		.align	2
 2218              	.L237:
 2219 001c 00000000 		.word	devAddr
 2220 0020 00000000 		.word	buffer
 2221              		.cfi_endproc
 2222              	.LFE61:
 2223              		.size	MPU9250_getMasterClockSpeed, .-MPU9250_getMasterClockSpeed
 2224              		.section	.text.MPU9250_setMasterClockSpeed,"ax",%progbits
 2225              		.align	2
 2226              		.global	MPU9250_setMasterClockSpeed
 2227              		.thumb
 2228              		.thumb_func
 2229              		.type	MPU9250_setMasterClockSpeed, %function
 2230              	MPU9250_setMasterClockSpeed:
 2231              	.LFB62:
 863:mpu_9250.c    **** /** Set I2C master clock speed.
 864:mpu_9250.c    ****  * @reparam speed Current I2C master clock speed
 865:mpu_9250.c    ****  * @see MPU9250_RA_I2C_MST_CTRL
 866:mpu_9250.c    ****  */
 867:mpu_9250.c    **** void MPU9250_setMasterClockSpeed(uint8_t speed) {
 2232              		.loc 1 867 0
 2233              		.cfi_startproc
 2234              		@ args = 0, pretend = 0, frame = 0
 2235              		@ frame_needed = 0, uses_anonymous_args = 0
 2236              	.LVL117:
 2237 0000 00B5     		push	{lr}
 2238              		.cfi_def_cfa_offset 4
 2239              		.cfi_offset 14, -4
 2240 0002 83B0     		sub	sp, sp, #12
 2241              		.cfi_def_cfa_offset 16
 868:mpu_9250.c    ****     I2CWriteBits(devAddr, MPU9250_RA_I2C_MST_CTRL, I2C_MPU9250_I2C_MST_CLK_BIT, I2C_MPU9250_I2C_MST
 2242              		.loc 1 868 0
 2243 0004 054B     		ldr	r3, .L241
 2244 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2245 0008 0090     		str	r0, [sp]
 2246 000a 1846     		mov	r0, r3
 2247              	.LVL118:
 2248 000c 2421     		movs	r1, #36
 2249 000e 0322     		movs	r2, #3
 2250 0010 0423     		movs	r3, #4
 2251 0012 FFF7FEFF 		bl	I2CWriteBits
 2252              	.LVL119:
 869:mpu_9250.c    **** }
 2253              		.loc 1 869 0
 2254 0016 03B0     		add	sp, sp, #12
 2255              		.cfi_def_cfa_offset 4
 2256              		@ sp needed
 2257 0018 5DF804FB 		ldr	pc, [sp], #4
 2258              	.L242:
 2259              		.align	2
 2260              	.L241:
 2261 001c 00000000 		.word	devAddr
 2262              		.cfi_endproc
 2263              	.LFE62:
 2264              		.size	MPU9250_setMasterClockSpeed, .-MPU9250_setMasterClockSpeed
 2265              		.section	.text.MPU9250_getSlaveAddress,"ax",%progbits
 2266              		.align	2
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 56


 2267              		.global	MPU9250_getSlaveAddress
 2268              		.thumb
 2269              		.thumb_func
 2270              		.type	MPU9250_getSlaveAddress, %function
 2271              	MPU9250_getSlaveAddress:
 2272              	.LFB63:
 870:mpu_9250.c    **** 
 871:mpu_9250.c    **** // I2C_SLV* registers (Slave 0-3)
 872:mpu_9250.c    **** 
 873:mpu_9250.c    **** /** Get the I2C address of the specified slave (0-3).
 874:mpu_9250.c    ****  * Note that Bit 7 (MSB) controls read/write mode. If Bit 7 is set, it's a read
 875:mpu_9250.c    ****  * operation, and if it is cleared, then it's a write operation. The remaining
 876:mpu_9250.c    ****  * bits (6-0) are the 7-bit device address of the slave device.
 877:mpu_9250.c    ****  *
 878:mpu_9250.c    ****  * In read mode, the result of the read is placed in the lowest available 
 879:mpu_9250.c    ****  * EXT_SENS_DATA register. For further information regarding the allocation of
 880:mpu_9250.c    ****  * read results, please refer to the EXT_SENS_DATA register description
 881:mpu_9250.c    ****  * (Registers 73 - 96).
 882:mpu_9250.c    ****  *
 883:mpu_9250.c    ****  * The MPU-9250 supports a total of five slaves, but Slave 4 has unique
 884:mpu_9250.c    ****  * characteristics, and so it has its own functions (getSlave4* and setSlave4*).
 885:mpu_9250.c    ****  *
 886:mpu_9250.c    ****  * I2C data transactions are performed at the Sample Rate, as defined in
 887:mpu_9250.c    ****  * Register 25. The user is responsible for ensuring that I2C data transactions
 888:mpu_9250.c    ****  * to and from each enabled Slave can be completed within a single period of the
 889:mpu_9250.c    ****  * Sample Rate.
 890:mpu_9250.c    ****  *
 891:mpu_9250.c    ****  * The I2C slave access rate can be reduced relative to the Sample Rate. This
 892:mpu_9250.c    ****  * reduced access rate is determined by I2C_MST_DLY (Register 52). Whether a
 893:mpu_9250.c    ****  * slave's access rate is reduced relative to the Sample Rate is determined by
 894:mpu_9250.c    ****  * I2C_MST_DELAY_CTRL (Register 103).
 895:mpu_9250.c    ****  *
 896:mpu_9250.c    ****  * The processing order for the slaves is fixed. The sequence followed for
 897:mpu_9250.c    ****  * processing the slaves is Slave 0, Slave 1, Slave 2, Slave 3 and Slave 4. If a
 898:mpu_9250.c    ****  * particular Slave is disabled it will be skipped.
 899:mpu_9250.c    ****  *
 900:mpu_9250.c    ****  * Each slave can either be accessed at the sample rate or at a reduced sample
 901:mpu_9250.c    ****  * rate. In a case where some slaves are accessed at the Sample Rate and some
 902:mpu_9250.c    ****  * slaves are accessed at the reduced rate, the sequence of accessing the slaves
 903:mpu_9250.c    ****  * (Slave 0 to Slave 4) is still followed. However, the reduced rate slaves will
 904:mpu_9250.c    ****  * be skipped if their access rate dictates that they should not be accessed
 905:mpu_9250.c    ****  * during that particular cycle. For further information regarding the reduced
 906:mpu_9250.c    ****  * access rate, please refer to Register 52. Whether a slave is accessed at the
 907:mpu_9250.c    ****  * Sample Rate or at the reduced rate is determined by the Delay Enable bits in
 908:mpu_9250.c    ****  * Register 103.
 909:mpu_9250.c    ****  *
 910:mpu_9250.c    ****  * @param num Slave number (0-3)
 911:mpu_9250.c    ****  * @return Current address for specified slave
 912:mpu_9250.c    ****  * @see MPU9250_RA_I2C_SLV0_ADDR
 913:mpu_9250.c    ****  */
 914:mpu_9250.c    **** uint8_t MPU9250_getSlaveAddress(uint8_t num) {
 2273              		.loc 1 914 0
 2274              		.cfi_startproc
 2275              		@ args = 0, pretend = 0, frame = 0
 2276              		@ frame_needed = 0, uses_anonymous_args = 0
 2277              	.LVL120:
 915:mpu_9250.c    ****     if (num > 3) return 0;
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 57


 2278              		.loc 1 915 0
 2279 0000 0328     		cmp	r0, #3
 2280 0002 0DD8     		bhi	.L245
 914:mpu_9250.c    ****     if (num > 3) return 0;
 2281              		.loc 1 914 0
 2282 0004 10B5     		push	{r4, lr}
 2283              		.cfi_def_cfa_offset 8
 2284              		.cfi_offset 4, -8
 2285              		.cfi_offset 14, -4
 916:mpu_9250.c    ****     I2CReadByte(devAddr, MPU9250_RA_I2C_SLV0_ADDR + num*3, buffer);
 2286              		.loc 1 916 0
 2287 0006 00EB4000 		add	r0, r0, r0, lsl #1
 2288              	.LVL121:
 2289 000a 00F12501 		add	r1, r0, #37
 2290 000e 054C     		ldr	r4, .L248
 2291 0010 054B     		ldr	r3, .L248+4
 2292 0012 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2293 0014 C9B2     		uxtb	r1, r1
 2294 0016 2246     		mov	r2, r4
 2295 0018 FFF7FEFF 		bl	I2CReadByte
 2296              	.LVL122:
 917:mpu_9250.c    ****     return buffer[0];
 2297              		.loc 1 917 0
 2298 001c 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 2299 001e 10BD     		pop	{r4, pc}
 2300              	.LVL123:
 2301              	.L245:
 2302              		.cfi_def_cfa_offset 0
 2303              		.cfi_restore 4
 2304              		.cfi_restore 14
 915:mpu_9250.c    ****     I2CReadByte(devAddr, MPU9250_RA_I2C_SLV0_ADDR + num*3, buffer);
 2305              		.loc 1 915 0
 2306 0020 0020     		movs	r0, #0
 2307              	.LVL124:
 2308 0022 7047     		bx	lr
 2309              	.L249:
 2310              		.align	2
 2311              	.L248:
 2312 0024 00000000 		.word	buffer
 2313 0028 00000000 		.word	devAddr
 2314              		.cfi_endproc
 2315              	.LFE63:
 2316              		.size	MPU9250_getSlaveAddress, .-MPU9250_getSlaveAddress
 2317              		.section	.text.MPU9250_setSlaveAddress,"ax",%progbits
 2318              		.align	2
 2319              		.global	MPU9250_setSlaveAddress
 2320              		.thumb
 2321              		.thumb_func
 2322              		.type	MPU9250_setSlaveAddress, %function
 2323              	MPU9250_setSlaveAddress:
 2324              	.LFB64:
 918:mpu_9250.c    **** }
 919:mpu_9250.c    **** /** Set the I2C address of the specified slave (0-3).
 920:mpu_9250.c    ****  * @param num Slave number (0-3)
 921:mpu_9250.c    ****  * @param address New address for specified slave
 922:mpu_9250.c    ****  * @see getSlaveAddress()
 923:mpu_9250.c    ****  * @see MPU9250_RA_I2C_SLV0_ADDR
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 58


 924:mpu_9250.c    ****  */
 925:mpu_9250.c    **** void MPU9250_setSlaveAddress(uint8_t num, uint8_t address) {
 2325              		.loc 1 925 0
 2326              		.cfi_startproc
 2327              		@ args = 0, pretend = 0, frame = 0
 2328              		@ frame_needed = 0, uses_anonymous_args = 0
 2329              	.LVL125:
 926:mpu_9250.c    ****     if (num > 3) return;
 2330              		.loc 1 926 0
 2331 0000 0328     		cmp	r0, #3
 2332 0002 0BD8     		bhi	.L253
 925:mpu_9250.c    ****     if (num > 3) return;
 2333              		.loc 1 925 0
 2334 0004 08B5     		push	{r3, lr}
 2335              		.cfi_def_cfa_offset 8
 2336              		.cfi_offset 3, -8
 2337              		.cfi_offset 14, -4
 2338 0006 0A46     		mov	r2, r1
 927:mpu_9250.c    ****     I2CWriteByte(devAddr, MPU9250_RA_I2C_SLV0_ADDR + num*3, address);
 2339              		.loc 1 927 0
 2340 0008 00EB4000 		add	r0, r0, r0, lsl #1
 2341              	.LVL126:
 2342 000c 00F12503 		add	r3, r0, #37
 2343 0010 0349     		ldr	r1, .L254
 2344              	.LVL127:
 2345 0012 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 2346 0014 D9B2     		uxtb	r1, r3
 2347 0016 FFF7FEFF 		bl	I2CWriteByte
 2348              	.LVL128:
 2349 001a 08BD     		pop	{r3, pc}
 2350              	.LVL129:
 2351              	.L253:
 2352              		.cfi_def_cfa_offset 0
 2353              		.cfi_restore 3
 2354              		.cfi_restore 14
 2355 001c 7047     		bx	lr
 2356              	.L255:
 2357 001e 00BF     		.align	2
 2358              	.L254:
 2359 0020 00000000 		.word	devAddr
 2360              		.cfi_endproc
 2361              	.LFE64:
 2362              		.size	MPU9250_setSlaveAddress, .-MPU9250_setSlaveAddress
 2363              		.section	.text.MPU9250_getSlaveRegister,"ax",%progbits
 2364              		.align	2
 2365              		.global	MPU9250_getSlaveRegister
 2366              		.thumb
 2367              		.thumb_func
 2368              		.type	MPU9250_getSlaveRegister, %function
 2369              	MPU9250_getSlaveRegister:
 2370              	.LFB65:
 928:mpu_9250.c    **** }
 929:mpu_9250.c    **** /** Get the active internal register for the specified slave (0-3).
 930:mpu_9250.c    ****  * Read/write operations for this slave will be done to whatever internal
 931:mpu_9250.c    ****  * register address is stored in this MPU register.
 932:mpu_9250.c    ****  *
 933:mpu_9250.c    ****  * The MPU-9250 supports a total of five slaves, but Slave 4 has unique
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 59


 934:mpu_9250.c    ****  * characteristics, and so it has its own functions.
 935:mpu_9250.c    ****  *
 936:mpu_9250.c    ****  * @param num Slave number (0-3)
 937:mpu_9250.c    ****  * @return Current active register for specified slave
 938:mpu_9250.c    ****  * @see MPU9250_RA_I2C_SLV0_REG
 939:mpu_9250.c    ****  */
 940:mpu_9250.c    **** uint8_t MPU9250_getSlaveRegister(uint8_t num) {
 2371              		.loc 1 940 0
 2372              		.cfi_startproc
 2373              		@ args = 0, pretend = 0, frame = 0
 2374              		@ frame_needed = 0, uses_anonymous_args = 0
 2375              	.LVL130:
 941:mpu_9250.c    ****     if (num > 3) return 0;
 2376              		.loc 1 941 0
 2377 0000 0328     		cmp	r0, #3
 2378 0002 0DD8     		bhi	.L258
 940:mpu_9250.c    ****     if (num > 3) return 0;
 2379              		.loc 1 940 0
 2380 0004 10B5     		push	{r4, lr}
 2381              		.cfi_def_cfa_offset 8
 2382              		.cfi_offset 4, -8
 2383              		.cfi_offset 14, -4
 942:mpu_9250.c    ****     I2CReadByte(devAddr, MPU9250_RA_I2C_SLV0_REG + num*3, buffer);
 2384              		.loc 1 942 0
 2385 0006 00EB4000 		add	r0, r0, r0, lsl #1
 2386              	.LVL131:
 2387 000a 00F12601 		add	r1, r0, #38
 2388 000e 054C     		ldr	r4, .L261
 2389 0010 054B     		ldr	r3, .L261+4
 2390 0012 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2391 0014 C9B2     		uxtb	r1, r1
 2392 0016 2246     		mov	r2, r4
 2393 0018 FFF7FEFF 		bl	I2CReadByte
 2394              	.LVL132:
 943:mpu_9250.c    ****     return buffer[0];
 2395              		.loc 1 943 0
 2396 001c 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 2397 001e 10BD     		pop	{r4, pc}
 2398              	.LVL133:
 2399              	.L258:
 2400              		.cfi_def_cfa_offset 0
 2401              		.cfi_restore 4
 2402              		.cfi_restore 14
 941:mpu_9250.c    ****     I2CReadByte(devAddr, MPU9250_RA_I2C_SLV0_REG + num*3, buffer);
 2403              		.loc 1 941 0
 2404 0020 0020     		movs	r0, #0
 2405              	.LVL134:
 2406 0022 7047     		bx	lr
 2407              	.L262:
 2408              		.align	2
 2409              	.L261:
 2410 0024 00000000 		.word	buffer
 2411 0028 00000000 		.word	devAddr
 2412              		.cfi_endproc
 2413              	.LFE65:
 2414              		.size	MPU9250_getSlaveRegister, .-MPU9250_getSlaveRegister
 2415              		.section	.text.MPU9250_setSlaveRegister,"ax",%progbits
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 60


 2416              		.align	2
 2417              		.global	MPU9250_setSlaveRegister
 2418              		.thumb
 2419              		.thumb_func
 2420              		.type	MPU9250_setSlaveRegister, %function
 2421              	MPU9250_setSlaveRegister:
 2422              	.LFB66:
 944:mpu_9250.c    **** }
 945:mpu_9250.c    **** /** Set the active internal register for the specified slave (0-3).
 946:mpu_9250.c    ****  * @param num Slave number (0-3)
 947:mpu_9250.c    ****  * @param reg New active register for specified slave
 948:mpu_9250.c    ****  * @see getSlaveRegister()
 949:mpu_9250.c    ****  * @see MPU9250_RA_I2C_SLV0_REG
 950:mpu_9250.c    ****  */
 951:mpu_9250.c    **** void MPU9250_setSlaveRegister(uint8_t num, uint8_t reg) {
 2423              		.loc 1 951 0
 2424              		.cfi_startproc
 2425              		@ args = 0, pretend = 0, frame = 0
 2426              		@ frame_needed = 0, uses_anonymous_args = 0
 2427              	.LVL135:
 952:mpu_9250.c    ****     if (num > 3) return;
 2428              		.loc 1 952 0
 2429 0000 0328     		cmp	r0, #3
 2430 0002 0BD8     		bhi	.L266
 951:mpu_9250.c    ****     if (num > 3) return;
 2431              		.loc 1 951 0
 2432 0004 08B5     		push	{r3, lr}
 2433              		.cfi_def_cfa_offset 8
 2434              		.cfi_offset 3, -8
 2435              		.cfi_offset 14, -4
 2436 0006 0A46     		mov	r2, r1
 953:mpu_9250.c    ****     I2CWriteByte(devAddr, MPU9250_RA_I2C_SLV0_REG + num*3, reg);
 2437              		.loc 1 953 0
 2438 0008 00EB4000 		add	r0, r0, r0, lsl #1
 2439              	.LVL136:
 2440 000c 00F12603 		add	r3, r0, #38
 2441 0010 0349     		ldr	r1, .L267
 2442              	.LVL137:
 2443 0012 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 2444 0014 D9B2     		uxtb	r1, r3
 2445 0016 FFF7FEFF 		bl	I2CWriteByte
 2446              	.LVL138:
 2447 001a 08BD     		pop	{r3, pc}
 2448              	.LVL139:
 2449              	.L266:
 2450              		.cfi_def_cfa_offset 0
 2451              		.cfi_restore 3
 2452              		.cfi_restore 14
 2453 001c 7047     		bx	lr
 2454              	.L268:
 2455 001e 00BF     		.align	2
 2456              	.L267:
 2457 0020 00000000 		.word	devAddr
 2458              		.cfi_endproc
 2459              	.LFE66:
 2460              		.size	MPU9250_setSlaveRegister, .-MPU9250_setSlaveRegister
 2461              		.section	.text.MPU9250_getSlaveEnabled,"ax",%progbits
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 61


 2462              		.align	2
 2463              		.global	MPU9250_getSlaveEnabled
 2464              		.thumb
 2465              		.thumb_func
 2466              		.type	MPU9250_getSlaveEnabled, %function
 2467              	MPU9250_getSlaveEnabled:
 2468              	.LFB67:
 954:mpu_9250.c    **** }
 955:mpu_9250.c    **** /** Get the enabled value for the specified slave (0-3).
 956:mpu_9250.c    ****  * When set to 1, this bit enables Slave 0 for data transfer operations. When
 957:mpu_9250.c    ****  * cleared to 0, this bit disables Slave 0 from data transfer operations.
 958:mpu_9250.c    ****  * @param num Slave number (0-3)
 959:mpu_9250.c    ****  * @return Current enabled value for specified slave
 960:mpu_9250.c    ****  * @see MPU9250_RA_I2C_SLV0_CTRL
 961:mpu_9250.c    ****  */
 962:mpu_9250.c    **** bool MPU9250_getSlaveEnabled(uint8_t num) {
 2469              		.loc 1 962 0
 2470              		.cfi_startproc
 2471              		@ args = 0, pretend = 0, frame = 0
 2472              		@ frame_needed = 0, uses_anonymous_args = 0
 2473              	.LVL140:
 963:mpu_9250.c    ****     if (num > 3) return 0;
 2474              		.loc 1 963 0
 2475 0000 0328     		cmp	r0, #3
 2476 0002 11D8     		bhi	.L271
 962:mpu_9250.c    ****     if (num > 3) return 0;
 2477              		.loc 1 962 0
 2478 0004 10B5     		push	{r4, lr}
 2479              		.cfi_def_cfa_offset 8
 2480              		.cfi_offset 4, -8
 2481              		.cfi_offset 14, -4
 964:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_I2C_SLV0_CTRL + num*3, I2C_MPU9250_I2C_SLV_EN_BIT, buffer);
 2482              		.loc 1 964 0
 2483 0006 00EB4000 		add	r0, r0, r0, lsl #1
 2484              	.LVL141:
 2485 000a 00F12701 		add	r1, r0, #39
 2486 000e 074C     		ldr	r4, .L274
 2487 0010 074B     		ldr	r3, .L274+4
 2488 0012 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2489 0014 C9B2     		uxtb	r1, r1
 2490 0016 0722     		movs	r2, #7
 2491 0018 2346     		mov	r3, r4
 2492 001a FFF7FEFF 		bl	I2CReadBit
 2493              	.LVL142:
 965:mpu_9250.c    ****     return buffer[0];
 2494              		.loc 1 965 0
 2495 001e 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 2496 0020 0030     		adds	r0, r0, #0
 2497 0022 18BF     		it	ne
 2498 0024 0120     		movne	r0, #1
 2499 0026 10BD     		pop	{r4, pc}
 2500              	.LVL143:
 2501              	.L271:
 2502              		.cfi_def_cfa_offset 0
 2503              		.cfi_restore 4
 2504              		.cfi_restore 14
 963:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_I2C_SLV0_CTRL + num*3, I2C_MPU9250_I2C_SLV_EN_BIT, buffer);
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 62


 2505              		.loc 1 963 0
 2506 0028 0020     		movs	r0, #0
 2507              	.LVL144:
 2508 002a 7047     		bx	lr
 2509              	.L275:
 2510              		.align	2
 2511              	.L274:
 2512 002c 00000000 		.word	buffer
 2513 0030 00000000 		.word	devAddr
 2514              		.cfi_endproc
 2515              	.LFE67:
 2516              		.size	MPU9250_getSlaveEnabled, .-MPU9250_getSlaveEnabled
 2517              		.section	.text.MPU9250_setSlaveEnabled,"ax",%progbits
 2518              		.align	2
 2519              		.global	MPU9250_setSlaveEnabled
 2520              		.thumb
 2521              		.thumb_func
 2522              		.type	MPU9250_setSlaveEnabled, %function
 2523              	MPU9250_setSlaveEnabled:
 2524              	.LFB68:
 966:mpu_9250.c    **** }
 967:mpu_9250.c    **** /** Set the enabled value for the specified slave (0-3).
 968:mpu_9250.c    ****  * @param num Slave number (0-3)
 969:mpu_9250.c    ****  * @param enabled New enabled value for specified slave
 970:mpu_9250.c    ****  * @see getSlaveEnabled()
 971:mpu_9250.c    ****  * @see MPU9250_RA_I2C_SLV0_CTRL
 972:mpu_9250.c    ****  */
 973:mpu_9250.c    **** void MPU9250_setSlaveEnabled(uint8_t num, bool enabled) {
 2525              		.loc 1 973 0
 2526              		.cfi_startproc
 2527              		@ args = 0, pretend = 0, frame = 0
 2528              		@ frame_needed = 0, uses_anonymous_args = 0
 2529              	.LVL145:
 974:mpu_9250.c    ****     if (num > 3) return;
 2530              		.loc 1 974 0
 2531 0000 0328     		cmp	r0, #3
 2532 0002 0CD8     		bhi	.L279
 973:mpu_9250.c    ****     if (num > 3) return;
 2533              		.loc 1 973 0
 2534 0004 08B5     		push	{r3, lr}
 2535              		.cfi_def_cfa_offset 8
 2536              		.cfi_offset 3, -8
 2537              		.cfi_offset 14, -4
 2538 0006 0B46     		mov	r3, r1
 975:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_I2C_SLV0_CTRL + num*3, I2C_MPU9250_I2C_SLV_EN_BIT, enabled);
 2539              		.loc 1 975 0
 2540 0008 00EB4000 		add	r0, r0, r0, lsl #1
 2541              	.LVL146:
 2542 000c 00F12702 		add	r2, r0, #39
 2543 0010 0349     		ldr	r1, .L280
 2544              	.LVL147:
 2545 0012 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 2546 0014 D1B2     		uxtb	r1, r2
 2547 0016 0722     		movs	r2, #7
 2548 0018 FFF7FEFF 		bl	I2CWriteBit
 2549              	.LVL148:
 2550 001c 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 63


 2551              	.LVL149:
 2552              	.L279:
 2553              		.cfi_def_cfa_offset 0
 2554              		.cfi_restore 3
 2555              		.cfi_restore 14
 2556 001e 7047     		bx	lr
 2557              	.L281:
 2558              		.align	2
 2559              	.L280:
 2560 0020 00000000 		.word	devAddr
 2561              		.cfi_endproc
 2562              	.LFE68:
 2563              		.size	MPU9250_setSlaveEnabled, .-MPU9250_setSlaveEnabled
 2564              		.section	.text.MPU9250_getSlaveWordByteSwap,"ax",%progbits
 2565              		.align	2
 2566              		.global	MPU9250_getSlaveWordByteSwap
 2567              		.thumb
 2568              		.thumb_func
 2569              		.type	MPU9250_getSlaveWordByteSwap, %function
 2570              	MPU9250_getSlaveWordByteSwap:
 2571              	.LFB69:
 976:mpu_9250.c    **** }
 977:mpu_9250.c    **** /** Get word pair byte-swapping enabled for the specified slave (0-3).
 978:mpu_9250.c    ****  * When set to 1, this bit enables byte swapping. When byte swapping is enabled,
 979:mpu_9250.c    ****  * the high and low bytes of a word pair are swapped. Please refer to
 980:mpu_9250.c    ****  * I2C_SLV0_GRP for the pairing convention of the word pairs. When cleared to 0,
 981:mpu_9250.c    ****  * bytes transferred to and from Slave 0 will be written to EXT_SENS_DATA
 982:mpu_9250.c    ****  * registers in the order they were transferred.
 983:mpu_9250.c    ****  *
 984:mpu_9250.c    ****  * @param num Slave number (0-3)
 985:mpu_9250.c    ****  * @return Current word pair byte-swapping enabled value for specified slave
 986:mpu_9250.c    ****  * @see MPU9250_RA_I2C_SLV0_CTRL
 987:mpu_9250.c    ****  */
 988:mpu_9250.c    **** bool MPU9250_getSlaveWordByteSwap(uint8_t num) {
 2572              		.loc 1 988 0
 2573              		.cfi_startproc
 2574              		@ args = 0, pretend = 0, frame = 0
 2575              		@ frame_needed = 0, uses_anonymous_args = 0
 2576              	.LVL150:
 989:mpu_9250.c    ****     if (num > 3) return 0;
 2577              		.loc 1 989 0
 2578 0000 0328     		cmp	r0, #3
 2579 0002 11D8     		bhi	.L284
 988:mpu_9250.c    ****     if (num > 3) return 0;
 2580              		.loc 1 988 0
 2581 0004 10B5     		push	{r4, lr}
 2582              		.cfi_def_cfa_offset 8
 2583              		.cfi_offset 4, -8
 2584              		.cfi_offset 14, -4
 990:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_I2C_SLV0_CTRL + num*3, I2C_MPU9250_I2C_SLV_BYTE_SW_BIT, buffer);
 2585              		.loc 1 990 0
 2586 0006 00EB4000 		add	r0, r0, r0, lsl #1
 2587              	.LVL151:
 2588 000a 00F12701 		add	r1, r0, #39
 2589 000e 074C     		ldr	r4, .L287
 2590 0010 074B     		ldr	r3, .L287+4
 2591 0012 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 64


 2592 0014 C9B2     		uxtb	r1, r1
 2593 0016 0622     		movs	r2, #6
 2594 0018 2346     		mov	r3, r4
 2595 001a FFF7FEFF 		bl	I2CReadBit
 2596              	.LVL152:
 991:mpu_9250.c    ****     return buffer[0];
 2597              		.loc 1 991 0
 2598 001e 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 2599 0020 0030     		adds	r0, r0, #0
 2600 0022 18BF     		it	ne
 2601 0024 0120     		movne	r0, #1
 2602 0026 10BD     		pop	{r4, pc}
 2603              	.LVL153:
 2604              	.L284:
 2605              		.cfi_def_cfa_offset 0
 2606              		.cfi_restore 4
 2607              		.cfi_restore 14
 989:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_I2C_SLV0_CTRL + num*3, I2C_MPU9250_I2C_SLV_BYTE_SW_BIT, buffer);
 2608              		.loc 1 989 0
 2609 0028 0020     		movs	r0, #0
 2610              	.LVL154:
 2611 002a 7047     		bx	lr
 2612              	.L288:
 2613              		.align	2
 2614              	.L287:
 2615 002c 00000000 		.word	buffer
 2616 0030 00000000 		.word	devAddr
 2617              		.cfi_endproc
 2618              	.LFE69:
 2619              		.size	MPU9250_getSlaveWordByteSwap, .-MPU9250_getSlaveWordByteSwap
 2620              		.section	.text.MPU9250_setSlaveWordByteSwap,"ax",%progbits
 2621              		.align	2
 2622              		.global	MPU9250_setSlaveWordByteSwap
 2623              		.thumb
 2624              		.thumb_func
 2625              		.type	MPU9250_setSlaveWordByteSwap, %function
 2626              	MPU9250_setSlaveWordByteSwap:
 2627              	.LFB70:
 992:mpu_9250.c    **** }
 993:mpu_9250.c    **** /** Set word pair byte-swapping enabled for the specified slave (0-3).
 994:mpu_9250.c    ****  * @param num Slave number (0-3)
 995:mpu_9250.c    ****  * @param enabled New word pair byte-swapping enabled value for specified slave
 996:mpu_9250.c    ****  * @see getSlaveWordByteSwap()
 997:mpu_9250.c    ****  * @see MPU9250_RA_I2C_SLV0_CTRL
 998:mpu_9250.c    ****  */
 999:mpu_9250.c    **** void MPU9250_setSlaveWordByteSwap(uint8_t num, bool enabled) {
 2628              		.loc 1 999 0
 2629              		.cfi_startproc
 2630              		@ args = 0, pretend = 0, frame = 0
 2631              		@ frame_needed = 0, uses_anonymous_args = 0
 2632              	.LVL155:
1000:mpu_9250.c    ****     if (num > 3) return;
 2633              		.loc 1 1000 0
 2634 0000 0328     		cmp	r0, #3
 2635 0002 0CD8     		bhi	.L292
 999:mpu_9250.c    ****     if (num > 3) return;
 2636              		.loc 1 999 0
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 65


 2637 0004 08B5     		push	{r3, lr}
 2638              		.cfi_def_cfa_offset 8
 2639              		.cfi_offset 3, -8
 2640              		.cfi_offset 14, -4
 2641 0006 0B46     		mov	r3, r1
1001:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_I2C_SLV0_CTRL + num*3, I2C_MPU9250_I2C_SLV_BYTE_SW_BIT, enabled
 2642              		.loc 1 1001 0
 2643 0008 00EB4000 		add	r0, r0, r0, lsl #1
 2644              	.LVL156:
 2645 000c 00F12702 		add	r2, r0, #39
 2646 0010 0349     		ldr	r1, .L293
 2647              	.LVL157:
 2648 0012 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 2649 0014 D1B2     		uxtb	r1, r2
 2650 0016 0622     		movs	r2, #6
 2651 0018 FFF7FEFF 		bl	I2CWriteBit
 2652              	.LVL158:
 2653 001c 08BD     		pop	{r3, pc}
 2654              	.LVL159:
 2655              	.L292:
 2656              		.cfi_def_cfa_offset 0
 2657              		.cfi_restore 3
 2658              		.cfi_restore 14
 2659 001e 7047     		bx	lr
 2660              	.L294:
 2661              		.align	2
 2662              	.L293:
 2663 0020 00000000 		.word	devAddr
 2664              		.cfi_endproc
 2665              	.LFE70:
 2666              		.size	MPU9250_setSlaveWordByteSwap, .-MPU9250_setSlaveWordByteSwap
 2667              		.section	.text.MPU9250_getSlaveWriteMode,"ax",%progbits
 2668              		.align	2
 2669              		.global	MPU9250_getSlaveWriteMode
 2670              		.thumb
 2671              		.thumb_func
 2672              		.type	MPU9250_getSlaveWriteMode, %function
 2673              	MPU9250_getSlaveWriteMode:
 2674              	.LFB71:
1002:mpu_9250.c    **** }
1003:mpu_9250.c    **** /** Get write mode for the specified slave (0-3).
1004:mpu_9250.c    ****  * When set to 1, the transaction will read or write data only. When cleared to
1005:mpu_9250.c    ****  * 0, the transaction will write a register address prior to reading or writing
1006:mpu_9250.c    ****  * data. This should equal 0 when specifying the register address within the
1007:mpu_9250.c    ****  * Slave device to/from which the ensuing data transaction will take place.
1008:mpu_9250.c    ****  *
1009:mpu_9250.c    ****  * @param num Slave number (0-3)
1010:mpu_9250.c    ****  * @return Current write mode for specified slave (0 = register address + data, 1 = data only)
1011:mpu_9250.c    ****  * @see MPU9250_RA_I2C_SLV0_CTRL
1012:mpu_9250.c    ****  */
1013:mpu_9250.c    **** bool MPU9250_getSlaveWriteMode(uint8_t num) {
 2675              		.loc 1 1013 0
 2676              		.cfi_startproc
 2677              		@ args = 0, pretend = 0, frame = 0
 2678              		@ frame_needed = 0, uses_anonymous_args = 0
 2679              	.LVL160:
1014:mpu_9250.c    ****     if (num > 3) return 0;
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 66


 2680              		.loc 1 1014 0
 2681 0000 0328     		cmp	r0, #3
 2682 0002 11D8     		bhi	.L297
1013:mpu_9250.c    ****     if (num > 3) return 0;
 2683              		.loc 1 1013 0
 2684 0004 10B5     		push	{r4, lr}
 2685              		.cfi_def_cfa_offset 8
 2686              		.cfi_offset 4, -8
 2687              		.cfi_offset 14, -4
1015:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_I2C_SLV0_CTRL + num*3, I2C_MPU9250_I2C_SLV_REG_DIS_BIT, buffer);
 2688              		.loc 1 1015 0
 2689 0006 00EB4000 		add	r0, r0, r0, lsl #1
 2690              	.LVL161:
 2691 000a 00F12701 		add	r1, r0, #39
 2692 000e 074C     		ldr	r4, .L300
 2693 0010 074B     		ldr	r3, .L300+4
 2694 0012 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2695 0014 C9B2     		uxtb	r1, r1
 2696 0016 0522     		movs	r2, #5
 2697 0018 2346     		mov	r3, r4
 2698 001a FFF7FEFF 		bl	I2CReadBit
 2699              	.LVL162:
1016:mpu_9250.c    ****     return buffer[0];
 2700              		.loc 1 1016 0
 2701 001e 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 2702 0020 0030     		adds	r0, r0, #0
 2703 0022 18BF     		it	ne
 2704 0024 0120     		movne	r0, #1
 2705 0026 10BD     		pop	{r4, pc}
 2706              	.LVL163:
 2707              	.L297:
 2708              		.cfi_def_cfa_offset 0
 2709              		.cfi_restore 4
 2710              		.cfi_restore 14
1014:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_I2C_SLV0_CTRL + num*3, I2C_MPU9250_I2C_SLV_REG_DIS_BIT, buffer);
 2711              		.loc 1 1014 0
 2712 0028 0020     		movs	r0, #0
 2713              	.LVL164:
 2714 002a 7047     		bx	lr
 2715              	.L301:
 2716              		.align	2
 2717              	.L300:
 2718 002c 00000000 		.word	buffer
 2719 0030 00000000 		.word	devAddr
 2720              		.cfi_endproc
 2721              	.LFE71:
 2722              		.size	MPU9250_getSlaveWriteMode, .-MPU9250_getSlaveWriteMode
 2723              		.section	.text.MPU9250_setSlaveWriteMode,"ax",%progbits
 2724              		.align	2
 2725              		.global	MPU9250_setSlaveWriteMode
 2726              		.thumb
 2727              		.thumb_func
 2728              		.type	MPU9250_setSlaveWriteMode, %function
 2729              	MPU9250_setSlaveWriteMode:
 2730              	.LFB72:
1017:mpu_9250.c    **** }
1018:mpu_9250.c    **** /** Set write mode for the specified slave (0-3).
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 67


1019:mpu_9250.c    ****  * @param num Slave number (0-3)
1020:mpu_9250.c    ****  * @param mode New write mode for specified slave (0 = register address + data, 1 = data only)
1021:mpu_9250.c    ****  * @see getSlaveWriteMode()
1022:mpu_9250.c    ****  * @see MPU9250_RA_I2C_SLV0_CTRL
1023:mpu_9250.c    ****  */
1024:mpu_9250.c    **** void MPU9250_setSlaveWriteMode(uint8_t num, bool mode) {
 2731              		.loc 1 1024 0
 2732              		.cfi_startproc
 2733              		@ args = 0, pretend = 0, frame = 0
 2734              		@ frame_needed = 0, uses_anonymous_args = 0
 2735              	.LVL165:
1025:mpu_9250.c    ****     if (num > 3) return;
 2736              		.loc 1 1025 0
 2737 0000 0328     		cmp	r0, #3
 2738 0002 0CD8     		bhi	.L305
1024:mpu_9250.c    ****     if (num > 3) return;
 2739              		.loc 1 1024 0
 2740 0004 08B5     		push	{r3, lr}
 2741              		.cfi_def_cfa_offset 8
 2742              		.cfi_offset 3, -8
 2743              		.cfi_offset 14, -4
 2744 0006 0B46     		mov	r3, r1
1026:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_I2C_SLV0_CTRL + num*3, I2C_MPU9250_I2C_SLV_REG_DIS_BIT, mode);
 2745              		.loc 1 1026 0
 2746 0008 00EB4000 		add	r0, r0, r0, lsl #1
 2747              	.LVL166:
 2748 000c 00F12702 		add	r2, r0, #39
 2749 0010 0349     		ldr	r1, .L306
 2750              	.LVL167:
 2751 0012 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 2752 0014 D1B2     		uxtb	r1, r2
 2753 0016 0522     		movs	r2, #5
 2754 0018 FFF7FEFF 		bl	I2CWriteBit
 2755              	.LVL168:
 2756 001c 08BD     		pop	{r3, pc}
 2757              	.LVL169:
 2758              	.L305:
 2759              		.cfi_def_cfa_offset 0
 2760              		.cfi_restore 3
 2761              		.cfi_restore 14
 2762 001e 7047     		bx	lr
 2763              	.L307:
 2764              		.align	2
 2765              	.L306:
 2766 0020 00000000 		.word	devAddr
 2767              		.cfi_endproc
 2768              	.LFE72:
 2769              		.size	MPU9250_setSlaveWriteMode, .-MPU9250_setSlaveWriteMode
 2770              		.section	.text.MPU9250_getSlaveWordGroupOffset,"ax",%progbits
 2771              		.align	2
 2772              		.global	MPU9250_getSlaveWordGroupOffset
 2773              		.thumb
 2774              		.thumb_func
 2775              		.type	MPU9250_getSlaveWordGroupOffset, %function
 2776              	MPU9250_getSlaveWordGroupOffset:
 2777              	.LFB73:
1027:mpu_9250.c    **** }
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 68


1028:mpu_9250.c    **** /** Get word pair grouping order offset for the specified slave (0-3).
1029:mpu_9250.c    ****  * This sets specifies the grouping order of word pairs received from registers.
1030:mpu_9250.c    ****  * When cleared to 0, bytes from register addresses 0 and 1, 2 and 3, etc (even,
1031:mpu_9250.c    ****  * then odd register addresses) are paired to form a word. When set to 1, bytes
1032:mpu_9250.c    ****  * from register addresses are paired 1 and 2, 3 and 4, etc. (odd, then even
1033:mpu_9250.c    ****  * register addresses) are paired to form a word.
1034:mpu_9250.c    ****  *
1035:mpu_9250.c    ****  * @param num Slave number (0-3)
1036:mpu_9250.c    ****  * @return Current word pair grouping order offset for specified slave
1037:mpu_9250.c    ****  * @see MPU9250_RA_I2C_SLV0_CTRL
1038:mpu_9250.c    ****  */
1039:mpu_9250.c    **** bool MPU9250_getSlaveWordGroupOffset(uint8_t num) {
 2778              		.loc 1 1039 0
 2779              		.cfi_startproc
 2780              		@ args = 0, pretend = 0, frame = 0
 2781              		@ frame_needed = 0, uses_anonymous_args = 0
 2782              	.LVL170:
1040:mpu_9250.c    ****     if (num > 3) return 0;
 2783              		.loc 1 1040 0
 2784 0000 0328     		cmp	r0, #3
 2785 0002 11D8     		bhi	.L310
1039:mpu_9250.c    ****     if (num > 3) return 0;
 2786              		.loc 1 1039 0
 2787 0004 10B5     		push	{r4, lr}
 2788              		.cfi_def_cfa_offset 8
 2789              		.cfi_offset 4, -8
 2790              		.cfi_offset 14, -4
1041:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_I2C_SLV0_CTRL + num*3, I2C_MPU9250_I2C_SLV_GRP_BIT, buffer);
 2791              		.loc 1 1041 0
 2792 0006 00EB4000 		add	r0, r0, r0, lsl #1
 2793              	.LVL171:
 2794 000a 00F12701 		add	r1, r0, #39
 2795 000e 074C     		ldr	r4, .L313
 2796 0010 074B     		ldr	r3, .L313+4
 2797 0012 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2798 0014 C9B2     		uxtb	r1, r1
 2799 0016 0422     		movs	r2, #4
 2800 0018 2346     		mov	r3, r4
 2801 001a FFF7FEFF 		bl	I2CReadBit
 2802              	.LVL172:
1042:mpu_9250.c    ****     return buffer[0];
 2803              		.loc 1 1042 0
 2804 001e 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 2805 0020 0030     		adds	r0, r0, #0
 2806 0022 18BF     		it	ne
 2807 0024 0120     		movne	r0, #1
 2808 0026 10BD     		pop	{r4, pc}
 2809              	.LVL173:
 2810              	.L310:
 2811              		.cfi_def_cfa_offset 0
 2812              		.cfi_restore 4
 2813              		.cfi_restore 14
1040:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_I2C_SLV0_CTRL + num*3, I2C_MPU9250_I2C_SLV_GRP_BIT, buffer);
 2814              		.loc 1 1040 0
 2815 0028 0020     		movs	r0, #0
 2816              	.LVL174:
 2817 002a 7047     		bx	lr
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 69


 2818              	.L314:
 2819              		.align	2
 2820              	.L313:
 2821 002c 00000000 		.word	buffer
 2822 0030 00000000 		.word	devAddr
 2823              		.cfi_endproc
 2824              	.LFE73:
 2825              		.size	MPU9250_getSlaveWordGroupOffset, .-MPU9250_getSlaveWordGroupOffset
 2826              		.section	.text.MPU9250_setSlaveWordGroupOffset,"ax",%progbits
 2827              		.align	2
 2828              		.global	MPU9250_setSlaveWordGroupOffset
 2829              		.thumb
 2830              		.thumb_func
 2831              		.type	MPU9250_setSlaveWordGroupOffset, %function
 2832              	MPU9250_setSlaveWordGroupOffset:
 2833              	.LFB74:
1043:mpu_9250.c    **** }
1044:mpu_9250.c    **** /** Set word pair grouping order offset for the specified slave (0-3).
1045:mpu_9250.c    ****  * @param num Slave number (0-3)
1046:mpu_9250.c    ****  * @param enabled New word pair grouping order offset for specified slave
1047:mpu_9250.c    ****  * @see getSlaveWordGroupOffset()
1048:mpu_9250.c    ****  * @see MPU9250_RA_I2C_SLV0_CTRL
1049:mpu_9250.c    ****  */
1050:mpu_9250.c    **** void MPU9250_setSlaveWordGroupOffset(uint8_t num, bool enabled) {
 2834              		.loc 1 1050 0
 2835              		.cfi_startproc
 2836              		@ args = 0, pretend = 0, frame = 0
 2837              		@ frame_needed = 0, uses_anonymous_args = 0
 2838              	.LVL175:
1051:mpu_9250.c    ****     if (num > 3) return;
 2839              		.loc 1 1051 0
 2840 0000 0328     		cmp	r0, #3
 2841 0002 0CD8     		bhi	.L318
1050:mpu_9250.c    ****     if (num > 3) return;
 2842              		.loc 1 1050 0
 2843 0004 08B5     		push	{r3, lr}
 2844              		.cfi_def_cfa_offset 8
 2845              		.cfi_offset 3, -8
 2846              		.cfi_offset 14, -4
 2847 0006 0B46     		mov	r3, r1
1052:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_I2C_SLV0_CTRL + num*3, I2C_MPU9250_I2C_SLV_GRP_BIT, enabled);
 2848              		.loc 1 1052 0
 2849 0008 00EB4000 		add	r0, r0, r0, lsl #1
 2850              	.LVL176:
 2851 000c 00F12702 		add	r2, r0, #39
 2852 0010 0349     		ldr	r1, .L319
 2853              	.LVL177:
 2854 0012 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 2855 0014 D1B2     		uxtb	r1, r2
 2856 0016 0422     		movs	r2, #4
 2857 0018 FFF7FEFF 		bl	I2CWriteBit
 2858              	.LVL178:
 2859 001c 08BD     		pop	{r3, pc}
 2860              	.LVL179:
 2861              	.L318:
 2862              		.cfi_def_cfa_offset 0
 2863              		.cfi_restore 3
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 70


 2864              		.cfi_restore 14
 2865 001e 7047     		bx	lr
 2866              	.L320:
 2867              		.align	2
 2868              	.L319:
 2869 0020 00000000 		.word	devAddr
 2870              		.cfi_endproc
 2871              	.LFE74:
 2872              		.size	MPU9250_setSlaveWordGroupOffset, .-MPU9250_setSlaveWordGroupOffset
 2873              		.section	.text.MPU9250_getSlaveDataLength,"ax",%progbits
 2874              		.align	2
 2875              		.global	MPU9250_getSlaveDataLength
 2876              		.thumb
 2877              		.thumb_func
 2878              		.type	MPU9250_getSlaveDataLength, %function
 2879              	MPU9250_getSlaveDataLength:
 2880              	.LFB75:
1053:mpu_9250.c    **** }
1054:mpu_9250.c    **** /** Get number of bytes to read for the specified slave (0-3).
1055:mpu_9250.c    ****  * Specifies the number of bytes transferred to and from Slave 0. Clearing this
1056:mpu_9250.c    ****  * bit to 0 is equivalent to disabling the register by writing 0 to I2C_SLV0_EN.
1057:mpu_9250.c    ****  * @param num Slave number (0-3)
1058:mpu_9250.c    ****  * @return Number of bytes to read for specified slave
1059:mpu_9250.c    ****  * @see MPU9250_RA_I2C_SLV0_CTRL
1060:mpu_9250.c    ****  */
1061:mpu_9250.c    **** uint8_t MPU9250_getSlaveDataLength(uint8_t num) {
 2881              		.loc 1 1061 0
 2882              		.cfi_startproc
 2883              		@ args = 0, pretend = 0, frame = 0
 2884              		@ frame_needed = 0, uses_anonymous_args = 0
 2885              	.LVL180:
1062:mpu_9250.c    ****     if (num > 3) return 0;
 2886              		.loc 1 1062 0
 2887 0000 0328     		cmp	r0, #3
 2888 0002 10D8     		bhi	.L323
1061:mpu_9250.c    ****     if (num > 3) return 0;
 2889              		.loc 1 1061 0
 2890 0004 10B5     		push	{r4, lr}
 2891              		.cfi_def_cfa_offset 8
 2892              		.cfi_offset 4, -8
 2893              		.cfi_offset 14, -4
 2894 0006 82B0     		sub	sp, sp, #8
 2895              		.cfi_def_cfa_offset 16
 2896 0008 0146     		mov	r1, r0
1063:mpu_9250.c    ****     I2CReadBits(devAddr, MPU9250_RA_I2C_SLV0_CTRL + num*3, I2C_MPU9250_I2C_SLV_LEN_BIT, I2C_MPU9250
 2897              		.loc 1 1063 0
 2898 000a 094B     		ldr	r3, .L326
 2899 000c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2900              	.LVL181:
 2901 000e 01EB4101 		add	r1, r1, r1, lsl #1
 2902 0012 2731     		adds	r1, r1, #39
 2903 0014 074C     		ldr	r4, .L326+4
 2904 0016 0094     		str	r4, [sp]
 2905 0018 C9B2     		uxtb	r1, r1
 2906 001a 0322     		movs	r2, #3
 2907 001c 0423     		movs	r3, #4
 2908 001e FFF7FEFF 		bl	I2CReadBits
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 71


 2909              	.LVL182:
1064:mpu_9250.c    ****     return buffer[0];
 2910              		.loc 1 1064 0
 2911 0022 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 2912 0024 01E0     		b	.L322
 2913              	.LVL183:
 2914              	.L323:
 2915              		.cfi_def_cfa_offset 0
 2916              		.cfi_restore 4
 2917              		.cfi_restore 14
1062:mpu_9250.c    ****     I2CReadBits(devAddr, MPU9250_RA_I2C_SLV0_CTRL + num*3, I2C_MPU9250_I2C_SLV_LEN_BIT, I2C_MPU9250
 2918              		.loc 1 1062 0
 2919 0026 0020     		movs	r0, #0
 2920              	.LVL184:
 2921 0028 7047     		bx	lr
 2922              	.L322:
 2923              		.cfi_def_cfa_offset 16
 2924              		.cfi_offset 4, -8
 2925              		.cfi_offset 14, -4
1065:mpu_9250.c    **** }
 2926              		.loc 1 1065 0
 2927 002a 02B0     		add	sp, sp, #8
 2928              		.cfi_def_cfa_offset 8
 2929              		@ sp needed
 2930 002c 10BD     		pop	{r4, pc}
 2931              	.L327:
 2932 002e 00BF     		.align	2
 2933              	.L326:
 2934 0030 00000000 		.word	devAddr
 2935 0034 00000000 		.word	buffer
 2936              		.cfi_endproc
 2937              	.LFE75:
 2938              		.size	MPU9250_getSlaveDataLength, .-MPU9250_getSlaveDataLength
 2939              		.section	.text.MPU9250_setSlaveDataLength,"ax",%progbits
 2940              		.align	2
 2941              		.global	MPU9250_setSlaveDataLength
 2942              		.thumb
 2943              		.thumb_func
 2944              		.type	MPU9250_setSlaveDataLength, %function
 2945              	MPU9250_setSlaveDataLength:
 2946              	.LFB76:
1066:mpu_9250.c    **** /** Set number of bytes to read for the specified slave (0-3).
1067:mpu_9250.c    ****  * @param num Slave number (0-3)
1068:mpu_9250.c    ****  * @param length Number of bytes to read for specified slave
1069:mpu_9250.c    ****  * @see getSlaveDataLength()
1070:mpu_9250.c    ****  * @see MPU9250_RA_I2C_SLV0_CTRL
1071:mpu_9250.c    ****  */
1072:mpu_9250.c    **** void MPU9250_setSlaveDataLength(uint8_t num, uint8_t length) {
 2947              		.loc 1 1072 0
 2948              		.cfi_startproc
 2949              		@ args = 0, pretend = 0, frame = 0
 2950              		@ frame_needed = 0, uses_anonymous_args = 0
 2951              	.LVL185:
1073:mpu_9250.c    ****     if (num > 3) return;
 2952              		.loc 1 1073 0
 2953 0000 0328     		cmp	r0, #3
 2954 0002 10D8     		bhi	.L331
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 72


1072:mpu_9250.c    ****     if (num > 3) return;
 2955              		.loc 1 1072 0
 2956 0004 00B5     		push	{lr}
 2957              		.cfi_def_cfa_offset 4
 2958              		.cfi_offset 14, -4
 2959 0006 83B0     		sub	sp, sp, #12
 2960              		.cfi_def_cfa_offset 16
 2961 0008 0346     		mov	r3, r0
1074:mpu_9250.c    ****     I2CWriteBits(devAddr, MPU9250_RA_I2C_SLV0_CTRL + num*3, I2C_MPU9250_I2C_SLV_LEN_BIT, I2C_MPU925
 2962              		.loc 1 1074 0
 2963 000a 074A     		ldr	r2, .L332
 2964 000c 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 2965              	.LVL186:
 2966 000e 03EB4303 		add	r3, r3, r3, lsl #1
 2967 0012 2733     		adds	r3, r3, #39
 2968 0014 0091     		str	r1, [sp]
 2969 0016 D9B2     		uxtb	r1, r3
 2970              	.LVL187:
 2971 0018 0322     		movs	r2, #3
 2972 001a 0423     		movs	r3, #4
 2973 001c FFF7FEFF 		bl	I2CWriteBits
 2974              	.LVL188:
1075:mpu_9250.c    **** }
 2975              		.loc 1 1075 0
 2976 0020 03B0     		add	sp, sp, #12
 2977              		.cfi_def_cfa_offset 4
 2978              		@ sp needed
 2979 0022 5DF804FB 		ldr	pc, [sp], #4
 2980              	.LVL189:
 2981              	.L331:
 2982              		.cfi_def_cfa_offset 0
 2983              		.cfi_restore 14
 2984 0026 7047     		bx	lr
 2985              	.L333:
 2986              		.align	2
 2987              	.L332:
 2988 0028 00000000 		.word	devAddr
 2989              		.cfi_endproc
 2990              	.LFE76:
 2991              		.size	MPU9250_setSlaveDataLength, .-MPU9250_setSlaveDataLength
 2992              		.section	.text.MPU9250_getSlave4Address,"ax",%progbits
 2993              		.align	2
 2994              		.global	MPU9250_getSlave4Address
 2995              		.thumb
 2996              		.thumb_func
 2997              		.type	MPU9250_getSlave4Address, %function
 2998              	MPU9250_getSlave4Address:
 2999              	.LFB77:
1076:mpu_9250.c    **** 
1077:mpu_9250.c    **** // I2C_SLV* registers (Slave 4)
1078:mpu_9250.c    **** 
1079:mpu_9250.c    **** /** Get the I2C address of Slave 4.
1080:mpu_9250.c    ****  * Note that Bit 7 (MSB) controls read/write mode. If Bit 7 is set, it's a read
1081:mpu_9250.c    ****  * operation, and if it is cleared, then it's a write operation. The remaining
1082:mpu_9250.c    ****  * bits (6-0) are the 7-bit device address of the slave device.
1083:mpu_9250.c    ****  *
1084:mpu_9250.c    ****  * @return Current address for Slave 4
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 73


1085:mpu_9250.c    ****  * @see getSlaveAddress()
1086:mpu_9250.c    ****  * @see MPU9250_RA_I2C_SLV4_ADDR
1087:mpu_9250.c    ****  */
1088:mpu_9250.c    **** uint8_t MPU9250_getSlave4Address() {
 3000              		.loc 1 1088 0
 3001              		.cfi_startproc
 3002              		@ args = 0, pretend = 0, frame = 0
 3003              		@ frame_needed = 0, uses_anonymous_args = 0
 3004 0000 10B5     		push	{r4, lr}
 3005              		.cfi_def_cfa_offset 8
 3006              		.cfi_offset 4, -8
 3007              		.cfi_offset 14, -4
1089:mpu_9250.c    ****     I2CReadByte(devAddr, MPU9250_RA_I2C_SLV4_ADDR, buffer);
 3008              		.loc 1 1089 0
 3009 0002 044C     		ldr	r4, .L336
 3010 0004 044B     		ldr	r3, .L336+4
 3011 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 3012 0008 3121     		movs	r1, #49
 3013 000a 2246     		mov	r2, r4
 3014 000c FFF7FEFF 		bl	I2CReadByte
 3015              	.LVL190:
1090:mpu_9250.c    ****     return buffer[0];
1091:mpu_9250.c    **** }
 3016              		.loc 1 1091 0
 3017 0010 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 3018 0012 10BD     		pop	{r4, pc}
 3019              	.L337:
 3020              		.align	2
 3021              	.L336:
 3022 0014 00000000 		.word	buffer
 3023 0018 00000000 		.word	devAddr
 3024              		.cfi_endproc
 3025              	.LFE77:
 3026              		.size	MPU9250_getSlave4Address, .-MPU9250_getSlave4Address
 3027              		.section	.text.MPU9250_setSlave4Address,"ax",%progbits
 3028              		.align	2
 3029              		.global	MPU9250_setSlave4Address
 3030              		.thumb
 3031              		.thumb_func
 3032              		.type	MPU9250_setSlave4Address, %function
 3033              	MPU9250_setSlave4Address:
 3034              	.LFB78:
1092:mpu_9250.c    **** /** Set the I2C address of Slave 4.
1093:mpu_9250.c    ****  * @param address New address for Slave 4
1094:mpu_9250.c    ****  * @see getSlave4Address()
1095:mpu_9250.c    ****  * @see MPU9250_RA_I2C_SLV4_ADDR
1096:mpu_9250.c    ****  */
1097:mpu_9250.c    **** void MPU9250_setSlave4Address(uint8_t address) {
 3035              		.loc 1 1097 0
 3036              		.cfi_startproc
 3037              		@ args = 0, pretend = 0, frame = 0
 3038              		@ frame_needed = 0, uses_anonymous_args = 0
 3039              	.LVL191:
 3040 0000 08B5     		push	{r3, lr}
 3041              		.cfi_def_cfa_offset 8
 3042              		.cfi_offset 3, -8
 3043              		.cfi_offset 14, -4
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 74


 3044 0002 0246     		mov	r2, r0
1098:mpu_9250.c    ****     I2CWriteByte(devAddr, MPU9250_RA_I2C_SLV4_ADDR, address);
 3045              		.loc 1 1098 0
 3046 0004 024B     		ldr	r3, .L340
 3047 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 3048              	.LVL192:
 3049 0008 3121     		movs	r1, #49
 3050 000a FFF7FEFF 		bl	I2CWriteByte
 3051              	.LVL193:
 3052 000e 08BD     		pop	{r3, pc}
 3053              	.L341:
 3054              		.align	2
 3055              	.L340:
 3056 0010 00000000 		.word	devAddr
 3057              		.cfi_endproc
 3058              	.LFE78:
 3059              		.size	MPU9250_setSlave4Address, .-MPU9250_setSlave4Address
 3060              		.section	.text.MPU9250_getSlave4Register,"ax",%progbits
 3061              		.align	2
 3062              		.global	MPU9250_getSlave4Register
 3063              		.thumb
 3064              		.thumb_func
 3065              		.type	MPU9250_getSlave4Register, %function
 3066              	MPU9250_getSlave4Register:
 3067              	.LFB79:
1099:mpu_9250.c    **** }
1100:mpu_9250.c    **** /** Get the active internal register for the Slave 4.
1101:mpu_9250.c    ****  * Read/write operations for this slave will be done to whatever internal
1102:mpu_9250.c    ****  * register address is stored in this MPU register.
1103:mpu_9250.c    ****  *
1104:mpu_9250.c    ****  * @return Current active register for Slave 4
1105:mpu_9250.c    ****  * @see MPU9250_RA_I2C_SLV4_REG
1106:mpu_9250.c    ****  */
1107:mpu_9250.c    **** uint8_t MPU9250_getSlave4Register() {
 3068              		.loc 1 1107 0
 3069              		.cfi_startproc
 3070              		@ args = 0, pretend = 0, frame = 0
 3071              		@ frame_needed = 0, uses_anonymous_args = 0
 3072 0000 10B5     		push	{r4, lr}
 3073              		.cfi_def_cfa_offset 8
 3074              		.cfi_offset 4, -8
 3075              		.cfi_offset 14, -4
1108:mpu_9250.c    ****     I2CReadByte(devAddr, MPU9250_RA_I2C_SLV4_REG, buffer);
 3076              		.loc 1 1108 0
 3077 0002 044C     		ldr	r4, .L344
 3078 0004 044B     		ldr	r3, .L344+4
 3079 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 3080 0008 3221     		movs	r1, #50
 3081 000a 2246     		mov	r2, r4
 3082 000c FFF7FEFF 		bl	I2CReadByte
 3083              	.LVL194:
1109:mpu_9250.c    ****     return buffer[0];
1110:mpu_9250.c    **** }
 3084              		.loc 1 1110 0
 3085 0010 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 3086 0012 10BD     		pop	{r4, pc}
 3087              	.L345:
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 75


 3088              		.align	2
 3089              	.L344:
 3090 0014 00000000 		.word	buffer
 3091 0018 00000000 		.word	devAddr
 3092              		.cfi_endproc
 3093              	.LFE79:
 3094              		.size	MPU9250_getSlave4Register, .-MPU9250_getSlave4Register
 3095              		.section	.text.MPU9250_setSlave4Register,"ax",%progbits
 3096              		.align	2
 3097              		.global	MPU9250_setSlave4Register
 3098              		.thumb
 3099              		.thumb_func
 3100              		.type	MPU9250_setSlave4Register, %function
 3101              	MPU9250_setSlave4Register:
 3102              	.LFB80:
1111:mpu_9250.c    **** /** Set the active internal register for Slave 4.
1112:mpu_9250.c    ****  * @param reg New active register for Slave 4
1113:mpu_9250.c    ****  * @see getSlave4Register()
1114:mpu_9250.c    ****  * @see MPU9250_RA_I2C_SLV4_REG
1115:mpu_9250.c    ****  */
1116:mpu_9250.c    **** void MPU9250_setSlave4Register(uint8_t reg) {
 3103              		.loc 1 1116 0
 3104              		.cfi_startproc
 3105              		@ args = 0, pretend = 0, frame = 0
 3106              		@ frame_needed = 0, uses_anonymous_args = 0
 3107              	.LVL195:
 3108 0000 08B5     		push	{r3, lr}
 3109              		.cfi_def_cfa_offset 8
 3110              		.cfi_offset 3, -8
 3111              		.cfi_offset 14, -4
 3112 0002 0246     		mov	r2, r0
1117:mpu_9250.c    ****     I2CWriteByte(devAddr, MPU9250_RA_I2C_SLV4_REG, reg);
 3113              		.loc 1 1117 0
 3114 0004 024B     		ldr	r3, .L348
 3115 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 3116              	.LVL196:
 3117 0008 3221     		movs	r1, #50
 3118 000a FFF7FEFF 		bl	I2CWriteByte
 3119              	.LVL197:
 3120 000e 08BD     		pop	{r3, pc}
 3121              	.L349:
 3122              		.align	2
 3123              	.L348:
 3124 0010 00000000 		.word	devAddr
 3125              		.cfi_endproc
 3126              	.LFE80:
 3127              		.size	MPU9250_setSlave4Register, .-MPU9250_setSlave4Register
 3128              		.section	.text.MPU9250_setSlave4OutputByte,"ax",%progbits
 3129              		.align	2
 3130              		.global	MPU9250_setSlave4OutputByte
 3131              		.thumb
 3132              		.thumb_func
 3133              		.type	MPU9250_setSlave4OutputByte, %function
 3134              	MPU9250_setSlave4OutputByte:
 3135              	.LFB81:
1118:mpu_9250.c    **** }
1119:mpu_9250.c    **** /** Set new byte to write to Slave 4.
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 76


1120:mpu_9250.c    ****  * This register stores the data to be written into the Slave 4. If I2C_SLV4_RW
1121:mpu_9250.c    ****  * is set 1 (set to read), this register has no effect.
1122:mpu_9250.c    ****  * @param data New byte to write to Slave 4
1123:mpu_9250.c    ****  * @see MPU9250_RA_I2C_SLV4_DO
1124:mpu_9250.c    ****  */
1125:mpu_9250.c    **** void MPU9250_setSlave4OutputByte(uint8_t data) {
 3136              		.loc 1 1125 0
 3137              		.cfi_startproc
 3138              		@ args = 0, pretend = 0, frame = 0
 3139              		@ frame_needed = 0, uses_anonymous_args = 0
 3140              	.LVL198:
 3141 0000 08B5     		push	{r3, lr}
 3142              		.cfi_def_cfa_offset 8
 3143              		.cfi_offset 3, -8
 3144              		.cfi_offset 14, -4
 3145 0002 0246     		mov	r2, r0
1126:mpu_9250.c    ****     I2CWriteByte(devAddr, MPU9250_RA_I2C_SLV4_DO, data);
 3146              		.loc 1 1126 0
 3147 0004 024B     		ldr	r3, .L352
 3148 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 3149              	.LVL199:
 3150 0008 3321     		movs	r1, #51
 3151 000a FFF7FEFF 		bl	I2CWriteByte
 3152              	.LVL200:
 3153 000e 08BD     		pop	{r3, pc}
 3154              	.L353:
 3155              		.align	2
 3156              	.L352:
 3157 0010 00000000 		.word	devAddr
 3158              		.cfi_endproc
 3159              	.LFE81:
 3160              		.size	MPU9250_setSlave4OutputByte, .-MPU9250_setSlave4OutputByte
 3161              		.section	.text.MPU9250_getSlave4Enabled,"ax",%progbits
 3162              		.align	2
 3163              		.global	MPU9250_getSlave4Enabled
 3164              		.thumb
 3165              		.thumb_func
 3166              		.type	MPU9250_getSlave4Enabled, %function
 3167              	MPU9250_getSlave4Enabled:
 3168              	.LFB82:
1127:mpu_9250.c    **** }
1128:mpu_9250.c    **** /** Get the enabled value for the Slave 4.
1129:mpu_9250.c    ****  * When set to 1, this bit enables Slave 4 for data transfer operations. When
1130:mpu_9250.c    ****  * cleared to 0, this bit disables Slave 4 from data transfer operations.
1131:mpu_9250.c    ****  * @return Current enabled value for Slave 4
1132:mpu_9250.c    ****  * @see MPU9250_RA_I2C_SLV4_CTRL
1133:mpu_9250.c    ****  */
1134:mpu_9250.c    **** bool MPU9250_getSlave4Enabled() {
 3169              		.loc 1 1134 0
 3170              		.cfi_startproc
 3171              		@ args = 0, pretend = 0, frame = 0
 3172              		@ frame_needed = 0, uses_anonymous_args = 0
 3173 0000 10B5     		push	{r4, lr}
 3174              		.cfi_def_cfa_offset 8
 3175              		.cfi_offset 4, -8
 3176              		.cfi_offset 14, -4
1135:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_I2C_SLV4_CTRL, I2C_MPU9250_I2C_SLV4_EN_BIT, buffer);
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 77


 3177              		.loc 1 1135 0
 3178 0002 064C     		ldr	r4, .L356
 3179 0004 064B     		ldr	r3, .L356+4
 3180 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 3181 0008 3421     		movs	r1, #52
 3182 000a 0722     		movs	r2, #7
 3183 000c 2346     		mov	r3, r4
 3184 000e FFF7FEFF 		bl	I2CReadBit
 3185              	.LVL201:
1136:mpu_9250.c    ****     return buffer[0];
 3186              		.loc 1 1136 0
 3187 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
1137:mpu_9250.c    **** }
 3188              		.loc 1 1137 0
 3189 0014 0030     		adds	r0, r0, #0
 3190 0016 18BF     		it	ne
 3191 0018 0120     		movne	r0, #1
 3192 001a 10BD     		pop	{r4, pc}
 3193              	.L357:
 3194              		.align	2
 3195              	.L356:
 3196 001c 00000000 		.word	buffer
 3197 0020 00000000 		.word	devAddr
 3198              		.cfi_endproc
 3199              	.LFE82:
 3200              		.size	MPU9250_getSlave4Enabled, .-MPU9250_getSlave4Enabled
 3201              		.section	.text.MPU9250_setSlave4Enabled,"ax",%progbits
 3202              		.align	2
 3203              		.global	MPU9250_setSlave4Enabled
 3204              		.thumb
 3205              		.thumb_func
 3206              		.type	MPU9250_setSlave4Enabled, %function
 3207              	MPU9250_setSlave4Enabled:
 3208              	.LFB83:
1138:mpu_9250.c    **** /** Set the enabled value for Slave 4.
1139:mpu_9250.c    ****  * @param enabled New enabled value for Slave 4
1140:mpu_9250.c    ****  * @see getSlave4Enabled()
1141:mpu_9250.c    ****  * @see MPU9250_RA_I2C_SLV4_CTRL
1142:mpu_9250.c    ****  */
1143:mpu_9250.c    **** void MPU9250_setSlave4Enabled(bool enabled) {
 3209              		.loc 1 1143 0
 3210              		.cfi_startproc
 3211              		@ args = 0, pretend = 0, frame = 0
 3212              		@ frame_needed = 0, uses_anonymous_args = 0
 3213              	.LVL202:
 3214 0000 08B5     		push	{r3, lr}
 3215              		.cfi_def_cfa_offset 8
 3216              		.cfi_offset 3, -8
 3217              		.cfi_offset 14, -4
 3218 0002 0346     		mov	r3, r0
1144:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_I2C_SLV4_CTRL, I2C_MPU9250_I2C_SLV4_EN_BIT, enabled);
 3219              		.loc 1 1144 0
 3220 0004 034A     		ldr	r2, .L360
 3221 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 3222              	.LVL203:
 3223 0008 3421     		movs	r1, #52
 3224 000a 0722     		movs	r2, #7
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 78


 3225 000c FFF7FEFF 		bl	I2CWriteBit
 3226              	.LVL204:
 3227 0010 08BD     		pop	{r3, pc}
 3228              	.L361:
 3229 0012 00BF     		.align	2
 3230              	.L360:
 3231 0014 00000000 		.word	devAddr
 3232              		.cfi_endproc
 3233              	.LFE83:
 3234              		.size	MPU9250_setSlave4Enabled, .-MPU9250_setSlave4Enabled
 3235              		.section	.text.MPU9250_getSlave4InterruptEnabled,"ax",%progbits
 3236              		.align	2
 3237              		.global	MPU9250_getSlave4InterruptEnabled
 3238              		.thumb
 3239              		.thumb_func
 3240              		.type	MPU9250_getSlave4InterruptEnabled, %function
 3241              	MPU9250_getSlave4InterruptEnabled:
 3242              	.LFB84:
1145:mpu_9250.c    **** }
1146:mpu_9250.c    **** /** Get the enabled value for Slave 4 transaction interrupts.
1147:mpu_9250.c    ****  * When set to 1, this bit enables the generation of an interrupt signal upon
1148:mpu_9250.c    ****  * completion of a Slave 4 transaction. When cleared to 0, this bit disables the
1149:mpu_9250.c    ****  * generation of an interrupt signal upon completion of a Slave 4 transaction.
1150:mpu_9250.c    ****  * The interrupt status can be observed in Register 54.
1151:mpu_9250.c    ****  *
1152:mpu_9250.c    ****  * @return Current enabled value for Slave 4 transaction interrupts.
1153:mpu_9250.c    ****  * @see MPU9250_RA_I2C_SLV4_CTRL
1154:mpu_9250.c    ****  */
1155:mpu_9250.c    **** bool MPU9250_getSlave4InterruptEnabled() {
 3243              		.loc 1 1155 0
 3244              		.cfi_startproc
 3245              		@ args = 0, pretend = 0, frame = 0
 3246              		@ frame_needed = 0, uses_anonymous_args = 0
 3247 0000 10B5     		push	{r4, lr}
 3248              		.cfi_def_cfa_offset 8
 3249              		.cfi_offset 4, -8
 3250              		.cfi_offset 14, -4
1156:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_I2C_SLV4_CTRL, I2C_MPU9250_I2C_SLV4_INT_EN_BIT, buffer);
 3251              		.loc 1 1156 0
 3252 0002 064C     		ldr	r4, .L364
 3253 0004 064B     		ldr	r3, .L364+4
 3254 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 3255 0008 3421     		movs	r1, #52
 3256 000a 0622     		movs	r2, #6
 3257 000c 2346     		mov	r3, r4
 3258 000e FFF7FEFF 		bl	I2CReadBit
 3259              	.LVL205:
1157:mpu_9250.c    ****     return buffer[0];
 3260              		.loc 1 1157 0
 3261 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
1158:mpu_9250.c    **** }
 3262              		.loc 1 1158 0
 3263 0014 0030     		adds	r0, r0, #0
 3264 0016 18BF     		it	ne
 3265 0018 0120     		movne	r0, #1
 3266 001a 10BD     		pop	{r4, pc}
 3267              	.L365:
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 79


 3268              		.align	2
 3269              	.L364:
 3270 001c 00000000 		.word	buffer
 3271 0020 00000000 		.word	devAddr
 3272              		.cfi_endproc
 3273              	.LFE84:
 3274              		.size	MPU9250_getSlave4InterruptEnabled, .-MPU9250_getSlave4InterruptEnabled
 3275              		.section	.text.MPU9250_setSlave4InterruptEnabled,"ax",%progbits
 3276              		.align	2
 3277              		.global	MPU9250_setSlave4InterruptEnabled
 3278              		.thumb
 3279              		.thumb_func
 3280              		.type	MPU9250_setSlave4InterruptEnabled, %function
 3281              	MPU9250_setSlave4InterruptEnabled:
 3282              	.LFB85:
1159:mpu_9250.c    **** /** Set the enabled value for Slave 4 transaction interrupts.
1160:mpu_9250.c    ****  * @param enabled New enabled value for Slave 4 transaction interrupts.
1161:mpu_9250.c    ****  * @see getSlave4InterruptEnabled()
1162:mpu_9250.c    ****  * @see MPU9250_RA_I2C_SLV4_CTRL
1163:mpu_9250.c    ****  */
1164:mpu_9250.c    **** void MPU9250_setSlave4InterruptEnabled(bool enabled) {
 3283              		.loc 1 1164 0
 3284              		.cfi_startproc
 3285              		@ args = 0, pretend = 0, frame = 0
 3286              		@ frame_needed = 0, uses_anonymous_args = 0
 3287              	.LVL206:
 3288 0000 08B5     		push	{r3, lr}
 3289              		.cfi_def_cfa_offset 8
 3290              		.cfi_offset 3, -8
 3291              		.cfi_offset 14, -4
 3292 0002 0346     		mov	r3, r0
1165:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_I2C_SLV4_CTRL, I2C_MPU9250_I2C_SLV4_INT_EN_BIT, enabled);
 3293              		.loc 1 1165 0
 3294 0004 034A     		ldr	r2, .L368
 3295 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 3296              	.LVL207:
 3297 0008 3421     		movs	r1, #52
 3298 000a 0622     		movs	r2, #6
 3299 000c FFF7FEFF 		bl	I2CWriteBit
 3300              	.LVL208:
 3301 0010 08BD     		pop	{r3, pc}
 3302              	.L369:
 3303 0012 00BF     		.align	2
 3304              	.L368:
 3305 0014 00000000 		.word	devAddr
 3306              		.cfi_endproc
 3307              	.LFE85:
 3308              		.size	MPU9250_setSlave4InterruptEnabled, .-MPU9250_setSlave4InterruptEnabled
 3309              		.section	.text.MPU9250_getSlave4WriteMode,"ax",%progbits
 3310              		.align	2
 3311              		.global	MPU9250_getSlave4WriteMode
 3312              		.thumb
 3313              		.thumb_func
 3314              		.type	MPU9250_getSlave4WriteMode, %function
 3315              	MPU9250_getSlave4WriteMode:
 3316              	.LFB86:
1166:mpu_9250.c    **** }
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 80


1167:mpu_9250.c    **** /** Get write mode for Slave 4.
1168:mpu_9250.c    ****  * When set to 1, the transaction will read or write data only. When cleared to
1169:mpu_9250.c    ****  * 0, the transaction will write a register address prior to reading or writing
1170:mpu_9250.c    ****  * data. This should equal 0 when specifying the register address within the
1171:mpu_9250.c    ****  * Slave device to/from which the ensuing data transaction will take place.
1172:mpu_9250.c    ****  *
1173:mpu_9250.c    ****  * @return Current write mode for Slave 4 (0 = register address + data, 1 = data only)
1174:mpu_9250.c    ****  * @see MPU9250_RA_I2C_SLV4_CTRL
1175:mpu_9250.c    ****  */
1176:mpu_9250.c    **** bool MPU9250_getSlave4WriteMode() {
 3317              		.loc 1 1176 0
 3318              		.cfi_startproc
 3319              		@ args = 0, pretend = 0, frame = 0
 3320              		@ frame_needed = 0, uses_anonymous_args = 0
 3321 0000 10B5     		push	{r4, lr}
 3322              		.cfi_def_cfa_offset 8
 3323              		.cfi_offset 4, -8
 3324              		.cfi_offset 14, -4
1177:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_I2C_SLV4_CTRL, I2C_MPU9250_I2C_SLV4_REG_DIS_BIT, buffer);
 3325              		.loc 1 1177 0
 3326 0002 064C     		ldr	r4, .L372
 3327 0004 064B     		ldr	r3, .L372+4
 3328 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 3329 0008 3421     		movs	r1, #52
 3330 000a 0522     		movs	r2, #5
 3331 000c 2346     		mov	r3, r4
 3332 000e FFF7FEFF 		bl	I2CReadBit
 3333              	.LVL209:
1178:mpu_9250.c    ****     return buffer[0];
 3334              		.loc 1 1178 0
 3335 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
1179:mpu_9250.c    **** }
 3336              		.loc 1 1179 0
 3337 0014 0030     		adds	r0, r0, #0
 3338 0016 18BF     		it	ne
 3339 0018 0120     		movne	r0, #1
 3340 001a 10BD     		pop	{r4, pc}
 3341              	.L373:
 3342              		.align	2
 3343              	.L372:
 3344 001c 00000000 		.word	buffer
 3345 0020 00000000 		.word	devAddr
 3346              		.cfi_endproc
 3347              	.LFE86:
 3348              		.size	MPU9250_getSlave4WriteMode, .-MPU9250_getSlave4WriteMode
 3349              		.section	.text.MPU9250_setSlave4WriteMode,"ax",%progbits
 3350              		.align	2
 3351              		.global	MPU9250_setSlave4WriteMode
 3352              		.thumb
 3353              		.thumb_func
 3354              		.type	MPU9250_setSlave4WriteMode, %function
 3355              	MPU9250_setSlave4WriteMode:
 3356              	.LFB87:
1180:mpu_9250.c    **** /** Set write mode for the Slave 4.
1181:mpu_9250.c    ****  * @param mode New write mode for Slave 4 (0 = register address + data, 1 = data only)
1182:mpu_9250.c    ****  * @see getSlave4WriteMode()
1183:mpu_9250.c    ****  * @see MPU9250_RA_I2C_SLV4_CTRL
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 81


1184:mpu_9250.c    ****  */
1185:mpu_9250.c    **** void MPU9250_setSlave4WriteMode(bool mode) {
 3357              		.loc 1 1185 0
 3358              		.cfi_startproc
 3359              		@ args = 0, pretend = 0, frame = 0
 3360              		@ frame_needed = 0, uses_anonymous_args = 0
 3361              	.LVL210:
 3362 0000 08B5     		push	{r3, lr}
 3363              		.cfi_def_cfa_offset 8
 3364              		.cfi_offset 3, -8
 3365              		.cfi_offset 14, -4
 3366 0002 0346     		mov	r3, r0
1186:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_I2C_SLV4_CTRL, I2C_MPU9250_I2C_SLV4_REG_DIS_BIT, mode);
 3367              		.loc 1 1186 0
 3368 0004 034A     		ldr	r2, .L376
 3369 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 3370              	.LVL211:
 3371 0008 3421     		movs	r1, #52
 3372 000a 0522     		movs	r2, #5
 3373 000c FFF7FEFF 		bl	I2CWriteBit
 3374              	.LVL212:
 3375 0010 08BD     		pop	{r3, pc}
 3376              	.L377:
 3377 0012 00BF     		.align	2
 3378              	.L376:
 3379 0014 00000000 		.word	devAddr
 3380              		.cfi_endproc
 3381              	.LFE87:
 3382              		.size	MPU9250_setSlave4WriteMode, .-MPU9250_setSlave4WriteMode
 3383              		.section	.text.MPU9250_getSlave4MasterDelay,"ax",%progbits
 3384              		.align	2
 3385              		.global	MPU9250_getSlave4MasterDelay
 3386              		.thumb
 3387              		.thumb_func
 3388              		.type	MPU9250_getSlave4MasterDelay, %function
 3389              	MPU9250_getSlave4MasterDelay:
 3390              	.LFB88:
1187:mpu_9250.c    **** }
1188:mpu_9250.c    **** /** Get Slave 4 master delay value.
1189:mpu_9250.c    ****  * This configures the reduced access rate of I2C slaves relative to the Sample
1190:mpu_9250.c    ****  * Rate. When a slave's access rate is decreased relative to the Sample Rate,
1191:mpu_9250.c    ****  * the slave is accessed every:
1192:mpu_9250.c    ****  *
1193:mpu_9250.c    ****  *     1 / (1 + I2C_MST_DLY) samples
1194:mpu_9250.c    ****  *
1195:mpu_9250.c    ****  * This base Sample Rate in turn is determined by SMPLRT_DIV (register 25) and
1196:mpu_9250.c    ****  * DLPF_CFG (register 26). Whether a slave's access rate is reduced relative to
1197:mpu_9250.c    ****  * the Sample Rate is determined by I2C_MST_DELAY_CTRL (register 103). For
1198:mpu_9250.c    ****  * further information regarding the Sample Rate, please refer to register 25.
1199:mpu_9250.c    ****  *
1200:mpu_9250.c    ****  * @return Current Slave 4 master delay value
1201:mpu_9250.c    ****  * @see MPU9250_RA_I2C_SLV4_CTRL
1202:mpu_9250.c    ****  */
1203:mpu_9250.c    **** uint8_t MPU9250_getSlave4MasterDelay() {
 3391              		.loc 1 1203 0
 3392              		.cfi_startproc
 3393              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 82


 3394              		@ frame_needed = 0, uses_anonymous_args = 0
 3395 0000 10B5     		push	{r4, lr}
 3396              		.cfi_def_cfa_offset 8
 3397              		.cfi_offset 4, -8
 3398              		.cfi_offset 14, -4
 3399 0002 82B0     		sub	sp, sp, #8
 3400              		.cfi_def_cfa_offset 16
1204:mpu_9250.c    ****     I2CReadBits(devAddr, MPU9250_RA_I2C_SLV4_CTRL, I2C_MPU9250_I2C_SLV4_MST_DLY_BIT, I2C_MPU9250_I2
 3401              		.loc 1 1204 0
 3402 0004 054B     		ldr	r3, .L380
 3403 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 3404 0008 054C     		ldr	r4, .L380+4
 3405 000a 0094     		str	r4, [sp]
 3406 000c 3421     		movs	r1, #52
 3407 000e 0422     		movs	r2, #4
 3408 0010 0523     		movs	r3, #5
 3409 0012 FFF7FEFF 		bl	I2CReadBits
 3410              	.LVL213:
1205:mpu_9250.c    ****     return buffer[0];
1206:mpu_9250.c    **** }
 3411              		.loc 1 1206 0
 3412 0016 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 3413 0018 02B0     		add	sp, sp, #8
 3414              		.cfi_def_cfa_offset 8
 3415              		@ sp needed
 3416 001a 10BD     		pop	{r4, pc}
 3417              	.L381:
 3418              		.align	2
 3419              	.L380:
 3420 001c 00000000 		.word	devAddr
 3421 0020 00000000 		.word	buffer
 3422              		.cfi_endproc
 3423              	.LFE88:
 3424              		.size	MPU9250_getSlave4MasterDelay, .-MPU9250_getSlave4MasterDelay
 3425              		.section	.text.MPU9250_setSlave4MasterDelay,"ax",%progbits
 3426              		.align	2
 3427              		.global	MPU9250_setSlave4MasterDelay
 3428              		.thumb
 3429              		.thumb_func
 3430              		.type	MPU9250_setSlave4MasterDelay, %function
 3431              	MPU9250_setSlave4MasterDelay:
 3432              	.LFB89:
1207:mpu_9250.c    **** /** Set Slave 4 master delay value.
1208:mpu_9250.c    ****  * @param delay New Slave 4 master delay value
1209:mpu_9250.c    ****  * @see getSlave4MasterDelay()
1210:mpu_9250.c    ****  * @see MPU9250_RA_I2C_SLV4_CTRL
1211:mpu_9250.c    ****  */
1212:mpu_9250.c    **** void MPU9250_setSlave4MasterDelay(uint8_t delay) {
 3433              		.loc 1 1212 0
 3434              		.cfi_startproc
 3435              		@ args = 0, pretend = 0, frame = 0
 3436              		@ frame_needed = 0, uses_anonymous_args = 0
 3437              	.LVL214:
 3438 0000 00B5     		push	{lr}
 3439              		.cfi_def_cfa_offset 4
 3440              		.cfi_offset 14, -4
 3441 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 83


 3442              		.cfi_def_cfa_offset 16
1213:mpu_9250.c    ****     I2CWriteBits(devAddr, MPU9250_RA_I2C_SLV4_CTRL, I2C_MPU9250_I2C_SLV4_MST_DLY_BIT, I2C_MPU9250_I
 3443              		.loc 1 1213 0
 3444 0004 054B     		ldr	r3, .L384
 3445 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3446 0008 0090     		str	r0, [sp]
 3447 000a 1846     		mov	r0, r3
 3448              	.LVL215:
 3449 000c 3421     		movs	r1, #52
 3450 000e 0422     		movs	r2, #4
 3451 0010 0523     		movs	r3, #5
 3452 0012 FFF7FEFF 		bl	I2CWriteBits
 3453              	.LVL216:
1214:mpu_9250.c    **** }
 3454              		.loc 1 1214 0
 3455 0016 03B0     		add	sp, sp, #12
 3456              		.cfi_def_cfa_offset 4
 3457              		@ sp needed
 3458 0018 5DF804FB 		ldr	pc, [sp], #4
 3459              	.L385:
 3460              		.align	2
 3461              	.L384:
 3462 001c 00000000 		.word	devAddr
 3463              		.cfi_endproc
 3464              	.LFE89:
 3465              		.size	MPU9250_setSlave4MasterDelay, .-MPU9250_setSlave4MasterDelay
 3466              		.section	.text.MPU9250_getSlate4InputByte,"ax",%progbits
 3467              		.align	2
 3468              		.global	MPU9250_getSlate4InputByte
 3469              		.thumb
 3470              		.thumb_func
 3471              		.type	MPU9250_getSlate4InputByte, %function
 3472              	MPU9250_getSlate4InputByte:
 3473              	.LFB90:
1215:mpu_9250.c    **** /** Get last available byte read from Slave 4.
1216:mpu_9250.c    ****  * This register stores the data read from Slave 4. This field is populated
1217:mpu_9250.c    ****  * after a read transaction.
1218:mpu_9250.c    ****  * @return Last available byte read from to Slave 4
1219:mpu_9250.c    ****  * @see MPU9250_RA_I2C_SLV4_DI
1220:mpu_9250.c    ****  */
1221:mpu_9250.c    **** uint8_t MPU9250_getSlate4InputByte() {
 3474              		.loc 1 1221 0
 3475              		.cfi_startproc
 3476              		@ args = 0, pretend = 0, frame = 0
 3477              		@ frame_needed = 0, uses_anonymous_args = 0
 3478 0000 10B5     		push	{r4, lr}
 3479              		.cfi_def_cfa_offset 8
 3480              		.cfi_offset 4, -8
 3481              		.cfi_offset 14, -4
1222:mpu_9250.c    ****     I2CReadByte(devAddr, MPU9250_RA_I2C_SLV4_DI, buffer);
 3482              		.loc 1 1222 0
 3483 0002 044C     		ldr	r4, .L388
 3484 0004 044B     		ldr	r3, .L388+4
 3485 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 3486 0008 3521     		movs	r1, #53
 3487 000a 2246     		mov	r2, r4
 3488 000c FFF7FEFF 		bl	I2CReadByte
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 84


 3489              	.LVL217:
1223:mpu_9250.c    ****     return buffer[0];
1224:mpu_9250.c    **** }
 3490              		.loc 1 1224 0
 3491 0010 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 3492 0012 10BD     		pop	{r4, pc}
 3493              	.L389:
 3494              		.align	2
 3495              	.L388:
 3496 0014 00000000 		.word	buffer
 3497 0018 00000000 		.word	devAddr
 3498              		.cfi_endproc
 3499              	.LFE90:
 3500              		.size	MPU9250_getSlate4InputByte, .-MPU9250_getSlate4InputByte
 3501              		.section	.text.MPU9250_getPassthroughStatus,"ax",%progbits
 3502              		.align	2
 3503              		.global	MPU9250_getPassthroughStatus
 3504              		.thumb
 3505              		.thumb_func
 3506              		.type	MPU9250_getPassthroughStatus, %function
 3507              	MPU9250_getPassthroughStatus:
 3508              	.LFB91:
1225:mpu_9250.c    **** 
1226:mpu_9250.c    **** // I2C_MST_STATUS register
1227:mpu_9250.c    **** 
1228:mpu_9250.c    **** /** Get FSYNC interrupt status.
1229:mpu_9250.c    ****  * This bit reflects the status of the FSYNC interrupt from an external device
1230:mpu_9250.c    ****  * into the MPU-60X0. This is used as a way to pass an external interrupt
1231:mpu_9250.c    ****  * through the MPU-60X0 to the host application processor. When set to 1, this
1232:mpu_9250.c    ****  * bit will cause an interrupt if FSYNC_INT_EN is asserted in INT_PIN_CFG
1233:mpu_9250.c    ****  * (Register 55).
1234:mpu_9250.c    ****  * @return FSYNC interrupt status
1235:mpu_9250.c    ****  * @see MPU9250_RA_I2C_MST_STATUS
1236:mpu_9250.c    ****  */
1237:mpu_9250.c    **** bool MPU9250_getPassthroughStatus() {
 3509              		.loc 1 1237 0
 3510              		.cfi_startproc
 3511              		@ args = 0, pretend = 0, frame = 0
 3512              		@ frame_needed = 0, uses_anonymous_args = 0
 3513 0000 10B5     		push	{r4, lr}
 3514              		.cfi_def_cfa_offset 8
 3515              		.cfi_offset 4, -8
 3516              		.cfi_offset 14, -4
1238:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_I2C_MST_STATUS, MPU9250_MST_PASS_THROUGH_BIT, buffer);
 3517              		.loc 1 1238 0
 3518 0002 064C     		ldr	r4, .L392
 3519 0004 064B     		ldr	r3, .L392+4
 3520 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 3521 0008 3621     		movs	r1, #54
 3522 000a 0722     		movs	r2, #7
 3523 000c 2346     		mov	r3, r4
 3524 000e FFF7FEFF 		bl	I2CReadBit
 3525              	.LVL218:
1239:mpu_9250.c    ****     return buffer[0];
 3526              		.loc 1 1239 0
 3527 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
1240:mpu_9250.c    **** }
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 85


 3528              		.loc 1 1240 0
 3529 0014 0030     		adds	r0, r0, #0
 3530 0016 18BF     		it	ne
 3531 0018 0120     		movne	r0, #1
 3532 001a 10BD     		pop	{r4, pc}
 3533              	.L393:
 3534              		.align	2
 3535              	.L392:
 3536 001c 00000000 		.word	buffer
 3537 0020 00000000 		.word	devAddr
 3538              		.cfi_endproc
 3539              	.LFE91:
 3540              		.size	MPU9250_getPassthroughStatus, .-MPU9250_getPassthroughStatus
 3541              		.section	.text.MPU9250_getSlave4IsDone,"ax",%progbits
 3542              		.align	2
 3543              		.global	MPU9250_getSlave4IsDone
 3544              		.thumb
 3545              		.thumb_func
 3546              		.type	MPU9250_getSlave4IsDone, %function
 3547              	MPU9250_getSlave4IsDone:
 3548              	.LFB92:
1241:mpu_9250.c    **** /** Get Slave 4 transaction done status.
1242:mpu_9250.c    ****  * Automatically sets to 1 when a Slave 4 transaction has completed. This
1243:mpu_9250.c    ****  * triggers an interrupt if the I2C_MST_INT_EN bit in the INT_ENABLE register
1244:mpu_9250.c    ****  * (Register 56) is asserted and if the SLV_4_DONE_INT bit is asserted in the
1245:mpu_9250.c    ****  * I2C_SLV4_CTRL register (Register 52).
1246:mpu_9250.c    ****  * @return Slave 4 transaction done status
1247:mpu_9250.c    ****  * @see MPU9250_RA_I2C_MST_STATUS
1248:mpu_9250.c    ****  */
1249:mpu_9250.c    **** bool MPU9250_getSlave4IsDone() {
 3549              		.loc 1 1249 0
 3550              		.cfi_startproc
 3551              		@ args = 0, pretend = 0, frame = 0
 3552              		@ frame_needed = 0, uses_anonymous_args = 0
 3553 0000 10B5     		push	{r4, lr}
 3554              		.cfi_def_cfa_offset 8
 3555              		.cfi_offset 4, -8
 3556              		.cfi_offset 14, -4
1250:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_I2C_MST_STATUS, MPU9250_MST_I2C_SLV4_DONE_BIT, buffer);
 3557              		.loc 1 1250 0
 3558 0002 064C     		ldr	r4, .L396
 3559 0004 064B     		ldr	r3, .L396+4
 3560 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 3561 0008 3621     		movs	r1, #54
 3562 000a 0622     		movs	r2, #6
 3563 000c 2346     		mov	r3, r4
 3564 000e FFF7FEFF 		bl	I2CReadBit
 3565              	.LVL219:
1251:mpu_9250.c    ****     return buffer[0];
 3566              		.loc 1 1251 0
 3567 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
1252:mpu_9250.c    **** }
 3568              		.loc 1 1252 0
 3569 0014 0030     		adds	r0, r0, #0
 3570 0016 18BF     		it	ne
 3571 0018 0120     		movne	r0, #1
 3572 001a 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 86


 3573              	.L397:
 3574              		.align	2
 3575              	.L396:
 3576 001c 00000000 		.word	buffer
 3577 0020 00000000 		.word	devAddr
 3578              		.cfi_endproc
 3579              	.LFE92:
 3580              		.size	MPU9250_getSlave4IsDone, .-MPU9250_getSlave4IsDone
 3581              		.section	.text.MPU9250_getLostArbitration,"ax",%progbits
 3582              		.align	2
 3583              		.global	MPU9250_getLostArbitration
 3584              		.thumb
 3585              		.thumb_func
 3586              		.type	MPU9250_getLostArbitration, %function
 3587              	MPU9250_getLostArbitration:
 3588              	.LFB93:
1253:mpu_9250.c    **** /** Get master arbitration lost status.
1254:mpu_9250.c    ****  * This bit automatically sets to 1 when the I2C Master has lost arbitration of
1255:mpu_9250.c    ****  * the auxiliary I2C bus (an error condition). This triggers an interrupt if the
1256:mpu_9250.c    ****  * I2C_MST_INT_EN bit in the INT_ENABLE register (Register 56) is asserted.
1257:mpu_9250.c    ****  * @return Master arbitration lost status
1258:mpu_9250.c    ****  * @see MPU9250_RA_I2C_MST_STATUS
1259:mpu_9250.c    ****  */
1260:mpu_9250.c    **** bool MPU9250_getLostArbitration() {
 3589              		.loc 1 1260 0
 3590              		.cfi_startproc
 3591              		@ args = 0, pretend = 0, frame = 0
 3592              		@ frame_needed = 0, uses_anonymous_args = 0
 3593 0000 10B5     		push	{r4, lr}
 3594              		.cfi_def_cfa_offset 8
 3595              		.cfi_offset 4, -8
 3596              		.cfi_offset 14, -4
1261:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_I2C_MST_STATUS, MPU9250_MST_I2C_LOST_ARB_BIT, buffer);
 3597              		.loc 1 1261 0
 3598 0002 064C     		ldr	r4, .L400
 3599 0004 064B     		ldr	r3, .L400+4
 3600 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 3601 0008 3621     		movs	r1, #54
 3602 000a 0522     		movs	r2, #5
 3603 000c 2346     		mov	r3, r4
 3604 000e FFF7FEFF 		bl	I2CReadBit
 3605              	.LVL220:
1262:mpu_9250.c    ****     return buffer[0];
 3606              		.loc 1 1262 0
 3607 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
1263:mpu_9250.c    **** }
 3608              		.loc 1 1263 0
 3609 0014 0030     		adds	r0, r0, #0
 3610 0016 18BF     		it	ne
 3611 0018 0120     		movne	r0, #1
 3612 001a 10BD     		pop	{r4, pc}
 3613              	.L401:
 3614              		.align	2
 3615              	.L400:
 3616 001c 00000000 		.word	buffer
 3617 0020 00000000 		.word	devAddr
 3618              		.cfi_endproc
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 87


 3619              	.LFE93:
 3620              		.size	MPU9250_getLostArbitration, .-MPU9250_getLostArbitration
 3621              		.section	.text.MPU9250_getSlave4Nack,"ax",%progbits
 3622              		.align	2
 3623              		.global	MPU9250_getSlave4Nack
 3624              		.thumb
 3625              		.thumb_func
 3626              		.type	MPU9250_getSlave4Nack, %function
 3627              	MPU9250_getSlave4Nack:
 3628              	.LFB94:
1264:mpu_9250.c    **** /** Get Slave 4 NACK status.
1265:mpu_9250.c    ****  * This bit automatically sets to 1 when the I2C Master receives a NACK in a
1266:mpu_9250.c    ****  * transaction with Slave 4. This triggers an interrupt if the I2C_MST_INT_EN
1267:mpu_9250.c    ****  * bit in the INT_ENABLE register (Register 56) is asserted.
1268:mpu_9250.c    ****  * @return Slave 4 NACK interrupt status
1269:mpu_9250.c    ****  * @see MPU9250_RA_I2C_MST_STATUS
1270:mpu_9250.c    ****  */
1271:mpu_9250.c    **** bool MPU9250_getSlave4Nack() {
 3629              		.loc 1 1271 0
 3630              		.cfi_startproc
 3631              		@ args = 0, pretend = 0, frame = 0
 3632              		@ frame_needed = 0, uses_anonymous_args = 0
 3633 0000 10B5     		push	{r4, lr}
 3634              		.cfi_def_cfa_offset 8
 3635              		.cfi_offset 4, -8
 3636              		.cfi_offset 14, -4
1272:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_I2C_MST_STATUS, MPU9250_MST_I2C_SLV4_NACK_BIT, buffer);
 3637              		.loc 1 1272 0
 3638 0002 064C     		ldr	r4, .L404
 3639 0004 064B     		ldr	r3, .L404+4
 3640 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 3641 0008 3621     		movs	r1, #54
 3642 000a 0422     		movs	r2, #4
 3643 000c 2346     		mov	r3, r4
 3644 000e FFF7FEFF 		bl	I2CReadBit
 3645              	.LVL221:
1273:mpu_9250.c    ****     return buffer[0];
 3646              		.loc 1 1273 0
 3647 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
1274:mpu_9250.c    **** }
 3648              		.loc 1 1274 0
 3649 0014 0030     		adds	r0, r0, #0
 3650 0016 18BF     		it	ne
 3651 0018 0120     		movne	r0, #1
 3652 001a 10BD     		pop	{r4, pc}
 3653              	.L405:
 3654              		.align	2
 3655              	.L404:
 3656 001c 00000000 		.word	buffer
 3657 0020 00000000 		.word	devAddr
 3658              		.cfi_endproc
 3659              	.LFE94:
 3660              		.size	MPU9250_getSlave4Nack, .-MPU9250_getSlave4Nack
 3661              		.section	.text.MPU9250_getSlave3Nack,"ax",%progbits
 3662              		.align	2
 3663              		.global	MPU9250_getSlave3Nack
 3664              		.thumb
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 88


 3665              		.thumb_func
 3666              		.type	MPU9250_getSlave3Nack, %function
 3667              	MPU9250_getSlave3Nack:
 3668              	.LFB95:
1275:mpu_9250.c    **** /** Get Slave 3 NACK status.
1276:mpu_9250.c    ****  * This bit automatically sets to 1 when the I2C Master receives a NACK in a
1277:mpu_9250.c    ****  * transaction with Slave 3. This triggers an interrupt if the I2C_MST_INT_EN
1278:mpu_9250.c    ****  * bit in the INT_ENABLE register (Register 56) is asserted.
1279:mpu_9250.c    ****  * @return Slave 3 NACK interrupt status
1280:mpu_9250.c    ****  * @see MPU9250_RA_I2C_MST_STATUS
1281:mpu_9250.c    ****  */
1282:mpu_9250.c    **** bool MPU9250_getSlave3Nack() {
 3669              		.loc 1 1282 0
 3670              		.cfi_startproc
 3671              		@ args = 0, pretend = 0, frame = 0
 3672              		@ frame_needed = 0, uses_anonymous_args = 0
 3673 0000 10B5     		push	{r4, lr}
 3674              		.cfi_def_cfa_offset 8
 3675              		.cfi_offset 4, -8
 3676              		.cfi_offset 14, -4
1283:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_I2C_MST_STATUS, MPU9250_MST_I2C_SLV3_NACK_BIT, buffer);
 3677              		.loc 1 1283 0
 3678 0002 064C     		ldr	r4, .L408
 3679 0004 064B     		ldr	r3, .L408+4
 3680 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 3681 0008 3621     		movs	r1, #54
 3682 000a 0322     		movs	r2, #3
 3683 000c 2346     		mov	r3, r4
 3684 000e FFF7FEFF 		bl	I2CReadBit
 3685              	.LVL222:
1284:mpu_9250.c    ****     return buffer[0];
 3686              		.loc 1 1284 0
 3687 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
1285:mpu_9250.c    **** }
 3688              		.loc 1 1285 0
 3689 0014 0030     		adds	r0, r0, #0
 3690 0016 18BF     		it	ne
 3691 0018 0120     		movne	r0, #1
 3692 001a 10BD     		pop	{r4, pc}
 3693              	.L409:
 3694              		.align	2
 3695              	.L408:
 3696 001c 00000000 		.word	buffer
 3697 0020 00000000 		.word	devAddr
 3698              		.cfi_endproc
 3699              	.LFE95:
 3700              		.size	MPU9250_getSlave3Nack, .-MPU9250_getSlave3Nack
 3701              		.section	.text.MPU9250_getSlave2Nack,"ax",%progbits
 3702              		.align	2
 3703              		.global	MPU9250_getSlave2Nack
 3704              		.thumb
 3705              		.thumb_func
 3706              		.type	MPU9250_getSlave2Nack, %function
 3707              	MPU9250_getSlave2Nack:
 3708              	.LFB96:
1286:mpu_9250.c    **** /** Get Slave 2 NACK status.
1287:mpu_9250.c    ****  * This bit automatically sets to 1 when the I2C Master receives a NACK in a
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 89


1288:mpu_9250.c    ****  * transaction with Slave 2. This triggers an interrupt if the I2C_MST_INT_EN
1289:mpu_9250.c    ****  * bit in the INT_ENABLE register (Register 56) is asserted.
1290:mpu_9250.c    ****  * @return Slave 2 NACK interrupt status
1291:mpu_9250.c    ****  * @see MPU9250_RA_I2C_MST_STATUS
1292:mpu_9250.c    ****  */
1293:mpu_9250.c    **** bool MPU9250_getSlave2Nack() {
 3709              		.loc 1 1293 0
 3710              		.cfi_startproc
 3711              		@ args = 0, pretend = 0, frame = 0
 3712              		@ frame_needed = 0, uses_anonymous_args = 0
 3713 0000 10B5     		push	{r4, lr}
 3714              		.cfi_def_cfa_offset 8
 3715              		.cfi_offset 4, -8
 3716              		.cfi_offset 14, -4
1294:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_I2C_MST_STATUS, MPU9250_MST_I2C_SLV2_NACK_BIT, buffer);
 3717              		.loc 1 1294 0
 3718 0002 064C     		ldr	r4, .L412
 3719 0004 064B     		ldr	r3, .L412+4
 3720 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 3721 0008 3621     		movs	r1, #54
 3722 000a 0222     		movs	r2, #2
 3723 000c 2346     		mov	r3, r4
 3724 000e FFF7FEFF 		bl	I2CReadBit
 3725              	.LVL223:
1295:mpu_9250.c    ****     return buffer[0];
 3726              		.loc 1 1295 0
 3727 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
1296:mpu_9250.c    **** }
 3728              		.loc 1 1296 0
 3729 0014 0030     		adds	r0, r0, #0
 3730 0016 18BF     		it	ne
 3731 0018 0120     		movne	r0, #1
 3732 001a 10BD     		pop	{r4, pc}
 3733              	.L413:
 3734              		.align	2
 3735              	.L412:
 3736 001c 00000000 		.word	buffer
 3737 0020 00000000 		.word	devAddr
 3738              		.cfi_endproc
 3739              	.LFE96:
 3740              		.size	MPU9250_getSlave2Nack, .-MPU9250_getSlave2Nack
 3741              		.section	.text.MPU9250_getSlave1Nack,"ax",%progbits
 3742              		.align	2
 3743              		.global	MPU9250_getSlave1Nack
 3744              		.thumb
 3745              		.thumb_func
 3746              		.type	MPU9250_getSlave1Nack, %function
 3747              	MPU9250_getSlave1Nack:
 3748              	.LFB97:
1297:mpu_9250.c    **** /** Get Slave 1 NACK status.
1298:mpu_9250.c    ****  * This bit automatically sets to 1 when the I2C Master receives a NACK in a
1299:mpu_9250.c    ****  * transaction with Slave 1. This triggers an interrupt if the I2C_MST_INT_EN
1300:mpu_9250.c    ****  * bit in the INT_ENABLE register (Register 56) is asserted.
1301:mpu_9250.c    ****  * @return Slave 1 NACK interrupt status
1302:mpu_9250.c    ****  * @see MPU9250_RA_I2C_MST_STATUS
1303:mpu_9250.c    ****  */
1304:mpu_9250.c    **** bool MPU9250_getSlave1Nack() {
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 90


 3749              		.loc 1 1304 0
 3750              		.cfi_startproc
 3751              		@ args = 0, pretend = 0, frame = 0
 3752              		@ frame_needed = 0, uses_anonymous_args = 0
 3753 0000 10B5     		push	{r4, lr}
 3754              		.cfi_def_cfa_offset 8
 3755              		.cfi_offset 4, -8
 3756              		.cfi_offset 14, -4
1305:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_I2C_MST_STATUS, MPU9250_MST_I2C_SLV1_NACK_BIT, buffer);
 3757              		.loc 1 1305 0
 3758 0002 064C     		ldr	r4, .L416
 3759 0004 064B     		ldr	r3, .L416+4
 3760 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 3761 0008 3621     		movs	r1, #54
 3762 000a 0122     		movs	r2, #1
 3763 000c 2346     		mov	r3, r4
 3764 000e FFF7FEFF 		bl	I2CReadBit
 3765              	.LVL224:
1306:mpu_9250.c    ****     return buffer[0];
 3766              		.loc 1 1306 0
 3767 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
1307:mpu_9250.c    **** }
 3768              		.loc 1 1307 0
 3769 0014 0030     		adds	r0, r0, #0
 3770 0016 18BF     		it	ne
 3771 0018 0120     		movne	r0, #1
 3772 001a 10BD     		pop	{r4, pc}
 3773              	.L417:
 3774              		.align	2
 3775              	.L416:
 3776 001c 00000000 		.word	buffer
 3777 0020 00000000 		.word	devAddr
 3778              		.cfi_endproc
 3779              	.LFE97:
 3780              		.size	MPU9250_getSlave1Nack, .-MPU9250_getSlave1Nack
 3781              		.section	.text.MPU9250_getSlave0Nack,"ax",%progbits
 3782              		.align	2
 3783              		.global	MPU9250_getSlave0Nack
 3784              		.thumb
 3785              		.thumb_func
 3786              		.type	MPU9250_getSlave0Nack, %function
 3787              	MPU9250_getSlave0Nack:
 3788              	.LFB98:
1308:mpu_9250.c    **** /** Get Slave 0 NACK status.
1309:mpu_9250.c    ****  * This bit automatically sets to 1 when the I2C Master receives a NACK in a
1310:mpu_9250.c    ****  * transaction with Slave 0. This triggers an interrupt if the I2C_MST_INT_EN
1311:mpu_9250.c    ****  * bit in the INT_ENABLE register (Register 56) is asserted.
1312:mpu_9250.c    ****  * @return Slave 0 NACK interrupt status
1313:mpu_9250.c    ****  * @see MPU9250_RA_I2C_MST_STATUS
1314:mpu_9250.c    ****  */
1315:mpu_9250.c    **** bool MPU9250_getSlave0Nack() {
 3789              		.loc 1 1315 0
 3790              		.cfi_startproc
 3791              		@ args = 0, pretend = 0, frame = 0
 3792              		@ frame_needed = 0, uses_anonymous_args = 0
 3793 0000 10B5     		push	{r4, lr}
 3794              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 91


 3795              		.cfi_offset 4, -8
 3796              		.cfi_offset 14, -4
1316:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_I2C_MST_STATUS, MPU9250_MST_I2C_SLV0_NACK_BIT, buffer);
 3797              		.loc 1 1316 0
 3798 0002 064C     		ldr	r4, .L420
 3799 0004 064B     		ldr	r3, .L420+4
 3800 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 3801 0008 3621     		movs	r1, #54
 3802 000a 0022     		movs	r2, #0
 3803 000c 2346     		mov	r3, r4
 3804 000e FFF7FEFF 		bl	I2CReadBit
 3805              	.LVL225:
1317:mpu_9250.c    ****     return buffer[0];
 3806              		.loc 1 1317 0
 3807 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
1318:mpu_9250.c    **** }
 3808              		.loc 1 1318 0
 3809 0014 0030     		adds	r0, r0, #0
 3810 0016 18BF     		it	ne
 3811 0018 0120     		movne	r0, #1
 3812 001a 10BD     		pop	{r4, pc}
 3813              	.L421:
 3814              		.align	2
 3815              	.L420:
 3816 001c 00000000 		.word	buffer
 3817 0020 00000000 		.word	devAddr
 3818              		.cfi_endproc
 3819              	.LFE98:
 3820              		.size	MPU9250_getSlave0Nack, .-MPU9250_getSlave0Nack
 3821              		.section	.text.MPU9250_getInterruptMode,"ax",%progbits
 3822              		.align	2
 3823              		.global	MPU9250_getInterruptMode
 3824              		.thumb
 3825              		.thumb_func
 3826              		.type	MPU9250_getInterruptMode, %function
 3827              	MPU9250_getInterruptMode:
 3828              	.LFB99:
1319:mpu_9250.c    **** 
1320:mpu_9250.c    **** // INT_PIN_CFG register
1321:mpu_9250.c    **** 
1322:mpu_9250.c    **** /** Get interrupt logic level mode.
1323:mpu_9250.c    ****  * Will be set 0 for active-high, 1 for active-low.
1324:mpu_9250.c    ****  * @return Current interrupt mode (0=active-high, 1=active-low)
1325:mpu_9250.c    ****  * @see MPU9250_RA_INT_PIN_CFG
1326:mpu_9250.c    ****  * @see MPU9250_INTCFG_INT_LEVEL_BIT
1327:mpu_9250.c    ****  */
1328:mpu_9250.c    **** bool MPU9250_getInterruptMode() {
 3829              		.loc 1 1328 0
 3830              		.cfi_startproc
 3831              		@ args = 0, pretend = 0, frame = 0
 3832              		@ frame_needed = 0, uses_anonymous_args = 0
 3833 0000 10B5     		push	{r4, lr}
 3834              		.cfi_def_cfa_offset 8
 3835              		.cfi_offset 4, -8
 3836              		.cfi_offset 14, -4
1329:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_INT_PIN_CFG, MPU9250_INTCFG_INT_LEVEL_BIT, buffer);
 3837              		.loc 1 1329 0
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 92


 3838 0002 064C     		ldr	r4, .L424
 3839 0004 064B     		ldr	r3, .L424+4
 3840 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 3841 0008 3721     		movs	r1, #55
 3842 000a 0722     		movs	r2, #7
 3843 000c 2346     		mov	r3, r4
 3844 000e FFF7FEFF 		bl	I2CReadBit
 3845              	.LVL226:
1330:mpu_9250.c    ****     return buffer[0];
 3846              		.loc 1 1330 0
 3847 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
1331:mpu_9250.c    **** }
 3848              		.loc 1 1331 0
 3849 0014 0030     		adds	r0, r0, #0
 3850 0016 18BF     		it	ne
 3851 0018 0120     		movne	r0, #1
 3852 001a 10BD     		pop	{r4, pc}
 3853              	.L425:
 3854              		.align	2
 3855              	.L424:
 3856 001c 00000000 		.word	buffer
 3857 0020 00000000 		.word	devAddr
 3858              		.cfi_endproc
 3859              	.LFE99:
 3860              		.size	MPU9250_getInterruptMode, .-MPU9250_getInterruptMode
 3861              		.section	.text.MPU9250_setInterruptMode,"ax",%progbits
 3862              		.align	2
 3863              		.global	MPU9250_setInterruptMode
 3864              		.thumb
 3865              		.thumb_func
 3866              		.type	MPU9250_setInterruptMode, %function
 3867              	MPU9250_setInterruptMode:
 3868              	.LFB100:
1332:mpu_9250.c    **** /** Set interrupt logic level mode.
1333:mpu_9250.c    ****  * @param mode New interrupt mode (0=active-high, 1=active-low)
1334:mpu_9250.c    ****  * @see getInterruptMode()
1335:mpu_9250.c    ****  * @see MPU9250_RA_INT_PIN_CFG
1336:mpu_9250.c    ****  * @see MPU9250_INTCFG_INT_LEVEL_BIT
1337:mpu_9250.c    ****  */
1338:mpu_9250.c    **** void MPU9250_setInterruptMode(bool mode) {
 3869              		.loc 1 1338 0
 3870              		.cfi_startproc
 3871              		@ args = 0, pretend = 0, frame = 0
 3872              		@ frame_needed = 0, uses_anonymous_args = 0
 3873              	.LVL227:
 3874 0000 08B5     		push	{r3, lr}
 3875              		.cfi_def_cfa_offset 8
 3876              		.cfi_offset 3, -8
 3877              		.cfi_offset 14, -4
 3878 0002 0346     		mov	r3, r0
1339:mpu_9250.c    ****    I2CWriteBit(devAddr, MPU9250_RA_INT_PIN_CFG, MPU9250_INTCFG_INT_LEVEL_BIT, mode);
 3879              		.loc 1 1339 0
 3880 0004 034A     		ldr	r2, .L428
 3881 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 3882              	.LVL228:
 3883 0008 3721     		movs	r1, #55
 3884 000a 0722     		movs	r2, #7
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 93


 3885 000c FFF7FEFF 		bl	I2CWriteBit
 3886              	.LVL229:
 3887 0010 08BD     		pop	{r3, pc}
 3888              	.L429:
 3889 0012 00BF     		.align	2
 3890              	.L428:
 3891 0014 00000000 		.word	devAddr
 3892              		.cfi_endproc
 3893              	.LFE100:
 3894              		.size	MPU9250_setInterruptMode, .-MPU9250_setInterruptMode
 3895              		.section	.text.MPU9250_getInterruptDrive,"ax",%progbits
 3896              		.align	2
 3897              		.global	MPU9250_getInterruptDrive
 3898              		.thumb
 3899              		.thumb_func
 3900              		.type	MPU9250_getInterruptDrive, %function
 3901              	MPU9250_getInterruptDrive:
 3902              	.LFB101:
1340:mpu_9250.c    **** }
1341:mpu_9250.c    **** /** Get interrupt drive mode.
1342:mpu_9250.c    ****  * Will be set 0 for push-pull, 1 for open-drain.
1343:mpu_9250.c    ****  * @return Current interrupt drive mode (0=push-pull, 1=open-drain)
1344:mpu_9250.c    ****  * @see MPU9250_RA_INT_PIN_CFG
1345:mpu_9250.c    ****  * @see MPU9250_INTCFG_INT_OPEN_BIT
1346:mpu_9250.c    ****  */
1347:mpu_9250.c    **** bool MPU9250_getInterruptDrive() {
 3903              		.loc 1 1347 0
 3904              		.cfi_startproc
 3905              		@ args = 0, pretend = 0, frame = 0
 3906              		@ frame_needed = 0, uses_anonymous_args = 0
 3907 0000 10B5     		push	{r4, lr}
 3908              		.cfi_def_cfa_offset 8
 3909              		.cfi_offset 4, -8
 3910              		.cfi_offset 14, -4
1348:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_INT_PIN_CFG, MPU9250_INTCFG_INT_OPEN_BIT, buffer);
 3911              		.loc 1 1348 0
 3912 0002 064C     		ldr	r4, .L432
 3913 0004 064B     		ldr	r3, .L432+4
 3914 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 3915 0008 3721     		movs	r1, #55
 3916 000a 0622     		movs	r2, #6
 3917 000c 2346     		mov	r3, r4
 3918 000e FFF7FEFF 		bl	I2CReadBit
 3919              	.LVL230:
1349:mpu_9250.c    ****     return buffer[0];
 3920              		.loc 1 1349 0
 3921 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
1350:mpu_9250.c    **** }
 3922              		.loc 1 1350 0
 3923 0014 0030     		adds	r0, r0, #0
 3924 0016 18BF     		it	ne
 3925 0018 0120     		movne	r0, #1
 3926 001a 10BD     		pop	{r4, pc}
 3927              	.L433:
 3928              		.align	2
 3929              	.L432:
 3930 001c 00000000 		.word	buffer
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 94


 3931 0020 00000000 		.word	devAddr
 3932              		.cfi_endproc
 3933              	.LFE101:
 3934              		.size	MPU9250_getInterruptDrive, .-MPU9250_getInterruptDrive
 3935              		.section	.text.MPU9250_setInterruptDrive,"ax",%progbits
 3936              		.align	2
 3937              		.global	MPU9250_setInterruptDrive
 3938              		.thumb
 3939              		.thumb_func
 3940              		.type	MPU9250_setInterruptDrive, %function
 3941              	MPU9250_setInterruptDrive:
 3942              	.LFB102:
1351:mpu_9250.c    **** /** Set interrupt drive mode.
1352:mpu_9250.c    ****  * @param drive New interrupt drive mode (0=push-pull, 1=open-drain)
1353:mpu_9250.c    ****  * @see getInterruptDrive()
1354:mpu_9250.c    ****  * @see MPU9250_RA_INT_PIN_CFG
1355:mpu_9250.c    ****  * @see MPU9250_INTCFG_INT_OPEN_BIT
1356:mpu_9250.c    ****  */
1357:mpu_9250.c    **** void MPU9250_setInterruptDrive(bool drive) {
 3943              		.loc 1 1357 0
 3944              		.cfi_startproc
 3945              		@ args = 0, pretend = 0, frame = 0
 3946              		@ frame_needed = 0, uses_anonymous_args = 0
 3947              	.LVL231:
 3948 0000 08B5     		push	{r3, lr}
 3949              		.cfi_def_cfa_offset 8
 3950              		.cfi_offset 3, -8
 3951              		.cfi_offset 14, -4
 3952 0002 0346     		mov	r3, r0
1358:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_INT_PIN_CFG, MPU9250_INTCFG_INT_OPEN_BIT, drive);
 3953              		.loc 1 1358 0
 3954 0004 034A     		ldr	r2, .L436
 3955 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 3956              	.LVL232:
 3957 0008 3721     		movs	r1, #55
 3958 000a 0622     		movs	r2, #6
 3959 000c FFF7FEFF 		bl	I2CWriteBit
 3960              	.LVL233:
 3961 0010 08BD     		pop	{r3, pc}
 3962              	.L437:
 3963 0012 00BF     		.align	2
 3964              	.L436:
 3965 0014 00000000 		.word	devAddr
 3966              		.cfi_endproc
 3967              	.LFE102:
 3968              		.size	MPU9250_setInterruptDrive, .-MPU9250_setInterruptDrive
 3969              		.section	.text.MPU9250_getInterruptLatch,"ax",%progbits
 3970              		.align	2
 3971              		.global	MPU9250_getInterruptLatch
 3972              		.thumb
 3973              		.thumb_func
 3974              		.type	MPU9250_getInterruptLatch, %function
 3975              	MPU9250_getInterruptLatch:
 3976              	.LFB103:
1359:mpu_9250.c    **** }
1360:mpu_9250.c    **** /** Get interrupt latch mode.
1361:mpu_9250.c    ****  * Will be set 0 for 50us-pulse, 1 for latch-until-int-cleared.
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 95


1362:mpu_9250.c    ****  * @return Current latch mode (0=50us-pulse, 1=latch-until-int-cleared)
1363:mpu_9250.c    ****  * @see MPU9250_RA_INT_PIN_CFG
1364:mpu_9250.c    ****  * @see MPU9250_INTCFG_LATCH_INT_EN_BIT
1365:mpu_9250.c    ****  */
1366:mpu_9250.c    **** bool MPU9250_getInterruptLatch() {
 3977              		.loc 1 1366 0
 3978              		.cfi_startproc
 3979              		@ args = 0, pretend = 0, frame = 0
 3980              		@ frame_needed = 0, uses_anonymous_args = 0
 3981 0000 10B5     		push	{r4, lr}
 3982              		.cfi_def_cfa_offset 8
 3983              		.cfi_offset 4, -8
 3984              		.cfi_offset 14, -4
1367:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_INT_PIN_CFG, MPU9250_INTCFG_LATCH_INT_EN_BIT, buffer);
 3985              		.loc 1 1367 0
 3986 0002 064C     		ldr	r4, .L440
 3987 0004 064B     		ldr	r3, .L440+4
 3988 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 3989 0008 3721     		movs	r1, #55
 3990 000a 0522     		movs	r2, #5
 3991 000c 2346     		mov	r3, r4
 3992 000e FFF7FEFF 		bl	I2CReadBit
 3993              	.LVL234:
1368:mpu_9250.c    ****     return buffer[0];
 3994              		.loc 1 1368 0
 3995 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
1369:mpu_9250.c    **** }
 3996              		.loc 1 1369 0
 3997 0014 0030     		adds	r0, r0, #0
 3998 0016 18BF     		it	ne
 3999 0018 0120     		movne	r0, #1
 4000 001a 10BD     		pop	{r4, pc}
 4001              	.L441:
 4002              		.align	2
 4003              	.L440:
 4004 001c 00000000 		.word	buffer
 4005 0020 00000000 		.word	devAddr
 4006              		.cfi_endproc
 4007              	.LFE103:
 4008              		.size	MPU9250_getInterruptLatch, .-MPU9250_getInterruptLatch
 4009              		.section	.text.MPU9250_setInterruptLatch,"ax",%progbits
 4010              		.align	2
 4011              		.global	MPU9250_setInterruptLatch
 4012              		.thumb
 4013              		.thumb_func
 4014              		.type	MPU9250_setInterruptLatch, %function
 4015              	MPU9250_setInterruptLatch:
 4016              	.LFB104:
1370:mpu_9250.c    **** /** Set interrupt latch mode.
1371:mpu_9250.c    ****  * @param latch New latch mode (0=50us-pulse, 1=latch-until-int-cleared)
1372:mpu_9250.c    ****  * @see getInterruptLatch()
1373:mpu_9250.c    ****  * @see MPU9250_RA_INT_PIN_CFG
1374:mpu_9250.c    ****  * @see MPU9250_INTCFG_LATCH_INT_EN_BIT
1375:mpu_9250.c    ****  */
1376:mpu_9250.c    **** void MPU9250_setInterruptLatch(bool latch) {
 4017              		.loc 1 1376 0
 4018              		.cfi_startproc
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 96


 4019              		@ args = 0, pretend = 0, frame = 0
 4020              		@ frame_needed = 0, uses_anonymous_args = 0
 4021              	.LVL235:
 4022 0000 08B5     		push	{r3, lr}
 4023              		.cfi_def_cfa_offset 8
 4024              		.cfi_offset 3, -8
 4025              		.cfi_offset 14, -4
 4026 0002 0346     		mov	r3, r0
1377:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_INT_PIN_CFG, MPU9250_INTCFG_LATCH_INT_EN_BIT, latch);
 4027              		.loc 1 1377 0
 4028 0004 034A     		ldr	r2, .L444
 4029 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 4030              	.LVL236:
 4031 0008 3721     		movs	r1, #55
 4032 000a 0522     		movs	r2, #5
 4033 000c FFF7FEFF 		bl	I2CWriteBit
 4034              	.LVL237:
 4035 0010 08BD     		pop	{r3, pc}
 4036              	.L445:
 4037 0012 00BF     		.align	2
 4038              	.L444:
 4039 0014 00000000 		.word	devAddr
 4040              		.cfi_endproc
 4041              	.LFE104:
 4042              		.size	MPU9250_setInterruptLatch, .-MPU9250_setInterruptLatch
 4043              		.section	.text.MPU9250_getInterruptLatchClear,"ax",%progbits
 4044              		.align	2
 4045              		.global	MPU9250_getInterruptLatchClear
 4046              		.thumb
 4047              		.thumb_func
 4048              		.type	MPU9250_getInterruptLatchClear, %function
 4049              	MPU9250_getInterruptLatchClear:
 4050              	.LFB105:
1378:mpu_9250.c    **** }
1379:mpu_9250.c    **** /** Get interrupt latch clear mode.
1380:mpu_9250.c    ****  * Will be set 0 for status-read-only, 1 for any-register-read.
1381:mpu_9250.c    ****  * @return Current latch clear mode (0=status-read-only, 1=any-register-read)
1382:mpu_9250.c    ****  * @see MPU9250_RA_INT_PIN_CFG
1383:mpu_9250.c    ****  * @see MPU9250_INTCFG_INT_RD_CLEAR_BIT
1384:mpu_9250.c    ****  */
1385:mpu_9250.c    **** bool MPU9250_getInterruptLatchClear() {
 4051              		.loc 1 1385 0
 4052              		.cfi_startproc
 4053              		@ args = 0, pretend = 0, frame = 0
 4054              		@ frame_needed = 0, uses_anonymous_args = 0
 4055 0000 10B5     		push	{r4, lr}
 4056              		.cfi_def_cfa_offset 8
 4057              		.cfi_offset 4, -8
 4058              		.cfi_offset 14, -4
1386:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_INT_PIN_CFG, MPU9250_INTCFG_INT_RD_CLEAR_BIT, buffer);
 4059              		.loc 1 1386 0
 4060 0002 064C     		ldr	r4, .L448
 4061 0004 064B     		ldr	r3, .L448+4
 4062 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 4063 0008 3721     		movs	r1, #55
 4064 000a 0422     		movs	r2, #4
 4065 000c 2346     		mov	r3, r4
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 97


 4066 000e FFF7FEFF 		bl	I2CReadBit
 4067              	.LVL238:
1387:mpu_9250.c    ****     return buffer[0];
 4068              		.loc 1 1387 0
 4069 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
1388:mpu_9250.c    **** }
 4070              		.loc 1 1388 0
 4071 0014 0030     		adds	r0, r0, #0
 4072 0016 18BF     		it	ne
 4073 0018 0120     		movne	r0, #1
 4074 001a 10BD     		pop	{r4, pc}
 4075              	.L449:
 4076              		.align	2
 4077              	.L448:
 4078 001c 00000000 		.word	buffer
 4079 0020 00000000 		.word	devAddr
 4080              		.cfi_endproc
 4081              	.LFE105:
 4082              		.size	MPU9250_getInterruptLatchClear, .-MPU9250_getInterruptLatchClear
 4083              		.section	.text.MPU9250_setInterruptLatchClear,"ax",%progbits
 4084              		.align	2
 4085              		.global	MPU9250_setInterruptLatchClear
 4086              		.thumb
 4087              		.thumb_func
 4088              		.type	MPU9250_setInterruptLatchClear, %function
 4089              	MPU9250_setInterruptLatchClear:
 4090              	.LFB106:
1389:mpu_9250.c    **** /** Set interrupt latch clear mode.
1390:mpu_9250.c    ****  * @param clear New latch clear mode (0=status-read-only, 1=any-register-read)
1391:mpu_9250.c    ****  * @see getInterruptLatchClear()
1392:mpu_9250.c    ****  * @see MPU9250_RA_INT_PIN_CFG
1393:mpu_9250.c    ****  * @see MPU9250_INTCFG_INT_RD_CLEAR_BIT
1394:mpu_9250.c    ****  */
1395:mpu_9250.c    **** void MPU9250_setInterruptLatchClear(bool clear) {
 4091              		.loc 1 1395 0
 4092              		.cfi_startproc
 4093              		@ args = 0, pretend = 0, frame = 0
 4094              		@ frame_needed = 0, uses_anonymous_args = 0
 4095              	.LVL239:
 4096 0000 08B5     		push	{r3, lr}
 4097              		.cfi_def_cfa_offset 8
 4098              		.cfi_offset 3, -8
 4099              		.cfi_offset 14, -4
 4100 0002 0346     		mov	r3, r0
1396:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_INT_PIN_CFG, MPU9250_INTCFG_INT_RD_CLEAR_BIT, clear);
 4101              		.loc 1 1396 0
 4102 0004 034A     		ldr	r2, .L452
 4103 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 4104              	.LVL240:
 4105 0008 3721     		movs	r1, #55
 4106 000a 0422     		movs	r2, #4
 4107 000c FFF7FEFF 		bl	I2CWriteBit
 4108              	.LVL241:
 4109 0010 08BD     		pop	{r3, pc}
 4110              	.L453:
 4111 0012 00BF     		.align	2
 4112              	.L452:
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 98


 4113 0014 00000000 		.word	devAddr
 4114              		.cfi_endproc
 4115              	.LFE106:
 4116              		.size	MPU9250_setInterruptLatchClear, .-MPU9250_setInterruptLatchClear
 4117              		.section	.text.MPU9250_getFSyncInterruptLevel,"ax",%progbits
 4118              		.align	2
 4119              		.global	MPU9250_getFSyncInterruptLevel
 4120              		.thumb
 4121              		.thumb_func
 4122              		.type	MPU9250_getFSyncInterruptLevel, %function
 4123              	MPU9250_getFSyncInterruptLevel:
 4124              	.LFB107:
1397:mpu_9250.c    **** }
1398:mpu_9250.c    **** /** Get FSYNC interrupt logic level mode.
1399:mpu_9250.c    ****  * @return Current FSYNC interrupt mode (0=active-high, 1=active-low)
1400:mpu_9250.c    ****  * @see getFSyncInterruptMode()
1401:mpu_9250.c    ****  * @see MPU9250_RA_INT_PIN_CFG
1402:mpu_9250.c    ****  * @see MPU9250_INTCFG_FSYNC_INT_LEVEL_BIT
1403:mpu_9250.c    ****  */
1404:mpu_9250.c    **** bool MPU9250_getFSyncInterruptLevel() {
 4125              		.loc 1 1404 0
 4126              		.cfi_startproc
 4127              		@ args = 0, pretend = 0, frame = 0
 4128              		@ frame_needed = 0, uses_anonymous_args = 0
 4129 0000 10B5     		push	{r4, lr}
 4130              		.cfi_def_cfa_offset 8
 4131              		.cfi_offset 4, -8
 4132              		.cfi_offset 14, -4
1405:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_INT_PIN_CFG, MPU9250_INTCFG_FSYNC_INT_LEVEL_BIT, buffer);
 4133              		.loc 1 1405 0
 4134 0002 064C     		ldr	r4, .L456
 4135 0004 064B     		ldr	r3, .L456+4
 4136 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 4137 0008 3721     		movs	r1, #55
 4138 000a 0322     		movs	r2, #3
 4139 000c 2346     		mov	r3, r4
 4140 000e FFF7FEFF 		bl	I2CReadBit
 4141              	.LVL242:
1406:mpu_9250.c    ****     return buffer[0];
 4142              		.loc 1 1406 0
 4143 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
1407:mpu_9250.c    **** }
 4144              		.loc 1 1407 0
 4145 0014 0030     		adds	r0, r0, #0
 4146 0016 18BF     		it	ne
 4147 0018 0120     		movne	r0, #1
 4148 001a 10BD     		pop	{r4, pc}
 4149              	.L457:
 4150              		.align	2
 4151              	.L456:
 4152 001c 00000000 		.word	buffer
 4153 0020 00000000 		.word	devAddr
 4154              		.cfi_endproc
 4155              	.LFE107:
 4156              		.size	MPU9250_getFSyncInterruptLevel, .-MPU9250_getFSyncInterruptLevel
 4157              		.section	.text.MPU9250_setFSyncInterruptLevel,"ax",%progbits
 4158              		.align	2
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 99


 4159              		.global	MPU9250_setFSyncInterruptLevel
 4160              		.thumb
 4161              		.thumb_func
 4162              		.type	MPU9250_setFSyncInterruptLevel, %function
 4163              	MPU9250_setFSyncInterruptLevel:
 4164              	.LFB108:
1408:mpu_9250.c    **** /** Set FSYNC interrupt logic level mode.
1409:mpu_9250.c    ****  * @param mode New FSYNC interrupt mode (0=active-high, 1=active-low)
1410:mpu_9250.c    ****  * @see getFSyncInterruptMode()
1411:mpu_9250.c    ****  * @see MPU9250_RA_INT_PIN_CFG
1412:mpu_9250.c    ****  * @see MPU9250_INTCFG_FSYNC_INT_LEVEL_BIT
1413:mpu_9250.c    ****  */
1414:mpu_9250.c    **** void MPU9250_setFSyncInterruptLevel(bool level) {
 4165              		.loc 1 1414 0
 4166              		.cfi_startproc
 4167              		@ args = 0, pretend = 0, frame = 0
 4168              		@ frame_needed = 0, uses_anonymous_args = 0
 4169              	.LVL243:
 4170 0000 08B5     		push	{r3, lr}
 4171              		.cfi_def_cfa_offset 8
 4172              		.cfi_offset 3, -8
 4173              		.cfi_offset 14, -4
 4174 0002 0346     		mov	r3, r0
1415:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_INT_PIN_CFG, MPU9250_INTCFG_FSYNC_INT_LEVEL_BIT, level);
 4175              		.loc 1 1415 0
 4176 0004 034A     		ldr	r2, .L460
 4177 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 4178              	.LVL244:
 4179 0008 3721     		movs	r1, #55
 4180 000a 0322     		movs	r2, #3
 4181 000c FFF7FEFF 		bl	I2CWriteBit
 4182              	.LVL245:
 4183 0010 08BD     		pop	{r3, pc}
 4184              	.L461:
 4185 0012 00BF     		.align	2
 4186              	.L460:
 4187 0014 00000000 		.word	devAddr
 4188              		.cfi_endproc
 4189              	.LFE108:
 4190              		.size	MPU9250_setFSyncInterruptLevel, .-MPU9250_setFSyncInterruptLevel
 4191              		.section	.text.MPU9250_getFSyncInterruptEnabled,"ax",%progbits
 4192              		.align	2
 4193              		.global	MPU9250_getFSyncInterruptEnabled
 4194              		.thumb
 4195              		.thumb_func
 4196              		.type	MPU9250_getFSyncInterruptEnabled, %function
 4197              	MPU9250_getFSyncInterruptEnabled:
 4198              	.LFB109:
1416:mpu_9250.c    **** }
1417:mpu_9250.c    **** /** Get FSYNC pin interrupt enabled setting.
1418:mpu_9250.c    ****  * Will be set 0 for disabled, 1 for enabled.
1419:mpu_9250.c    ****  * @return Current interrupt enabled setting
1420:mpu_9250.c    ****  * @see MPU9250_RA_INT_PIN_CFG
1421:mpu_9250.c    ****  * @see MPU9250_INTCFG_FSYNC_INT_EN_BIT
1422:mpu_9250.c    ****  */
1423:mpu_9250.c    **** bool MPU9250_getFSyncInterruptEnabled() {
 4199              		.loc 1 1423 0
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 100


 4200              		.cfi_startproc
 4201              		@ args = 0, pretend = 0, frame = 0
 4202              		@ frame_needed = 0, uses_anonymous_args = 0
 4203 0000 10B5     		push	{r4, lr}
 4204              		.cfi_def_cfa_offset 8
 4205              		.cfi_offset 4, -8
 4206              		.cfi_offset 14, -4
1424:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_INT_PIN_CFG, MPU9250_INTCFG_FSYNC_INT_EN_BIT, buffer);
 4207              		.loc 1 1424 0
 4208 0002 064C     		ldr	r4, .L464
 4209 0004 064B     		ldr	r3, .L464+4
 4210 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 4211 0008 3721     		movs	r1, #55
 4212 000a 0222     		movs	r2, #2
 4213 000c 2346     		mov	r3, r4
 4214 000e FFF7FEFF 		bl	I2CReadBit
 4215              	.LVL246:
1425:mpu_9250.c    ****     return buffer[0];
 4216              		.loc 1 1425 0
 4217 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
1426:mpu_9250.c    **** }
 4218              		.loc 1 1426 0
 4219 0014 0030     		adds	r0, r0, #0
 4220 0016 18BF     		it	ne
 4221 0018 0120     		movne	r0, #1
 4222 001a 10BD     		pop	{r4, pc}
 4223              	.L465:
 4224              		.align	2
 4225              	.L464:
 4226 001c 00000000 		.word	buffer
 4227 0020 00000000 		.word	devAddr
 4228              		.cfi_endproc
 4229              	.LFE109:
 4230              		.size	MPU9250_getFSyncInterruptEnabled, .-MPU9250_getFSyncInterruptEnabled
 4231              		.section	.text.MPU9250_setFSyncInterruptEnabled,"ax",%progbits
 4232              		.align	2
 4233              		.global	MPU9250_setFSyncInterruptEnabled
 4234              		.thumb
 4235              		.thumb_func
 4236              		.type	MPU9250_setFSyncInterruptEnabled, %function
 4237              	MPU9250_setFSyncInterruptEnabled:
 4238              	.LFB110:
1427:mpu_9250.c    **** /** Set FSYNC pin interrupt enabled setting.
1428:mpu_9250.c    ****  * @param enabled New FSYNC pin interrupt enabled setting
1429:mpu_9250.c    ****  * @see getFSyncInterruptEnabled()
1430:mpu_9250.c    ****  * @see MPU9250_RA_INT_PIN_CFG
1431:mpu_9250.c    ****  * @see MPU9250_INTCFG_FSYNC_INT_EN_BIT
1432:mpu_9250.c    ****  */
1433:mpu_9250.c    **** void MPU9250_setFSyncInterruptEnabled(bool enabled) {
 4239              		.loc 1 1433 0
 4240              		.cfi_startproc
 4241              		@ args = 0, pretend = 0, frame = 0
 4242              		@ frame_needed = 0, uses_anonymous_args = 0
 4243              	.LVL247:
 4244 0000 08B5     		push	{r3, lr}
 4245              		.cfi_def_cfa_offset 8
 4246              		.cfi_offset 3, -8
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 101


 4247              		.cfi_offset 14, -4
 4248 0002 0346     		mov	r3, r0
1434:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_INT_PIN_CFG, MPU9250_INTCFG_FSYNC_INT_EN_BIT, enabled);
 4249              		.loc 1 1434 0
 4250 0004 034A     		ldr	r2, .L468
 4251 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 4252              	.LVL248:
 4253 0008 3721     		movs	r1, #55
 4254 000a 0222     		movs	r2, #2
 4255 000c FFF7FEFF 		bl	I2CWriteBit
 4256              	.LVL249:
 4257 0010 08BD     		pop	{r3, pc}
 4258              	.L469:
 4259 0012 00BF     		.align	2
 4260              	.L468:
 4261 0014 00000000 		.word	devAddr
 4262              		.cfi_endproc
 4263              	.LFE110:
 4264              		.size	MPU9250_setFSyncInterruptEnabled, .-MPU9250_setFSyncInterruptEnabled
 4265              		.section	.text.MPU9250_getI2CBypassEnabled,"ax",%progbits
 4266              		.align	2
 4267              		.global	MPU9250_getI2CBypassEnabled
 4268              		.thumb
 4269              		.thumb_func
 4270              		.type	MPU9250_getI2CBypassEnabled, %function
 4271              	MPU9250_getI2CBypassEnabled:
 4272              	.LFB111:
1435:mpu_9250.c    **** }
1436:mpu_9250.c    **** /** Get I2C bypass enabled status.
1437:mpu_9250.c    ****  * When this bit is equal to 1 and I2C_MST_EN (Register 106 bit[5]) is equal to
1438:mpu_9250.c    ****  * 0, the host application processor will be able to directly access the
1439:mpu_9250.c    ****  * auxiliary I2C bus of the MPU-60X0. When this bit is equal to 0, the host
1440:mpu_9250.c    ****  * application processor will not be able to directly access the auxiliary I2C
1441:mpu_9250.c    ****  * bus of the MPU-60X0 regardless of the state of I2C_MST_EN (Register 106
1442:mpu_9250.c    ****  * bit[5]).
1443:mpu_9250.c    ****  * @return Current I2C bypass enabled status
1444:mpu_9250.c    ****  * @see MPU9250_RA_INT_PIN_CFG
1445:mpu_9250.c    ****  * @see MPU9250_INTCFG_I2C_BYPASS_EN_BIT
1446:mpu_9250.c    ****  */
1447:mpu_9250.c    **** bool MPU9250_getI2CBypassEnabled() {
 4273              		.loc 1 1447 0
 4274              		.cfi_startproc
 4275              		@ args = 0, pretend = 0, frame = 0
 4276              		@ frame_needed = 0, uses_anonymous_args = 0
 4277 0000 10B5     		push	{r4, lr}
 4278              		.cfi_def_cfa_offset 8
 4279              		.cfi_offset 4, -8
 4280              		.cfi_offset 14, -4
1448:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_INT_PIN_CFG, MPU9250_INTCFG_I2C_BYPASS_EN_BIT, buffer);
 4281              		.loc 1 1448 0
 4282 0002 064C     		ldr	r4, .L472
 4283 0004 064B     		ldr	r3, .L472+4
 4284 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 4285 0008 3721     		movs	r1, #55
 4286 000a 0122     		movs	r2, #1
 4287 000c 2346     		mov	r3, r4
 4288 000e FFF7FEFF 		bl	I2CReadBit
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 102


 4289              	.LVL250:
1449:mpu_9250.c    ****     return buffer[0];
 4290              		.loc 1 1449 0
 4291 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
1450:mpu_9250.c    **** }
 4292              		.loc 1 1450 0
 4293 0014 0030     		adds	r0, r0, #0
 4294 0016 18BF     		it	ne
 4295 0018 0120     		movne	r0, #1
 4296 001a 10BD     		pop	{r4, pc}
 4297              	.L473:
 4298              		.align	2
 4299              	.L472:
 4300 001c 00000000 		.word	buffer
 4301 0020 00000000 		.word	devAddr
 4302              		.cfi_endproc
 4303              	.LFE111:
 4304              		.size	MPU9250_getI2CBypassEnabled, .-MPU9250_getI2CBypassEnabled
 4305              		.section	.text.MPU9250_setI2CBypassEnabled,"ax",%progbits
 4306              		.align	2
 4307              		.global	MPU9250_setI2CBypassEnabled
 4308              		.thumb
 4309              		.thumb_func
 4310              		.type	MPU9250_setI2CBypassEnabled, %function
 4311              	MPU9250_setI2CBypassEnabled:
 4312              	.LFB112:
1451:mpu_9250.c    **** /** Set I2C bypass enabled status.
1452:mpu_9250.c    ****  * When this bit is equal to 1 and I2C_MST_EN (Register 106 bit[5]) is equal to
1453:mpu_9250.c    ****  * 0, the host application processor will be able to directly access the
1454:mpu_9250.c    ****  * auxiliary I2C bus of the MPU-60X0. When this bit is equal to 0, the host
1455:mpu_9250.c    ****  * application processor will not be able to directly access the auxiliary I2C
1456:mpu_9250.c    ****  * bus of the MPU-60X0 regardless of the state of I2C_MST_EN (Register 106
1457:mpu_9250.c    ****  * bit[5]).
1458:mpu_9250.c    ****  * @param enabled New I2C bypass enabled status
1459:mpu_9250.c    ****  * @see MPU9250_RA_INT_PIN_CFG
1460:mpu_9250.c    ****  * @see MPU9250_INTCFG_I2C_BYPASS_EN_BIT
1461:mpu_9250.c    ****  */
1462:mpu_9250.c    **** void MPU9250_setI2CBypassEnabled(bool enabled) {
 4313              		.loc 1 1462 0
 4314              		.cfi_startproc
 4315              		@ args = 0, pretend = 0, frame = 0
 4316              		@ frame_needed = 0, uses_anonymous_args = 0
 4317              	.LVL251:
 4318 0000 08B5     		push	{r3, lr}
 4319              		.cfi_def_cfa_offset 8
 4320              		.cfi_offset 3, -8
 4321              		.cfi_offset 14, -4
 4322 0002 0346     		mov	r3, r0
1463:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_INT_PIN_CFG, MPU9250_INTCFG_I2C_BYPASS_EN_BIT, enabled);
 4323              		.loc 1 1463 0
 4324 0004 034A     		ldr	r2, .L476
 4325 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 4326              	.LVL252:
 4327 0008 3721     		movs	r1, #55
 4328 000a 0122     		movs	r2, #1
 4329 000c FFF7FEFF 		bl	I2CWriteBit
 4330              	.LVL253:
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 103


 4331 0010 08BD     		pop	{r3, pc}
 4332              	.L477:
 4333 0012 00BF     		.align	2
 4334              	.L476:
 4335 0014 00000000 		.word	devAddr
 4336              		.cfi_endproc
 4337              	.LFE112:
 4338              		.size	MPU9250_setI2CBypassEnabled, .-MPU9250_setI2CBypassEnabled
 4339              		.section	.text.MPU9250_getClockOutputEnabled,"ax",%progbits
 4340              		.align	2
 4341              		.global	MPU9250_getClockOutputEnabled
 4342              		.thumb
 4343              		.thumb_func
 4344              		.type	MPU9250_getClockOutputEnabled, %function
 4345              	MPU9250_getClockOutputEnabled:
 4346              	.LFB113:
1464:mpu_9250.c    **** }
1465:mpu_9250.c    **** /** Get reference clock output enabled status.
1466:mpu_9250.c    ****  * When this bit is equal to 1, a reference clock output is provided at the
1467:mpu_9250.c    ****  * CLKOUT pin. When this bit is equal to 0, the clock output is disabled. For
1468:mpu_9250.c    ****  * further information regarding CLKOUT, please refer to the MPU-60X0 Product
1469:mpu_9250.c    ****  * Specification document.
1470:mpu_9250.c    ****  * @return Current reference clock output enabled status
1471:mpu_9250.c    ****  * @see MPU9250_RA_INT_PIN_CFG
1472:mpu_9250.c    ****  * @see MPU9250_INTCFG_CLKOUT_EN_BIT
1473:mpu_9250.c    ****  */
1474:mpu_9250.c    **** bool MPU9250_getClockOutputEnabled() {
 4347              		.loc 1 1474 0
 4348              		.cfi_startproc
 4349              		@ args = 0, pretend = 0, frame = 0
 4350              		@ frame_needed = 0, uses_anonymous_args = 0
 4351 0000 10B5     		push	{r4, lr}
 4352              		.cfi_def_cfa_offset 8
 4353              		.cfi_offset 4, -8
 4354              		.cfi_offset 14, -4
1475:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_INT_PIN_CFG, MPU9250_INTCFG_CLKOUT_EN_BIT, buffer);
 4355              		.loc 1 1475 0
 4356 0002 064C     		ldr	r4, .L480
 4357 0004 064B     		ldr	r3, .L480+4
 4358 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 4359 0008 3721     		movs	r1, #55
 4360 000a 0022     		movs	r2, #0
 4361 000c 2346     		mov	r3, r4
 4362 000e FFF7FEFF 		bl	I2CReadBit
 4363              	.LVL254:
1476:mpu_9250.c    ****     return buffer[0];
 4364              		.loc 1 1476 0
 4365 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
1477:mpu_9250.c    **** }
 4366              		.loc 1 1477 0
 4367 0014 0030     		adds	r0, r0, #0
 4368 0016 18BF     		it	ne
 4369 0018 0120     		movne	r0, #1
 4370 001a 10BD     		pop	{r4, pc}
 4371              	.L481:
 4372              		.align	2
 4373              	.L480:
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 104


 4374 001c 00000000 		.word	buffer
 4375 0020 00000000 		.word	devAddr
 4376              		.cfi_endproc
 4377              	.LFE113:
 4378              		.size	MPU9250_getClockOutputEnabled, .-MPU9250_getClockOutputEnabled
 4379              		.section	.text.MPU9250_setClockOutputEnabled,"ax",%progbits
 4380              		.align	2
 4381              		.global	MPU9250_setClockOutputEnabled
 4382              		.thumb
 4383              		.thumb_func
 4384              		.type	MPU9250_setClockOutputEnabled, %function
 4385              	MPU9250_setClockOutputEnabled:
 4386              	.LFB114:
1478:mpu_9250.c    **** /** Set reference clock output enabled status.
1479:mpu_9250.c    ****  * When this bit is equal to 1, a reference clock output is provided at the
1480:mpu_9250.c    ****  * CLKOUT pin. When this bit is equal to 0, the clock output is disabled. For
1481:mpu_9250.c    ****  * further information regarding CLKOUT, please refer to the MPU-60X0 Product
1482:mpu_9250.c    ****  * Specification document.
1483:mpu_9250.c    ****  * @param enabled New reference clock output enabled status
1484:mpu_9250.c    ****  * @see MPU9250_RA_INT_PIN_CFG
1485:mpu_9250.c    ****  * @see MPU9250_INTCFG_CLKOUT_EN_BIT
1486:mpu_9250.c    ****  */
1487:mpu_9250.c    **** void MPU9250_setClockOutputEnabled(bool enabled) {
 4387              		.loc 1 1487 0
 4388              		.cfi_startproc
 4389              		@ args = 0, pretend = 0, frame = 0
 4390              		@ frame_needed = 0, uses_anonymous_args = 0
 4391              	.LVL255:
 4392 0000 08B5     		push	{r3, lr}
 4393              		.cfi_def_cfa_offset 8
 4394              		.cfi_offset 3, -8
 4395              		.cfi_offset 14, -4
 4396 0002 0346     		mov	r3, r0
1488:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_INT_PIN_CFG, MPU9250_INTCFG_CLKOUT_EN_BIT, enabled);
 4397              		.loc 1 1488 0
 4398 0004 034A     		ldr	r2, .L484
 4399 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 4400              	.LVL256:
 4401 0008 3721     		movs	r1, #55
 4402 000a 0022     		movs	r2, #0
 4403 000c FFF7FEFF 		bl	I2CWriteBit
 4404              	.LVL257:
 4405 0010 08BD     		pop	{r3, pc}
 4406              	.L485:
 4407 0012 00BF     		.align	2
 4408              	.L484:
 4409 0014 00000000 		.word	devAddr
 4410              		.cfi_endproc
 4411              	.LFE114:
 4412              		.size	MPU9250_setClockOutputEnabled, .-MPU9250_setClockOutputEnabled
 4413              		.section	.text.MPU9250_getIntEnabled,"ax",%progbits
 4414              		.align	2
 4415              		.global	MPU9250_getIntEnabled
 4416              		.thumb
 4417              		.thumb_func
 4418              		.type	MPU9250_getIntEnabled, %function
 4419              	MPU9250_getIntEnabled:
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 105


 4420              	.LFB115:
1489:mpu_9250.c    **** }
1490:mpu_9250.c    **** 
1491:mpu_9250.c    **** // INT_ENABLE register
1492:mpu_9250.c    **** 
1493:mpu_9250.c    **** /** Get full interrupt enabled status.
1494:mpu_9250.c    ****  * Full register byte for all interrupts, for quick reading. Each bit will be
1495:mpu_9250.c    ****  * set 0 for disabled, 1 for enabled.
1496:mpu_9250.c    ****  * @return Current interrupt enabled status
1497:mpu_9250.c    ****  * @see MPU9250_RA_INT_ENABLE
1498:mpu_9250.c    ****  * @see MPU9250_INTERRUPT_FF_BIT
1499:mpu_9250.c    ****  **/
1500:mpu_9250.c    **** uint8_t MPU9250_getIntEnabled() {
 4421              		.loc 1 1500 0
 4422              		.cfi_startproc
 4423              		@ args = 0, pretend = 0, frame = 0
 4424              		@ frame_needed = 0, uses_anonymous_args = 0
 4425 0000 10B5     		push	{r4, lr}
 4426              		.cfi_def_cfa_offset 8
 4427              		.cfi_offset 4, -8
 4428              		.cfi_offset 14, -4
1501:mpu_9250.c    ****     I2CReadByte(devAddr, MPU9250_RA_INT_ENABLE, buffer);
 4429              		.loc 1 1501 0
 4430 0002 044C     		ldr	r4, .L488
 4431 0004 044B     		ldr	r3, .L488+4
 4432 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 4433 0008 3821     		movs	r1, #56
 4434 000a 2246     		mov	r2, r4
 4435 000c FFF7FEFF 		bl	I2CReadByte
 4436              	.LVL258:
1502:mpu_9250.c    ****     return buffer[0];
1503:mpu_9250.c    **** }
 4437              		.loc 1 1503 0
 4438 0010 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 4439 0012 10BD     		pop	{r4, pc}
 4440              	.L489:
 4441              		.align	2
 4442              	.L488:
 4443 0014 00000000 		.word	buffer
 4444 0018 00000000 		.word	devAddr
 4445              		.cfi_endproc
 4446              	.LFE115:
 4447              		.size	MPU9250_getIntEnabled, .-MPU9250_getIntEnabled
 4448              		.section	.text.MPU9250_setIntEnabled,"ax",%progbits
 4449              		.align	2
 4450              		.global	MPU9250_setIntEnabled
 4451              		.thumb
 4452              		.thumb_func
 4453              		.type	MPU9250_setIntEnabled, %function
 4454              	MPU9250_setIntEnabled:
 4455              	.LFB116:
1504:mpu_9250.c    **** /** Set full interrupt enabled status.
1505:mpu_9250.c    ****  * Full register byte for all interrupts, for quick reading. Each bit should be
1506:mpu_9250.c    ****  * set 0 for disabled, 1 for enabled.
1507:mpu_9250.c    ****  * @param enabled New interrupt enabled status
1508:mpu_9250.c    ****  * @see getIntFreefallEnabled()
1509:mpu_9250.c    ****  * @see MPU9250_RA_INT_ENABLE
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 106


1510:mpu_9250.c    ****  * @see MPU9250_INTERRUPT_FF_BIT
1511:mpu_9250.c    ****  **/
1512:mpu_9250.c    **** void MPU9250_setIntEnabled(uint8_t enabled) {
 4456              		.loc 1 1512 0
 4457              		.cfi_startproc
 4458              		@ args = 0, pretend = 0, frame = 0
 4459              		@ frame_needed = 0, uses_anonymous_args = 0
 4460              	.LVL259:
 4461 0000 08B5     		push	{r3, lr}
 4462              		.cfi_def_cfa_offset 8
 4463              		.cfi_offset 3, -8
 4464              		.cfi_offset 14, -4
 4465 0002 0246     		mov	r2, r0
1513:mpu_9250.c    ****     I2CWriteByte(devAddr, MPU9250_RA_INT_ENABLE, enabled);
 4466              		.loc 1 1513 0
 4467 0004 024B     		ldr	r3, .L492
 4468 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 4469              	.LVL260:
 4470 0008 3821     		movs	r1, #56
 4471 000a FFF7FEFF 		bl	I2CWriteByte
 4472              	.LVL261:
 4473 000e 08BD     		pop	{r3, pc}
 4474              	.L493:
 4475              		.align	2
 4476              	.L492:
 4477 0010 00000000 		.word	devAddr
 4478              		.cfi_endproc
 4479              	.LFE116:
 4480              		.size	MPU9250_setIntEnabled, .-MPU9250_setIntEnabled
 4481              		.section	.text.MPU9250_getIntFreefallEnabled,"ax",%progbits
 4482              		.align	2
 4483              		.global	MPU9250_getIntFreefallEnabled
 4484              		.thumb
 4485              		.thumb_func
 4486              		.type	MPU9250_getIntFreefallEnabled, %function
 4487              	MPU9250_getIntFreefallEnabled:
 4488              	.LFB117:
1514:mpu_9250.c    **** }
1515:mpu_9250.c    **** /** Get Free Fall interrupt enabled status.
1516:mpu_9250.c    ****  * Will be set 0 for disabled, 1 for enabled.
1517:mpu_9250.c    ****  * @return Current interrupt enabled status
1518:mpu_9250.c    ****  * @see MPU9250_RA_INT_ENABLE
1519:mpu_9250.c    ****  * @see MPU9250_INTERRUPT_FF_BIT
1520:mpu_9250.c    ****  **/
1521:mpu_9250.c    **** bool MPU9250_getIntFreefallEnabled() {
 4489              		.loc 1 1521 0
 4490              		.cfi_startproc
 4491              		@ args = 0, pretend = 0, frame = 0
 4492              		@ frame_needed = 0, uses_anonymous_args = 0
 4493 0000 10B5     		push	{r4, lr}
 4494              		.cfi_def_cfa_offset 8
 4495              		.cfi_offset 4, -8
 4496              		.cfi_offset 14, -4
1522:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_INT_ENABLE, MPU9250_INTERRUPT_FF_BIT, buffer);
 4497              		.loc 1 1522 0
 4498 0002 064C     		ldr	r4, .L496
 4499 0004 064B     		ldr	r3, .L496+4
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 107


 4500 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 4501 0008 3821     		movs	r1, #56
 4502 000a 0722     		movs	r2, #7
 4503 000c 2346     		mov	r3, r4
 4504 000e FFF7FEFF 		bl	I2CReadBit
 4505              	.LVL262:
1523:mpu_9250.c    ****     return buffer[0];
 4506              		.loc 1 1523 0
 4507 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
1524:mpu_9250.c    **** }
 4508              		.loc 1 1524 0
 4509 0014 0030     		adds	r0, r0, #0
 4510 0016 18BF     		it	ne
 4511 0018 0120     		movne	r0, #1
 4512 001a 10BD     		pop	{r4, pc}
 4513              	.L497:
 4514              		.align	2
 4515              	.L496:
 4516 001c 00000000 		.word	buffer
 4517 0020 00000000 		.word	devAddr
 4518              		.cfi_endproc
 4519              	.LFE117:
 4520              		.size	MPU9250_getIntFreefallEnabled, .-MPU9250_getIntFreefallEnabled
 4521              		.section	.text.MPU9250_setIntFreefallEnabled,"ax",%progbits
 4522              		.align	2
 4523              		.global	MPU9250_setIntFreefallEnabled
 4524              		.thumb
 4525              		.thumb_func
 4526              		.type	MPU9250_setIntFreefallEnabled, %function
 4527              	MPU9250_setIntFreefallEnabled:
 4528              	.LFB118:
1525:mpu_9250.c    **** /** Set Free Fall interrupt enabled status.
1526:mpu_9250.c    ****  * @param enabled New interrupt enabled status
1527:mpu_9250.c    ****  * @see getIntFreefallEnabled()
1528:mpu_9250.c    ****  * @see MPU9250_RA_INT_ENABLE
1529:mpu_9250.c    ****  * @see MPU9250_INTERRUPT_FF_BIT
1530:mpu_9250.c    ****  **/
1531:mpu_9250.c    **** void MPU9250_setIntFreefallEnabled(bool enabled) {
 4529              		.loc 1 1531 0
 4530              		.cfi_startproc
 4531              		@ args = 0, pretend = 0, frame = 0
 4532              		@ frame_needed = 0, uses_anonymous_args = 0
 4533              	.LVL263:
 4534 0000 08B5     		push	{r3, lr}
 4535              		.cfi_def_cfa_offset 8
 4536              		.cfi_offset 3, -8
 4537              		.cfi_offset 14, -4
 4538 0002 0346     		mov	r3, r0
1532:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_INT_ENABLE, MPU9250_INTERRUPT_FF_BIT, enabled);
 4539              		.loc 1 1532 0
 4540 0004 034A     		ldr	r2, .L500
 4541 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 4542              	.LVL264:
 4543 0008 3821     		movs	r1, #56
 4544 000a 0722     		movs	r2, #7
 4545 000c FFF7FEFF 		bl	I2CWriteBit
 4546              	.LVL265:
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 108


 4547 0010 08BD     		pop	{r3, pc}
 4548              	.L501:
 4549 0012 00BF     		.align	2
 4550              	.L500:
 4551 0014 00000000 		.word	devAddr
 4552              		.cfi_endproc
 4553              	.LFE118:
 4554              		.size	MPU9250_setIntFreefallEnabled, .-MPU9250_setIntFreefallEnabled
 4555              		.section	.text.MPU9250_getIntMotionEnabled,"ax",%progbits
 4556              		.align	2
 4557              		.global	MPU9250_getIntMotionEnabled
 4558              		.thumb
 4559              		.thumb_func
 4560              		.type	MPU9250_getIntMotionEnabled, %function
 4561              	MPU9250_getIntMotionEnabled:
 4562              	.LFB119:
1533:mpu_9250.c    **** }
1534:mpu_9250.c    **** /** Get Motion Detection interrupt enabled status.
1535:mpu_9250.c    ****  * Will be set 0 for disabled, 1 for enabled.
1536:mpu_9250.c    ****  * @return Current interrupt enabled status
1537:mpu_9250.c    ****  * @see MPU9250_RA_INT_ENABLE
1538:mpu_9250.c    ****  * @see MPU9250_INTERRUPT_MOT_BIT
1539:mpu_9250.c    ****  **/
1540:mpu_9250.c    **** bool MPU9250_getIntMotionEnabled() {
 4563              		.loc 1 1540 0
 4564              		.cfi_startproc
 4565              		@ args = 0, pretend = 0, frame = 0
 4566              		@ frame_needed = 0, uses_anonymous_args = 0
 4567 0000 10B5     		push	{r4, lr}
 4568              		.cfi_def_cfa_offset 8
 4569              		.cfi_offset 4, -8
 4570              		.cfi_offset 14, -4
1541:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_INT_ENABLE, MPU9250_INTERRUPT_MOT_BIT, buffer);
 4571              		.loc 1 1541 0
 4572 0002 064C     		ldr	r4, .L504
 4573 0004 064B     		ldr	r3, .L504+4
 4574 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 4575 0008 3821     		movs	r1, #56
 4576 000a 0622     		movs	r2, #6
 4577 000c 2346     		mov	r3, r4
 4578 000e FFF7FEFF 		bl	I2CReadBit
 4579              	.LVL266:
1542:mpu_9250.c    ****     return buffer[0];
 4580              		.loc 1 1542 0
 4581 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
1543:mpu_9250.c    **** }
 4582              		.loc 1 1543 0
 4583 0014 0030     		adds	r0, r0, #0
 4584 0016 18BF     		it	ne
 4585 0018 0120     		movne	r0, #1
 4586 001a 10BD     		pop	{r4, pc}
 4587              	.L505:
 4588              		.align	2
 4589              	.L504:
 4590 001c 00000000 		.word	buffer
 4591 0020 00000000 		.word	devAddr
 4592              		.cfi_endproc
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 109


 4593              	.LFE119:
 4594              		.size	MPU9250_getIntMotionEnabled, .-MPU9250_getIntMotionEnabled
 4595              		.section	.text.MPU9250_setIntMotionEnabled,"ax",%progbits
 4596              		.align	2
 4597              		.global	MPU9250_setIntMotionEnabled
 4598              		.thumb
 4599              		.thumb_func
 4600              		.type	MPU9250_setIntMotionEnabled, %function
 4601              	MPU9250_setIntMotionEnabled:
 4602              	.LFB120:
1544:mpu_9250.c    **** /** Set Motion Detection interrupt enabled status.
1545:mpu_9250.c    ****  * @param enabled New interrupt enabled status
1546:mpu_9250.c    ****  * @see getIntMotionEnabled()
1547:mpu_9250.c    ****  * @see MPU9250_RA_INT_ENABLE
1548:mpu_9250.c    ****  * @see MPU9250_INTERRUPT_MOT_BIT
1549:mpu_9250.c    ****  **/
1550:mpu_9250.c    **** void MPU9250_setIntMotionEnabled(bool enabled) {
 4603              		.loc 1 1550 0
 4604              		.cfi_startproc
 4605              		@ args = 0, pretend = 0, frame = 0
 4606              		@ frame_needed = 0, uses_anonymous_args = 0
 4607              	.LVL267:
 4608 0000 08B5     		push	{r3, lr}
 4609              		.cfi_def_cfa_offset 8
 4610              		.cfi_offset 3, -8
 4611              		.cfi_offset 14, -4
 4612 0002 0346     		mov	r3, r0
1551:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_INT_ENABLE, MPU9250_INTERRUPT_MOT_BIT, enabled);
 4613              		.loc 1 1551 0
 4614 0004 034A     		ldr	r2, .L508
 4615 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 4616              	.LVL268:
 4617 0008 3821     		movs	r1, #56
 4618 000a 0622     		movs	r2, #6
 4619 000c FFF7FEFF 		bl	I2CWriteBit
 4620              	.LVL269:
 4621 0010 08BD     		pop	{r3, pc}
 4622              	.L509:
 4623 0012 00BF     		.align	2
 4624              	.L508:
 4625 0014 00000000 		.word	devAddr
 4626              		.cfi_endproc
 4627              	.LFE120:
 4628              		.size	MPU9250_setIntMotionEnabled, .-MPU9250_setIntMotionEnabled
 4629              		.section	.text.MPU9250_getIntZeroMotionEnabled,"ax",%progbits
 4630              		.align	2
 4631              		.global	MPU9250_getIntZeroMotionEnabled
 4632              		.thumb
 4633              		.thumb_func
 4634              		.type	MPU9250_getIntZeroMotionEnabled, %function
 4635              	MPU9250_getIntZeroMotionEnabled:
 4636              	.LFB121:
1552:mpu_9250.c    **** }
1553:mpu_9250.c    **** /** Get Zero Motion Detection interrupt enabled status.
1554:mpu_9250.c    ****  * Will be set 0 for disabled, 1 for enabled.
1555:mpu_9250.c    ****  * @return Current interrupt enabled status
1556:mpu_9250.c    ****  * @see MPU9250_RA_INT_ENABLE
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 110


1557:mpu_9250.c    ****  * @see MPU9250_INTERRUPT_ZMOT_BIT
1558:mpu_9250.c    ****  **/
1559:mpu_9250.c    **** bool MPU9250_getIntZeroMotionEnabled() {
 4637              		.loc 1 1559 0
 4638              		.cfi_startproc
 4639              		@ args = 0, pretend = 0, frame = 0
 4640              		@ frame_needed = 0, uses_anonymous_args = 0
 4641 0000 10B5     		push	{r4, lr}
 4642              		.cfi_def_cfa_offset 8
 4643              		.cfi_offset 4, -8
 4644              		.cfi_offset 14, -4
1560:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_INT_ENABLE, MPU9250_INTERRUPT_ZMOT_BIT, buffer);
 4645              		.loc 1 1560 0
 4646 0002 064C     		ldr	r4, .L512
 4647 0004 064B     		ldr	r3, .L512+4
 4648 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 4649 0008 3821     		movs	r1, #56
 4650 000a 0522     		movs	r2, #5
 4651 000c 2346     		mov	r3, r4
 4652 000e FFF7FEFF 		bl	I2CReadBit
 4653              	.LVL270:
1561:mpu_9250.c    ****     return buffer[0];
 4654              		.loc 1 1561 0
 4655 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
1562:mpu_9250.c    **** }
 4656              		.loc 1 1562 0
 4657 0014 0030     		adds	r0, r0, #0
 4658 0016 18BF     		it	ne
 4659 0018 0120     		movne	r0, #1
 4660 001a 10BD     		pop	{r4, pc}
 4661              	.L513:
 4662              		.align	2
 4663              	.L512:
 4664 001c 00000000 		.word	buffer
 4665 0020 00000000 		.word	devAddr
 4666              		.cfi_endproc
 4667              	.LFE121:
 4668              		.size	MPU9250_getIntZeroMotionEnabled, .-MPU9250_getIntZeroMotionEnabled
 4669              		.section	.text.MPU9250_setIntZeroMotionEnabled,"ax",%progbits
 4670              		.align	2
 4671              		.global	MPU9250_setIntZeroMotionEnabled
 4672              		.thumb
 4673              		.thumb_func
 4674              		.type	MPU9250_setIntZeroMotionEnabled, %function
 4675              	MPU9250_setIntZeroMotionEnabled:
 4676              	.LFB122:
1563:mpu_9250.c    **** /** Set Zero Motion Detection interrupt enabled status.
1564:mpu_9250.c    ****  * @param enabled New interrupt enabled status
1565:mpu_9250.c    ****  * @see getIntZeroMotionEnabled()
1566:mpu_9250.c    ****  * @see MPU9250_RA_INT_ENABLE
1567:mpu_9250.c    ****  * @see MPU9250_INTERRUPT_ZMOT_BIT
1568:mpu_9250.c    ****  **/
1569:mpu_9250.c    **** void MPU9250_setIntZeroMotionEnabled(bool enabled) {
 4677              		.loc 1 1569 0
 4678              		.cfi_startproc
 4679              		@ args = 0, pretend = 0, frame = 0
 4680              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 111


 4681              	.LVL271:
 4682 0000 08B5     		push	{r3, lr}
 4683              		.cfi_def_cfa_offset 8
 4684              		.cfi_offset 3, -8
 4685              		.cfi_offset 14, -4
 4686 0002 0346     		mov	r3, r0
1570:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_INT_ENABLE, MPU9250_INTERRUPT_ZMOT_BIT, enabled);
 4687              		.loc 1 1570 0
 4688 0004 034A     		ldr	r2, .L516
 4689 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 4690              	.LVL272:
 4691 0008 3821     		movs	r1, #56
 4692 000a 0522     		movs	r2, #5
 4693 000c FFF7FEFF 		bl	I2CWriteBit
 4694              	.LVL273:
 4695 0010 08BD     		pop	{r3, pc}
 4696              	.L517:
 4697 0012 00BF     		.align	2
 4698              	.L516:
 4699 0014 00000000 		.word	devAddr
 4700              		.cfi_endproc
 4701              	.LFE122:
 4702              		.size	MPU9250_setIntZeroMotionEnabled, .-MPU9250_setIntZeroMotionEnabled
 4703              		.section	.text.MPU9250_getIntFIFOBufferOverflowEnabled,"ax",%progbits
 4704              		.align	2
 4705              		.global	MPU9250_getIntFIFOBufferOverflowEnabled
 4706              		.thumb
 4707              		.thumb_func
 4708              		.type	MPU9250_getIntFIFOBufferOverflowEnabled, %function
 4709              	MPU9250_getIntFIFOBufferOverflowEnabled:
 4710              	.LFB123:
1571:mpu_9250.c    **** }
1572:mpu_9250.c    **** /** Get FIFO Buffer Overflow interrupt enabled status.
1573:mpu_9250.c    ****  * Will be set 0 for disabled, 1 for enabled.
1574:mpu_9250.c    ****  * @return Current interrupt enabled status
1575:mpu_9250.c    ****  * @see MPU9250_RA_INT_ENABLE
1576:mpu_9250.c    ****  * @see MPU9250_INTERRUPT_FIFO_OFLOW_BIT
1577:mpu_9250.c    ****  **/
1578:mpu_9250.c    **** bool MPU9250_getIntFIFOBufferOverflowEnabled() {
 4711              		.loc 1 1578 0
 4712              		.cfi_startproc
 4713              		@ args = 0, pretend = 0, frame = 0
 4714              		@ frame_needed = 0, uses_anonymous_args = 0
 4715 0000 10B5     		push	{r4, lr}
 4716              		.cfi_def_cfa_offset 8
 4717              		.cfi_offset 4, -8
 4718              		.cfi_offset 14, -4
1579:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_INT_ENABLE, MPU9250_INTERRUPT_FIFO_OFLOW_BIT, buffer);
 4719              		.loc 1 1579 0
 4720 0002 064C     		ldr	r4, .L520
 4721 0004 064B     		ldr	r3, .L520+4
 4722 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 4723 0008 3821     		movs	r1, #56
 4724 000a 0422     		movs	r2, #4
 4725 000c 2346     		mov	r3, r4
 4726 000e FFF7FEFF 		bl	I2CReadBit
 4727              	.LVL274:
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 112


1580:mpu_9250.c    ****     return buffer[0];
 4728              		.loc 1 1580 0
 4729 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
1581:mpu_9250.c    **** }
 4730              		.loc 1 1581 0
 4731 0014 0030     		adds	r0, r0, #0
 4732 0016 18BF     		it	ne
 4733 0018 0120     		movne	r0, #1
 4734 001a 10BD     		pop	{r4, pc}
 4735              	.L521:
 4736              		.align	2
 4737              	.L520:
 4738 001c 00000000 		.word	buffer
 4739 0020 00000000 		.word	devAddr
 4740              		.cfi_endproc
 4741              	.LFE123:
 4742              		.size	MPU9250_getIntFIFOBufferOverflowEnabled, .-MPU9250_getIntFIFOBufferOverflowEnabled
 4743              		.section	.text.MPU9250_setIntFIFOBufferOverflowEnabled,"ax",%progbits
 4744              		.align	2
 4745              		.global	MPU9250_setIntFIFOBufferOverflowEnabled
 4746              		.thumb
 4747              		.thumb_func
 4748              		.type	MPU9250_setIntFIFOBufferOverflowEnabled, %function
 4749              	MPU9250_setIntFIFOBufferOverflowEnabled:
 4750              	.LFB124:
1582:mpu_9250.c    **** /** Set FIFO Buffer Overflow interrupt enabled status.
1583:mpu_9250.c    ****  * @param enabled New interrupt enabled status
1584:mpu_9250.c    ****  * @see getIntFIFOBufferOverflowEnabled()
1585:mpu_9250.c    ****  * @see MPU9250_RA_INT_ENABLE
1586:mpu_9250.c    ****  * @see MPU9250_INTERRUPT_FIFO_OFLOW_BIT
1587:mpu_9250.c    ****  **/
1588:mpu_9250.c    **** void MPU9250_setIntFIFOBufferOverflowEnabled(bool enabled) {
 4751              		.loc 1 1588 0
 4752              		.cfi_startproc
 4753              		@ args = 0, pretend = 0, frame = 0
 4754              		@ frame_needed = 0, uses_anonymous_args = 0
 4755              	.LVL275:
 4756 0000 08B5     		push	{r3, lr}
 4757              		.cfi_def_cfa_offset 8
 4758              		.cfi_offset 3, -8
 4759              		.cfi_offset 14, -4
 4760 0002 0346     		mov	r3, r0
1589:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_INT_ENABLE, MPU9250_INTERRUPT_FIFO_OFLOW_BIT, enabled);
 4761              		.loc 1 1589 0
 4762 0004 034A     		ldr	r2, .L524
 4763 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 4764              	.LVL276:
 4765 0008 3821     		movs	r1, #56
 4766 000a 0422     		movs	r2, #4
 4767 000c FFF7FEFF 		bl	I2CWriteBit
 4768              	.LVL277:
 4769 0010 08BD     		pop	{r3, pc}
 4770              	.L525:
 4771 0012 00BF     		.align	2
 4772              	.L524:
 4773 0014 00000000 		.word	devAddr
 4774              		.cfi_endproc
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 113


 4775              	.LFE124:
 4776              		.size	MPU9250_setIntFIFOBufferOverflowEnabled, .-MPU9250_setIntFIFOBufferOverflowEnabled
 4777              		.section	.text.MPU9250_getIntI2CMasterEnabled,"ax",%progbits
 4778              		.align	2
 4779              		.global	MPU9250_getIntI2CMasterEnabled
 4780              		.thumb
 4781              		.thumb_func
 4782              		.type	MPU9250_getIntI2CMasterEnabled, %function
 4783              	MPU9250_getIntI2CMasterEnabled:
 4784              	.LFB125:
1590:mpu_9250.c    **** }
1591:mpu_9250.c    **** /** Get I2C Master interrupt enabled status.
1592:mpu_9250.c    ****  * This enables any of the I2C Master interrupt sources to generate an
1593:mpu_9250.c    ****  * interrupt. Will be set 0 for disabled, 1 for enabled.
1594:mpu_9250.c    ****  * @return Current interrupt enabled status
1595:mpu_9250.c    ****  * @see MPU9250_RA_INT_ENABLE
1596:mpu_9250.c    ****  * @see MPU9250_INTERRUPT_I2C_MST_INT_BIT
1597:mpu_9250.c    ****  **/
1598:mpu_9250.c    **** bool MPU9250_getIntI2CMasterEnabled() {
 4785              		.loc 1 1598 0
 4786              		.cfi_startproc
 4787              		@ args = 0, pretend = 0, frame = 0
 4788              		@ frame_needed = 0, uses_anonymous_args = 0
 4789 0000 10B5     		push	{r4, lr}
 4790              		.cfi_def_cfa_offset 8
 4791              		.cfi_offset 4, -8
 4792              		.cfi_offset 14, -4
1599:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_INT_ENABLE, MPU9250_INTERRUPT_I2C_MST_INT_BIT, buffer);
 4793              		.loc 1 1599 0
 4794 0002 064C     		ldr	r4, .L528
 4795 0004 064B     		ldr	r3, .L528+4
 4796 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 4797 0008 3821     		movs	r1, #56
 4798 000a 0322     		movs	r2, #3
 4799 000c 2346     		mov	r3, r4
 4800 000e FFF7FEFF 		bl	I2CReadBit
 4801              	.LVL278:
1600:mpu_9250.c    ****     return buffer[0];
 4802              		.loc 1 1600 0
 4803 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
1601:mpu_9250.c    **** }
 4804              		.loc 1 1601 0
 4805 0014 0030     		adds	r0, r0, #0
 4806 0016 18BF     		it	ne
 4807 0018 0120     		movne	r0, #1
 4808 001a 10BD     		pop	{r4, pc}
 4809              	.L529:
 4810              		.align	2
 4811              	.L528:
 4812 001c 00000000 		.word	buffer
 4813 0020 00000000 		.word	devAddr
 4814              		.cfi_endproc
 4815              	.LFE125:
 4816              		.size	MPU9250_getIntI2CMasterEnabled, .-MPU9250_getIntI2CMasterEnabled
 4817              		.section	.text.MPU9250_setIntI2CMasterEnabled,"ax",%progbits
 4818              		.align	2
 4819              		.global	MPU9250_setIntI2CMasterEnabled
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 114


 4820              		.thumb
 4821              		.thumb_func
 4822              		.type	MPU9250_setIntI2CMasterEnabled, %function
 4823              	MPU9250_setIntI2CMasterEnabled:
 4824              	.LFB126:
1602:mpu_9250.c    **** /** Set I2C Master interrupt enabled status.
1603:mpu_9250.c    ****  * @param enabled New interrupt enabled status
1604:mpu_9250.c    ****  * @see getIntI2CMasterEnabled()
1605:mpu_9250.c    ****  * @see MPU9250_RA_INT_ENABLE
1606:mpu_9250.c    ****  * @see MPU9250_INTERRUPT_I2C_MST_INT_BIT
1607:mpu_9250.c    ****  **/
1608:mpu_9250.c    **** void MPU9250_setIntI2CMasterEnabled(bool enabled) {
 4825              		.loc 1 1608 0
 4826              		.cfi_startproc
 4827              		@ args = 0, pretend = 0, frame = 0
 4828              		@ frame_needed = 0, uses_anonymous_args = 0
 4829              	.LVL279:
 4830 0000 08B5     		push	{r3, lr}
 4831              		.cfi_def_cfa_offset 8
 4832              		.cfi_offset 3, -8
 4833              		.cfi_offset 14, -4
 4834 0002 0346     		mov	r3, r0
1609:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_INT_ENABLE, MPU9250_INTERRUPT_I2C_MST_INT_BIT, enabled);
 4835              		.loc 1 1609 0
 4836 0004 034A     		ldr	r2, .L532
 4837 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 4838              	.LVL280:
 4839 0008 3821     		movs	r1, #56
 4840 000a 0322     		movs	r2, #3
 4841 000c FFF7FEFF 		bl	I2CWriteBit
 4842              	.LVL281:
 4843 0010 08BD     		pop	{r3, pc}
 4844              	.L533:
 4845 0012 00BF     		.align	2
 4846              	.L532:
 4847 0014 00000000 		.word	devAddr
 4848              		.cfi_endproc
 4849              	.LFE126:
 4850              		.size	MPU9250_setIntI2CMasterEnabled, .-MPU9250_setIntI2CMasterEnabled
 4851              		.section	.text.MPU9250_getIntDataReadyEnabled,"ax",%progbits
 4852              		.align	2
 4853              		.global	MPU9250_getIntDataReadyEnabled
 4854              		.thumb
 4855              		.thumb_func
 4856              		.type	MPU9250_getIntDataReadyEnabled, %function
 4857              	MPU9250_getIntDataReadyEnabled:
 4858              	.LFB127:
1610:mpu_9250.c    **** }
1611:mpu_9250.c    **** /** Get Data Ready interrupt enabled setting.
1612:mpu_9250.c    ****  * This event occurs each time a write operation to all of the sensor registers
1613:mpu_9250.c    ****  * has been completed. Will be set 0 for disabled, 1 for enabled.
1614:mpu_9250.c    ****  * @return Current interrupt enabled status
1615:mpu_9250.c    ****  * @see MPU9250_RA_INT_ENABLE
1616:mpu_9250.c    ****  * @see MPU9250_INTERRUPT_DATA_RDY_BIT
1617:mpu_9250.c    ****  */
1618:mpu_9250.c    **** bool MPU9250_getIntDataReadyEnabled() {
 4859              		.loc 1 1618 0
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 115


 4860              		.cfi_startproc
 4861              		@ args = 0, pretend = 0, frame = 0
 4862              		@ frame_needed = 0, uses_anonymous_args = 0
 4863 0000 10B5     		push	{r4, lr}
 4864              		.cfi_def_cfa_offset 8
 4865              		.cfi_offset 4, -8
 4866              		.cfi_offset 14, -4
1619:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_INT_ENABLE, MPU9250_INTERRUPT_DATA_RDY_BIT, buffer);
 4867              		.loc 1 1619 0
 4868 0002 064C     		ldr	r4, .L536
 4869 0004 064B     		ldr	r3, .L536+4
 4870 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 4871 0008 3821     		movs	r1, #56
 4872 000a 0022     		movs	r2, #0
 4873 000c 2346     		mov	r3, r4
 4874 000e FFF7FEFF 		bl	I2CReadBit
 4875              	.LVL282:
1620:mpu_9250.c    ****     return buffer[0];
 4876              		.loc 1 1620 0
 4877 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
1621:mpu_9250.c    **** }
 4878              		.loc 1 1621 0
 4879 0014 0030     		adds	r0, r0, #0
 4880 0016 18BF     		it	ne
 4881 0018 0120     		movne	r0, #1
 4882 001a 10BD     		pop	{r4, pc}
 4883              	.L537:
 4884              		.align	2
 4885              	.L536:
 4886 001c 00000000 		.word	buffer
 4887 0020 00000000 		.word	devAddr
 4888              		.cfi_endproc
 4889              	.LFE127:
 4890              		.size	MPU9250_getIntDataReadyEnabled, .-MPU9250_getIntDataReadyEnabled
 4891              		.section	.text.MPU9250_setIntDataReadyEnabled,"ax",%progbits
 4892              		.align	2
 4893              		.global	MPU9250_setIntDataReadyEnabled
 4894              		.thumb
 4895              		.thumb_func
 4896              		.type	MPU9250_setIntDataReadyEnabled, %function
 4897              	MPU9250_setIntDataReadyEnabled:
 4898              	.LFB128:
1622:mpu_9250.c    **** /** Set Data Ready interrupt enabled status.
1623:mpu_9250.c    ****  * @param enabled New interrupt enabled status
1624:mpu_9250.c    ****  * @see getIntDataReadyEnabled()
1625:mpu_9250.c    ****  * @see MPU9250_RA_INT_CFG
1626:mpu_9250.c    ****  * @see MPU9250_INTERRUPT_DATA_RDY_BIT
1627:mpu_9250.c    ****  */
1628:mpu_9250.c    **** void MPU9250_setIntDataReadyEnabled(bool enabled) {
 4899              		.loc 1 1628 0
 4900              		.cfi_startproc
 4901              		@ args = 0, pretend = 0, frame = 0
 4902              		@ frame_needed = 0, uses_anonymous_args = 0
 4903              	.LVL283:
 4904 0000 08B5     		push	{r3, lr}
 4905              		.cfi_def_cfa_offset 8
 4906              		.cfi_offset 3, -8
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 116


 4907              		.cfi_offset 14, -4
 4908 0002 0346     		mov	r3, r0
1629:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_INT_ENABLE, MPU9250_INTERRUPT_DATA_RDY_BIT, enabled);
 4909              		.loc 1 1629 0
 4910 0004 034A     		ldr	r2, .L540
 4911 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 4912              	.LVL284:
 4913 0008 3821     		movs	r1, #56
 4914 000a 0022     		movs	r2, #0
 4915 000c FFF7FEFF 		bl	I2CWriteBit
 4916              	.LVL285:
 4917 0010 08BD     		pop	{r3, pc}
 4918              	.L541:
 4919 0012 00BF     		.align	2
 4920              	.L540:
 4921 0014 00000000 		.word	devAddr
 4922              		.cfi_endproc
 4923              	.LFE128:
 4924              		.size	MPU9250_setIntDataReadyEnabled, .-MPU9250_setIntDataReadyEnabled
 4925              		.section	.text.MPU9250_getIntStatus,"ax",%progbits
 4926              		.align	2
 4927              		.global	MPU9250_getIntStatus
 4928              		.thumb
 4929              		.thumb_func
 4930              		.type	MPU9250_getIntStatus, %function
 4931              	MPU9250_getIntStatus:
 4932              	.LFB129:
1630:mpu_9250.c    **** }
1631:mpu_9250.c    **** 
1632:mpu_9250.c    **** // INT_STATUS register
1633:mpu_9250.c    **** 
1634:mpu_9250.c    **** /** Get full set of interrupt status bits.
1635:mpu_9250.c    ****  * These bits clear to 0 after the register has been read. Very useful
1636:mpu_9250.c    ****  * for getting multiple INT statuses, since each single bit read clears
1637:mpu_9250.c    ****  * all of them because it has to read the whole byte.
1638:mpu_9250.c    ****  * @return Current interrupt status
1639:mpu_9250.c    ****  * @see MPU9250_RA_INT_STATUS
1640:mpu_9250.c    ****  */
1641:mpu_9250.c    **** uint8_t MPU9250_getIntStatus() {
 4933              		.loc 1 1641 0
 4934              		.cfi_startproc
 4935              		@ args = 0, pretend = 0, frame = 0
 4936              		@ frame_needed = 0, uses_anonymous_args = 0
 4937 0000 10B5     		push	{r4, lr}
 4938              		.cfi_def_cfa_offset 8
 4939              		.cfi_offset 4, -8
 4940              		.cfi_offset 14, -4
1642:mpu_9250.c    ****     I2CReadByte(devAddr, MPU9250_RA_INT_STATUS, buffer);
 4941              		.loc 1 1642 0
 4942 0002 044C     		ldr	r4, .L544
 4943 0004 044B     		ldr	r3, .L544+4
 4944 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 4945 0008 3A21     		movs	r1, #58
 4946 000a 2246     		mov	r2, r4
 4947 000c FFF7FEFF 		bl	I2CReadByte
 4948              	.LVL286:
1643:mpu_9250.c    ****     return buffer[0];
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 117


1644:mpu_9250.c    **** }
 4949              		.loc 1 1644 0
 4950 0010 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 4951 0012 10BD     		pop	{r4, pc}
 4952              	.L545:
 4953              		.align	2
 4954              	.L544:
 4955 0014 00000000 		.word	buffer
 4956 0018 00000000 		.word	devAddr
 4957              		.cfi_endproc
 4958              	.LFE129:
 4959              		.size	MPU9250_getIntStatus, .-MPU9250_getIntStatus
 4960              		.section	.text.MPU9250_getIntFreefallStatus,"ax",%progbits
 4961              		.align	2
 4962              		.global	MPU9250_getIntFreefallStatus
 4963              		.thumb
 4964              		.thumb_func
 4965              		.type	MPU9250_getIntFreefallStatus, %function
 4966              	MPU9250_getIntFreefallStatus:
 4967              	.LFB130:
1645:mpu_9250.c    **** /** Get Free Fall interrupt status.
1646:mpu_9250.c    ****  * This bit automatically sets to 1 when a Free Fall interrupt has been
1647:mpu_9250.c    ****  * generated. The bit clears to 0 after the register has been read.
1648:mpu_9250.c    ****  * @return Current interrupt status
1649:mpu_9250.c    ****  * @see MPU9250_RA_INT_STATUS
1650:mpu_9250.c    ****  * @see MPU9250_INTERRUPT_FF_BIT
1651:mpu_9250.c    ****  */
1652:mpu_9250.c    **** bool MPU9250_getIntFreefallStatus() {
 4968              		.loc 1 1652 0
 4969              		.cfi_startproc
 4970              		@ args = 0, pretend = 0, frame = 0
 4971              		@ frame_needed = 0, uses_anonymous_args = 0
 4972 0000 10B5     		push	{r4, lr}
 4973              		.cfi_def_cfa_offset 8
 4974              		.cfi_offset 4, -8
 4975              		.cfi_offset 14, -4
1653:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_INT_STATUS, MPU9250_INTERRUPT_FF_BIT, buffer);
 4976              		.loc 1 1653 0
 4977 0002 064C     		ldr	r4, .L548
 4978 0004 064B     		ldr	r3, .L548+4
 4979 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 4980 0008 3A21     		movs	r1, #58
 4981 000a 0722     		movs	r2, #7
 4982 000c 2346     		mov	r3, r4
 4983 000e FFF7FEFF 		bl	I2CReadBit
 4984              	.LVL287:
1654:mpu_9250.c    ****     return buffer[0];
 4985              		.loc 1 1654 0
 4986 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
1655:mpu_9250.c    **** }
 4987              		.loc 1 1655 0
 4988 0014 0030     		adds	r0, r0, #0
 4989 0016 18BF     		it	ne
 4990 0018 0120     		movne	r0, #1
 4991 001a 10BD     		pop	{r4, pc}
 4992              	.L549:
 4993              		.align	2
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 118


 4994              	.L548:
 4995 001c 00000000 		.word	buffer
 4996 0020 00000000 		.word	devAddr
 4997              		.cfi_endproc
 4998              	.LFE130:
 4999              		.size	MPU9250_getIntFreefallStatus, .-MPU9250_getIntFreefallStatus
 5000              		.section	.text.MPU9250_getMotion6,"ax",%progbits
 5001              		.align	2
 5002              		.global	MPU9250_getMotion6
 5003              		.thumb
 5004              		.thumb_func
 5005              		.type	MPU9250_getMotion6, %function
 5006              	MPU9250_getMotion6:
 5007              	.LFB131:
1656:mpu_9250.c    **** 
1657:mpu_9250.c    **** 
1658:mpu_9250.c    **** /** Get raw 6-axis motion sensor readings (accel/gyro).
1659:mpu_9250.c    ****  * Retrieves all currently available motion sensor values.
1660:mpu_9250.c    ****  * @param ax 16-bit signed integer container for accelerometer X-axis value
1661:mpu_9250.c    ****  * @param ay 16-bit signed integer container for accelerometer Y-axis value
1662:mpu_9250.c    ****  * @param az 16-bit signed integer container for accelerometer Z-axis value
1663:mpu_9250.c    ****  * @param gx 16-bit signed integer container for gyroscope X-axis value
1664:mpu_9250.c    ****  * @param gy 16-bit signed integer container for gyroscope Y-axis value
1665:mpu_9250.c    ****  * @param gz 16-bit signed integer container for gyroscope Z-axis value
1666:mpu_9250.c    ****  * @see getAcceleration()
1667:mpu_9250.c    ****  * @see getRotation()
1668:mpu_9250.c    ****  * @see MPU9250_RA_ACCEL_XOUT_H
1669:mpu_9250.c    ****  */
1670:mpu_9250.c    **** void MPU9250_getMotion6(int16_t* ax, int16_t* ay, int16_t* az, int16_t* gx, int16_t* gy, int16_t* g
 5008              		.loc 1 1670 0
 5009              		.cfi_startproc
 5010              		@ args = 8, pretend = 0, frame = 0
 5011              		@ frame_needed = 0, uses_anonymous_args = 0
 5012              	.LVL288:
 5013 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 5014              		.cfi_def_cfa_offset 24
 5015              		.cfi_offset 4, -24
 5016              		.cfi_offset 5, -20
 5017              		.cfi_offset 6, -16
 5018              		.cfi_offset 7, -12
 5019              		.cfi_offset 8, -8
 5020              		.cfi_offset 14, -4
 5021 0004 8046     		mov	r8, r0
 5022 0006 0F46     		mov	r7, r1
 5023 0008 1646     		mov	r6, r2
 5024 000a 1D46     		mov	r5, r3
1671:mpu_9250.c    ****     I2CReadBytes(devAddr, MPU9250_RA_ACCEL_XOUT_H, 14, buffer);
 5025              		.loc 1 1671 0
 5026 000c 154C     		ldr	r4, .L552
 5027 000e 164B     		ldr	r3, .L552+4
 5028              	.LVL289:
 5029 0010 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5030              	.LVL290:
 5031 0012 3B21     		movs	r1, #59
 5032              	.LVL291:
 5033 0014 0E22     		movs	r2, #14
 5034              	.LVL292:
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 119


 5035 0016 2346     		mov	r3, r4
 5036 0018 FFF7FEFF 		bl	I2CReadBytes
 5037              	.LVL293:
1672:mpu_9250.c    ****     //fixme the following code needs to be examined. causes a interrupt to NMI_VECTOR
1673:mpu_9250.c    ****     *ax = (((int16_t)buffer[0]) << 8) | buffer[1];
 5038              		.loc 1 1673 0
 5039 001c 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 5040 001e 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 5041 0020 43EA0223 		orr	r3, r3, r2, lsl #8
 5042 0024 A8F80030 		strh	r3, [r8]	@ movhi
1674:mpu_9250.c    ****     *ay = (((int16_t)buffer[2]) << 8) | buffer[3];
 5043              		.loc 1 1674 0
 5044 0028 A278     		ldrb	r2, [r4, #2]	@ zero_extendqisi2
 5045 002a E378     		ldrb	r3, [r4, #3]	@ zero_extendqisi2
 5046 002c 43EA0223 		orr	r3, r3, r2, lsl #8
 5047 0030 3B80     		strh	r3, [r7]	@ movhi
1675:mpu_9250.c    ****     *az = (((int16_t)buffer[4]) << 8) | buffer[5];
 5048              		.loc 1 1675 0
 5049 0032 2279     		ldrb	r2, [r4, #4]	@ zero_extendqisi2
 5050 0034 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 5051 0036 43EA0223 		orr	r3, r3, r2, lsl #8
 5052 003a 3380     		strh	r3, [r6]	@ movhi
1676:mpu_9250.c    ****     *gx = (((int16_t)buffer[8]) << 8) | buffer[9];
 5053              		.loc 1 1676 0
 5054 003c 227A     		ldrb	r2, [r4, #8]	@ zero_extendqisi2
 5055 003e 637A     		ldrb	r3, [r4, #9]	@ zero_extendqisi2
 5056 0040 43EA0223 		orr	r3, r3, r2, lsl #8
 5057 0044 2B80     		strh	r3, [r5]	@ movhi
1677:mpu_9250.c    ****     *gy = (((int16_t)buffer[10]) << 8) | buffer[11];
 5058              		.loc 1 1677 0
 5059 0046 A27A     		ldrb	r2, [r4, #10]	@ zero_extendqisi2
 5060 0048 E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 5061 004a 43EA0223 		orr	r3, r3, r2, lsl #8
 5062 004e 069A     		ldr	r2, [sp, #24]
 5063 0050 1380     		strh	r3, [r2]	@ movhi
1678:mpu_9250.c    ****     *gz = (((int16_t)buffer[12]) << 8) | buffer[13];
 5064              		.loc 1 1678 0
 5065 0052 227B     		ldrb	r2, [r4, #12]	@ zero_extendqisi2
 5066 0054 637B     		ldrb	r3, [r4, #13]	@ zero_extendqisi2
 5067 0056 43EA0223 		orr	r3, r3, r2, lsl #8
 5068 005a 079A     		ldr	r2, [sp, #28]
 5069 005c 1380     		strh	r3, [r2]	@ movhi
 5070 005e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5071              	.LVL294:
 5072              	.L553:
 5073 0062 00BF     		.align	2
 5074              	.L552:
 5075 0064 00000000 		.word	buffer
 5076 0068 00000000 		.word	devAddr
 5077              		.cfi_endproc
 5078              	.LFE131:
 5079              		.size	MPU9250_getMotion6, .-MPU9250_getMotion6
 5080              		.section	.text.MPU9250_getXNegMotionDetected,"ax",%progbits
 5081              		.align	2
 5082              		.global	MPU9250_getXNegMotionDetected
 5083              		.thumb
 5084              		.thumb_func
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 120


 5085              		.type	MPU9250_getXNegMotionDetected, %function
 5086              	MPU9250_getXNegMotionDetected:
 5087              	.LFB132:
1679:mpu_9250.c    **** }
1680:mpu_9250.c    **** 
1681:mpu_9250.c    **** 
1682:mpu_9250.c    **** 
1683:mpu_9250.c    **** // MOT_DETECT_STATUS register
1684:mpu_9250.c    **** 
1685:mpu_9250.c    **** /** Get X-axis negative motion detection interrupt status.
1686:mpu_9250.c    ****  * @return Motion detection status
1687:mpu_9250.c    ****  * @see MPU9250_RA_MOT_DETECT_STATUS
1688:mpu_9250.c    ****  * @see MPU9250_MOTION_MOT_XNEG_BIT
1689:mpu_9250.c    ****  */
1690:mpu_9250.c    **** bool MPU9250_getXNegMotionDetected() {
 5088              		.loc 1 1690 0
 5089              		.cfi_startproc
 5090              		@ args = 0, pretend = 0, frame = 0
 5091              		@ frame_needed = 0, uses_anonymous_args = 0
 5092 0000 10B5     		push	{r4, lr}
 5093              		.cfi_def_cfa_offset 8
 5094              		.cfi_offset 4, -8
 5095              		.cfi_offset 14, -4
1691:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_MOT_DETECT_STATUS, MPU9250_MOTION_MOT_XNEG_BIT, buffer);
 5096              		.loc 1 1691 0
 5097 0002 064C     		ldr	r4, .L556
 5098 0004 064B     		ldr	r3, .L556+4
 5099 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5100 0008 6121     		movs	r1, #97
 5101 000a 0722     		movs	r2, #7
 5102 000c 2346     		mov	r3, r4
 5103 000e FFF7FEFF 		bl	I2CReadBit
 5104              	.LVL295:
1692:mpu_9250.c    ****     return buffer[0];
 5105              		.loc 1 1692 0
 5106 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
1693:mpu_9250.c    **** }
 5107              		.loc 1 1693 0
 5108 0014 0030     		adds	r0, r0, #0
 5109 0016 18BF     		it	ne
 5110 0018 0120     		movne	r0, #1
 5111 001a 10BD     		pop	{r4, pc}
 5112              	.L557:
 5113              		.align	2
 5114              	.L556:
 5115 001c 00000000 		.word	buffer
 5116 0020 00000000 		.word	devAddr
 5117              		.cfi_endproc
 5118              	.LFE132:
 5119              		.size	MPU9250_getXNegMotionDetected, .-MPU9250_getXNegMotionDetected
 5120              		.section	.text.MPU9250_getXPosMotionDetected,"ax",%progbits
 5121              		.align	2
 5122              		.global	MPU9250_getXPosMotionDetected
 5123              		.thumb
 5124              		.thumb_func
 5125              		.type	MPU9250_getXPosMotionDetected, %function
 5126              	MPU9250_getXPosMotionDetected:
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 121


 5127              	.LFB133:
1694:mpu_9250.c    **** /** Get X-axis positive motion detection interrupt status.
1695:mpu_9250.c    ****  * @return Motion detection status
1696:mpu_9250.c    ****  * @see MPU9250_RA_MOT_DETECT_STATUS
1697:mpu_9250.c    ****  * @see MPU9250_MOTION_MOT_XPOS_BIT
1698:mpu_9250.c    ****  */
1699:mpu_9250.c    **** bool MPU9250_getXPosMotionDetected() {
 5128              		.loc 1 1699 0
 5129              		.cfi_startproc
 5130              		@ args = 0, pretend = 0, frame = 0
 5131              		@ frame_needed = 0, uses_anonymous_args = 0
 5132 0000 10B5     		push	{r4, lr}
 5133              		.cfi_def_cfa_offset 8
 5134              		.cfi_offset 4, -8
 5135              		.cfi_offset 14, -4
1700:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_MOT_DETECT_STATUS, MPU9250_MOTION_MOT_XPOS_BIT, buffer);
 5136              		.loc 1 1700 0
 5137 0002 064C     		ldr	r4, .L560
 5138 0004 064B     		ldr	r3, .L560+4
 5139 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5140 0008 6121     		movs	r1, #97
 5141 000a 0622     		movs	r2, #6
 5142 000c 2346     		mov	r3, r4
 5143 000e FFF7FEFF 		bl	I2CReadBit
 5144              	.LVL296:
1701:mpu_9250.c    ****     return buffer[0];
 5145              		.loc 1 1701 0
 5146 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
1702:mpu_9250.c    **** }
 5147              		.loc 1 1702 0
 5148 0014 0030     		adds	r0, r0, #0
 5149 0016 18BF     		it	ne
 5150 0018 0120     		movne	r0, #1
 5151 001a 10BD     		pop	{r4, pc}
 5152              	.L561:
 5153              		.align	2
 5154              	.L560:
 5155 001c 00000000 		.word	buffer
 5156 0020 00000000 		.word	devAddr
 5157              		.cfi_endproc
 5158              	.LFE133:
 5159              		.size	MPU9250_getXPosMotionDetected, .-MPU9250_getXPosMotionDetected
 5160              		.section	.text.MPU9250_getYNegMotionDetected,"ax",%progbits
 5161              		.align	2
 5162              		.global	MPU9250_getYNegMotionDetected
 5163              		.thumb
 5164              		.thumb_func
 5165              		.type	MPU9250_getYNegMotionDetected, %function
 5166              	MPU9250_getYNegMotionDetected:
 5167              	.LFB134:
1703:mpu_9250.c    **** /** Get Y-axis negative motion detection interrupt status.
1704:mpu_9250.c    ****  * @return Motion detection status
1705:mpu_9250.c    ****  * @see MPU9250_RA_MOT_DETECT_STATUS
1706:mpu_9250.c    ****  * @see MPU9250_MOTION_MOT_YNEG_BIT
1707:mpu_9250.c    ****  */
1708:mpu_9250.c    **** bool MPU9250_getYNegMotionDetected() {
 5168              		.loc 1 1708 0
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 122


 5169              		.cfi_startproc
 5170              		@ args = 0, pretend = 0, frame = 0
 5171              		@ frame_needed = 0, uses_anonymous_args = 0
 5172 0000 10B5     		push	{r4, lr}
 5173              		.cfi_def_cfa_offset 8
 5174              		.cfi_offset 4, -8
 5175              		.cfi_offset 14, -4
1709:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_MOT_DETECT_STATUS, MPU9250_MOTION_MOT_YNEG_BIT, buffer);
 5176              		.loc 1 1709 0
 5177 0002 064C     		ldr	r4, .L564
 5178 0004 064B     		ldr	r3, .L564+4
 5179 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5180 0008 6121     		movs	r1, #97
 5181 000a 0522     		movs	r2, #5
 5182 000c 2346     		mov	r3, r4
 5183 000e FFF7FEFF 		bl	I2CReadBit
 5184              	.LVL297:
1710:mpu_9250.c    ****     return buffer[0];
 5185              		.loc 1 1710 0
 5186 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
1711:mpu_9250.c    **** }
 5187              		.loc 1 1711 0
 5188 0014 0030     		adds	r0, r0, #0
 5189 0016 18BF     		it	ne
 5190 0018 0120     		movne	r0, #1
 5191 001a 10BD     		pop	{r4, pc}
 5192              	.L565:
 5193              		.align	2
 5194              	.L564:
 5195 001c 00000000 		.word	buffer
 5196 0020 00000000 		.word	devAddr
 5197              		.cfi_endproc
 5198              	.LFE134:
 5199              		.size	MPU9250_getYNegMotionDetected, .-MPU9250_getYNegMotionDetected
 5200              		.section	.text.MPU9250_getYPosMotionDetected,"ax",%progbits
 5201              		.align	2
 5202              		.global	MPU9250_getYPosMotionDetected
 5203              		.thumb
 5204              		.thumb_func
 5205              		.type	MPU9250_getYPosMotionDetected, %function
 5206              	MPU9250_getYPosMotionDetected:
 5207              	.LFB135:
1712:mpu_9250.c    **** /** Get Y-axis positive motion detection interrupt status.
1713:mpu_9250.c    ****  * @return Motion detection status
1714:mpu_9250.c    ****  * @see MPU9250_RA_MOT_DETECT_STATUS
1715:mpu_9250.c    ****  * @see MPU9250_MOTION_MOT_YPOS_BIT
1716:mpu_9250.c    ****  */
1717:mpu_9250.c    **** bool MPU9250_getYPosMotionDetected() {
 5208              		.loc 1 1717 0
 5209              		.cfi_startproc
 5210              		@ args = 0, pretend = 0, frame = 0
 5211              		@ frame_needed = 0, uses_anonymous_args = 0
 5212 0000 10B5     		push	{r4, lr}
 5213              		.cfi_def_cfa_offset 8
 5214              		.cfi_offset 4, -8
 5215              		.cfi_offset 14, -4
1718:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_MOT_DETECT_STATUS, MPU9250_MOTION_MOT_YPOS_BIT, buffer);
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 123


 5216              		.loc 1 1718 0
 5217 0002 064C     		ldr	r4, .L568
 5218 0004 064B     		ldr	r3, .L568+4
 5219 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5220 0008 6121     		movs	r1, #97
 5221 000a 0422     		movs	r2, #4
 5222 000c 2346     		mov	r3, r4
 5223 000e FFF7FEFF 		bl	I2CReadBit
 5224              	.LVL298:
1719:mpu_9250.c    ****     return buffer[0];
 5225              		.loc 1 1719 0
 5226 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
1720:mpu_9250.c    **** }
 5227              		.loc 1 1720 0
 5228 0014 0030     		adds	r0, r0, #0
 5229 0016 18BF     		it	ne
 5230 0018 0120     		movne	r0, #1
 5231 001a 10BD     		pop	{r4, pc}
 5232              	.L569:
 5233              		.align	2
 5234              	.L568:
 5235 001c 00000000 		.word	buffer
 5236 0020 00000000 		.word	devAddr
 5237              		.cfi_endproc
 5238              	.LFE135:
 5239              		.size	MPU9250_getYPosMotionDetected, .-MPU9250_getYPosMotionDetected
 5240              		.section	.text.MPU9250_getZNegMotionDetected,"ax",%progbits
 5241              		.align	2
 5242              		.global	MPU9250_getZNegMotionDetected
 5243              		.thumb
 5244              		.thumb_func
 5245              		.type	MPU9250_getZNegMotionDetected, %function
 5246              	MPU9250_getZNegMotionDetected:
 5247              	.LFB136:
1721:mpu_9250.c    **** /** Get Z-axis negative motion detection interrupt status.
1722:mpu_9250.c    ****  * @return Motion detection status
1723:mpu_9250.c    ****  * @see MPU9250_RA_MOT_DETECT_STATUS
1724:mpu_9250.c    ****  * @see MPU9250_MOTION_MOT_ZNEG_BIT
1725:mpu_9250.c    ****  */
1726:mpu_9250.c    **** bool MPU9250_getZNegMotionDetected() {
 5248              		.loc 1 1726 0
 5249              		.cfi_startproc
 5250              		@ args = 0, pretend = 0, frame = 0
 5251              		@ frame_needed = 0, uses_anonymous_args = 0
 5252 0000 10B5     		push	{r4, lr}
 5253              		.cfi_def_cfa_offset 8
 5254              		.cfi_offset 4, -8
 5255              		.cfi_offset 14, -4
1727:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_MOT_DETECT_STATUS, MPU9250_MOTION_MOT_ZNEG_BIT, buffer);
 5256              		.loc 1 1727 0
 5257 0002 064C     		ldr	r4, .L572
 5258 0004 064B     		ldr	r3, .L572+4
 5259 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5260 0008 6121     		movs	r1, #97
 5261 000a 0322     		movs	r2, #3
 5262 000c 2346     		mov	r3, r4
 5263 000e FFF7FEFF 		bl	I2CReadBit
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 124


 5264              	.LVL299:
1728:mpu_9250.c    ****     return buffer[0];
 5265              		.loc 1 1728 0
 5266 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
1729:mpu_9250.c    **** }
 5267              		.loc 1 1729 0
 5268 0014 0030     		adds	r0, r0, #0
 5269 0016 18BF     		it	ne
 5270 0018 0120     		movne	r0, #1
 5271 001a 10BD     		pop	{r4, pc}
 5272              	.L573:
 5273              		.align	2
 5274              	.L572:
 5275 001c 00000000 		.word	buffer
 5276 0020 00000000 		.word	devAddr
 5277              		.cfi_endproc
 5278              	.LFE136:
 5279              		.size	MPU9250_getZNegMotionDetected, .-MPU9250_getZNegMotionDetected
 5280              		.section	.text.MPU9250_getZPosMotionDetected,"ax",%progbits
 5281              		.align	2
 5282              		.global	MPU9250_getZPosMotionDetected
 5283              		.thumb
 5284              		.thumb_func
 5285              		.type	MPU9250_getZPosMotionDetected, %function
 5286              	MPU9250_getZPosMotionDetected:
 5287              	.LFB137:
1730:mpu_9250.c    **** /** Get Z-axis positive motion detection interrupt status.
1731:mpu_9250.c    ****  * @return Motion detection status
1732:mpu_9250.c    ****  * @see MPU9250_RA_MOT_DETECT_STATUS
1733:mpu_9250.c    ****  * @see MPU9250_MOTION_MOT_ZPOS_BIT
1734:mpu_9250.c    ****  */
1735:mpu_9250.c    **** bool MPU9250_getZPosMotionDetected() {
 5288              		.loc 1 1735 0
 5289              		.cfi_startproc
 5290              		@ args = 0, pretend = 0, frame = 0
 5291              		@ frame_needed = 0, uses_anonymous_args = 0
 5292 0000 10B5     		push	{r4, lr}
 5293              		.cfi_def_cfa_offset 8
 5294              		.cfi_offset 4, -8
 5295              		.cfi_offset 14, -4
1736:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_MOT_DETECT_STATUS, MPU9250_MOTION_MOT_ZPOS_BIT, buffer);
 5296              		.loc 1 1736 0
 5297 0002 064C     		ldr	r4, .L576
 5298 0004 064B     		ldr	r3, .L576+4
 5299 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5300 0008 6121     		movs	r1, #97
 5301 000a 0222     		movs	r2, #2
 5302 000c 2346     		mov	r3, r4
 5303 000e FFF7FEFF 		bl	I2CReadBit
 5304              	.LVL300:
1737:mpu_9250.c    ****     return buffer[0];
 5305              		.loc 1 1737 0
 5306 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
1738:mpu_9250.c    **** }
 5307              		.loc 1 1738 0
 5308 0014 0030     		adds	r0, r0, #0
 5309 0016 18BF     		it	ne
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 125


 5310 0018 0120     		movne	r0, #1
 5311 001a 10BD     		pop	{r4, pc}
 5312              	.L577:
 5313              		.align	2
 5314              	.L576:
 5315 001c 00000000 		.word	buffer
 5316 0020 00000000 		.word	devAddr
 5317              		.cfi_endproc
 5318              	.LFE137:
 5319              		.size	MPU9250_getZPosMotionDetected, .-MPU9250_getZPosMotionDetected
 5320              		.section	.text.MPU9250_getZeroMotionDetected,"ax",%progbits
 5321              		.align	2
 5322              		.global	MPU9250_getZeroMotionDetected
 5323              		.thumb
 5324              		.thumb_func
 5325              		.type	MPU9250_getZeroMotionDetected, %function
 5326              	MPU9250_getZeroMotionDetected:
 5327              	.LFB138:
1739:mpu_9250.c    **** /** Get zero motion detection interrupt status.
1740:mpu_9250.c    ****  * @return Motion detection status
1741:mpu_9250.c    ****  * @see MPU9250_RA_MOT_DETECT_STATUS
1742:mpu_9250.c    ****  * @see MPU9250_MOTION_MOT_ZRMOT_BIT
1743:mpu_9250.c    ****  */
1744:mpu_9250.c    **** bool MPU9250_getZeroMotionDetected() {
 5328              		.loc 1 1744 0
 5329              		.cfi_startproc
 5330              		@ args = 0, pretend = 0, frame = 0
 5331              		@ frame_needed = 0, uses_anonymous_args = 0
 5332 0000 10B5     		push	{r4, lr}
 5333              		.cfi_def_cfa_offset 8
 5334              		.cfi_offset 4, -8
 5335              		.cfi_offset 14, -4
1745:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_MOT_DETECT_STATUS, MPU9250_MOTION_MOT_ZRMOT_BIT, buffer);
 5336              		.loc 1 1745 0
 5337 0002 064C     		ldr	r4, .L580
 5338 0004 064B     		ldr	r3, .L580+4
 5339 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5340 0008 6121     		movs	r1, #97
 5341 000a 0022     		movs	r2, #0
 5342 000c 2346     		mov	r3, r4
 5343 000e FFF7FEFF 		bl	I2CReadBit
 5344              	.LVL301:
1746:mpu_9250.c    ****     return buffer[0];
 5345              		.loc 1 1746 0
 5346 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
1747:mpu_9250.c    **** }
 5347              		.loc 1 1747 0
 5348 0014 0030     		adds	r0, r0, #0
 5349 0016 18BF     		it	ne
 5350 0018 0120     		movne	r0, #1
 5351 001a 10BD     		pop	{r4, pc}
 5352              	.L581:
 5353              		.align	2
 5354              	.L580:
 5355 001c 00000000 		.word	buffer
 5356 0020 00000000 		.word	devAddr
 5357              		.cfi_endproc
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 126


 5358              	.LFE138:
 5359              		.size	MPU9250_getZeroMotionDetected, .-MPU9250_getZeroMotionDetected
 5360              		.section	.text.MPU9250_setSlaveOutputByte,"ax",%progbits
 5361              		.align	2
 5362              		.global	MPU9250_setSlaveOutputByte
 5363              		.thumb
 5364              		.thumb_func
 5365              		.type	MPU9250_setSlaveOutputByte, %function
 5366              	MPU9250_setSlaveOutputByte:
 5367              	.LFB139:
1748:mpu_9250.c    **** 
1749:mpu_9250.c    **** // I2C_SLV*_DO register
1750:mpu_9250.c    **** 
1751:mpu_9250.c    **** /** Write byte to Data Output container for specified slave.
1752:mpu_9250.c    ****  * This register holds the output data written into Slave when Slave is set to
1753:mpu_9250.c    ****  * write mode. For further information regarding Slave control, please
1754:mpu_9250.c    ****  * refer to Registers 37 to 39 and immediately following.
1755:mpu_9250.c    ****  * @param num Slave number (0-3)
1756:mpu_9250.c    ****  * @param data Byte to write
1757:mpu_9250.c    ****  * @see MPU9250_RA_I2C_SLV0_DO
1758:mpu_9250.c    ****  */
1759:mpu_9250.c    **** void MPU9250_setSlaveOutputByte(uint8_t num, uint8_t data) {
 5368              		.loc 1 1759 0
 5369              		.cfi_startproc
 5370              		@ args = 0, pretend = 0, frame = 0
 5371              		@ frame_needed = 0, uses_anonymous_args = 0
 5372              	.LVL302:
1760:mpu_9250.c    ****     if (num > 3) return;
 5373              		.loc 1 1760 0
 5374 0000 0328     		cmp	r0, #3
 5375 0002 09D8     		bhi	.L585
1759:mpu_9250.c    ****     if (num > 3) return;
 5376              		.loc 1 1759 0
 5377 0004 08B5     		push	{r3, lr}
 5378              		.cfi_def_cfa_offset 8
 5379              		.cfi_offset 3, -8
 5380              		.cfi_offset 14, -4
 5381 0006 0A46     		mov	r2, r1
1761:mpu_9250.c    ****     I2CWriteByte(devAddr, MPU9250_RA_I2C_SLV0_DO + num, data);
 5382              		.loc 1 1761 0
 5383 0008 00F16303 		add	r3, r0, #99
 5384 000c 0349     		ldr	r1, .L586
 5385              	.LVL303:
 5386 000e 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 5387              	.LVL304:
 5388 0010 D9B2     		uxtb	r1, r3
 5389 0012 FFF7FEFF 		bl	I2CWriteByte
 5390              	.LVL305:
 5391 0016 08BD     		pop	{r3, pc}
 5392              	.LVL306:
 5393              	.L585:
 5394              		.cfi_def_cfa_offset 0
 5395              		.cfi_restore 3
 5396              		.cfi_restore 14
 5397 0018 7047     		bx	lr
 5398              	.L587:
 5399 001a 00BF     		.align	2
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 127


 5400              	.L586:
 5401 001c 00000000 		.word	devAddr
 5402              		.cfi_endproc
 5403              	.LFE139:
 5404              		.size	MPU9250_setSlaveOutputByte, .-MPU9250_setSlaveOutputByte
 5405              		.section	.text.MPU9250_getExternalShadowDelayEnabled,"ax",%progbits
 5406              		.align	2
 5407              		.global	MPU9250_getExternalShadowDelayEnabled
 5408              		.thumb
 5409              		.thumb_func
 5410              		.type	MPU9250_getExternalShadowDelayEnabled, %function
 5411              	MPU9250_getExternalShadowDelayEnabled:
 5412              	.LFB140:
1762:mpu_9250.c    **** }
1763:mpu_9250.c    **** 
1764:mpu_9250.c    **** // I2C_MST_DELAY_CTRL register
1765:mpu_9250.c    **** 
1766:mpu_9250.c    **** /** Get external data shadow delay enabled status.
1767:mpu_9250.c    ****  * This register is used to specify the timing of external sensor data
1768:mpu_9250.c    ****  * shadowing. When DELAY_ES_SHADOW is set to 1, shadowing of external
1769:mpu_9250.c    ****  * sensor data is delayed until all data has been received.
1770:mpu_9250.c    ****  * @return Current external data shadow delay enabled status.
1771:mpu_9250.c    ****  * @see MPU9250_RA_I2C_MST_DELAY_CTRL
1772:mpu_9250.c    ****  * @see MPU9250_DELAYCTRL_DELAY_ES_SHADOW_BIT
1773:mpu_9250.c    ****  */
1774:mpu_9250.c    **** bool MPU9250_getExternalShadowDelayEnabled() {
 5413              		.loc 1 1774 0
 5414              		.cfi_startproc
 5415              		@ args = 0, pretend = 0, frame = 0
 5416              		@ frame_needed = 0, uses_anonymous_args = 0
 5417 0000 10B5     		push	{r4, lr}
 5418              		.cfi_def_cfa_offset 8
 5419              		.cfi_offset 4, -8
 5420              		.cfi_offset 14, -4
1775:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_I2C_MST_DELAY_CTRL, MPU9250_DELAYCTRL_DELAY_ES_SHADOW_BIT, buffe
 5421              		.loc 1 1775 0
 5422 0002 064C     		ldr	r4, .L590
 5423 0004 064B     		ldr	r3, .L590+4
 5424 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5425 0008 6721     		movs	r1, #103
 5426 000a 0722     		movs	r2, #7
 5427 000c 2346     		mov	r3, r4
 5428 000e FFF7FEFF 		bl	I2CReadBit
 5429              	.LVL307:
1776:mpu_9250.c    ****     return buffer[0];
 5430              		.loc 1 1776 0
 5431 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
1777:mpu_9250.c    **** }
 5432              		.loc 1 1777 0
 5433 0014 0030     		adds	r0, r0, #0
 5434 0016 18BF     		it	ne
 5435 0018 0120     		movne	r0, #1
 5436 001a 10BD     		pop	{r4, pc}
 5437              	.L591:
 5438              		.align	2
 5439              	.L590:
 5440 001c 00000000 		.word	buffer
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 128


 5441 0020 00000000 		.word	devAddr
 5442              		.cfi_endproc
 5443              	.LFE140:
 5444              		.size	MPU9250_getExternalShadowDelayEnabled, .-MPU9250_getExternalShadowDelayEnabled
 5445              		.section	.text.MPU9250_setExternalShadowDelayEnabled,"ax",%progbits
 5446              		.align	2
 5447              		.global	MPU9250_setExternalShadowDelayEnabled
 5448              		.thumb
 5449              		.thumb_func
 5450              		.type	MPU9250_setExternalShadowDelayEnabled, %function
 5451              	MPU9250_setExternalShadowDelayEnabled:
 5452              	.LFB141:
1778:mpu_9250.c    **** /** Set external data shadow delay enabled status.
1779:mpu_9250.c    ****  * @param enabled New external data shadow delay enabled status.
1780:mpu_9250.c    ****  * @see getExternalShadowDelayEnabled()
1781:mpu_9250.c    ****  * @see MPU9250_RA_I2C_MST_DELAY_CTRL
1782:mpu_9250.c    ****  * @see MPU9250_DELAYCTRL_DELAY_ES_SHADOW_BIT
1783:mpu_9250.c    ****  */
1784:mpu_9250.c    **** void MPU9250_setExternalShadowDelayEnabled(bool enabled) {
 5453              		.loc 1 1784 0
 5454              		.cfi_startproc
 5455              		@ args = 0, pretend = 0, frame = 0
 5456              		@ frame_needed = 0, uses_anonymous_args = 0
 5457              	.LVL308:
 5458 0000 08B5     		push	{r3, lr}
 5459              		.cfi_def_cfa_offset 8
 5460              		.cfi_offset 3, -8
 5461              		.cfi_offset 14, -4
 5462 0002 0346     		mov	r3, r0
1785:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_I2C_MST_DELAY_CTRL, MPU9250_DELAYCTRL_DELAY_ES_SHADOW_BIT, enab
 5463              		.loc 1 1785 0
 5464 0004 034A     		ldr	r2, .L594
 5465 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 5466              	.LVL309:
 5467 0008 6721     		movs	r1, #103
 5468 000a 0722     		movs	r2, #7
 5469 000c FFF7FEFF 		bl	I2CWriteBit
 5470              	.LVL310:
 5471 0010 08BD     		pop	{r3, pc}
 5472              	.L595:
 5473 0012 00BF     		.align	2
 5474              	.L594:
 5475 0014 00000000 		.word	devAddr
 5476              		.cfi_endproc
 5477              	.LFE141:
 5478              		.size	MPU9250_setExternalShadowDelayEnabled, .-MPU9250_setExternalShadowDelayEnabled
 5479              		.section	.text.MPU9250_getSlaveDelayEnabled,"ax",%progbits
 5480              		.align	2
 5481              		.global	MPU9250_getSlaveDelayEnabled
 5482              		.thumb
 5483              		.thumb_func
 5484              		.type	MPU9250_getSlaveDelayEnabled, %function
 5485              	MPU9250_getSlaveDelayEnabled:
 5486              	.LFB142:
1786:mpu_9250.c    **** }
1787:mpu_9250.c    **** /** Get slave delay enabled status.
1788:mpu_9250.c    ****  * When a particular slave delay is enabled, the rate of access for the that
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 129


1789:mpu_9250.c    ****  * slave device is reduced. When a slave's access rate is decreased relative to
1790:mpu_9250.c    ****  * the Sample Rate, the slave is accessed every:
1791:mpu_9250.c    ****  *
1792:mpu_9250.c    ****  *     1 / (1 + I2C_MST_DLY) Samples
1793:mpu_9250.c    ****  *
1794:mpu_9250.c    ****  * This base Sample Rate in turn is determined by SMPLRT_DIV (register  * 25)
1795:mpu_9250.c    ****  * and DLPF_CFG (register 26).
1796:mpu_9250.c    ****  *
1797:mpu_9250.c    ****  * For further information regarding I2C_MST_DLY, please refer to register 52.
1798:mpu_9250.c    ****  * For further information regarding the Sample Rate, please refer to register 25.
1799:mpu_9250.c    ****  *
1800:mpu_9250.c    ****  * @param num Slave number (0-4)
1801:mpu_9250.c    ****  * @return Current slave delay enabled status.
1802:mpu_9250.c    ****  * @see MPU9250_RA_I2C_MST_DELAY_CTRL
1803:mpu_9250.c    ****  * @see MPU9250_DELAYCTRL_I2C_SLV0_DLY_EN_BIT
1804:mpu_9250.c    ****  */
1805:mpu_9250.c    **** bool MPU9250_getSlaveDelayEnabled(uint8_t num) {
 5487              		.loc 1 1805 0
 5488              		.cfi_startproc
 5489              		@ args = 0, pretend = 0, frame = 0
 5490              		@ frame_needed = 0, uses_anonymous_args = 0
 5491              	.LVL311:
1806:mpu_9250.c    ****     // MPU9250_DELAYCTRL_I2C_SLV4_DLY_EN_BIT is 4, SLV3 is 3, etc.
1807:mpu_9250.c    ****     if (num > 4) return 0;
 5492              		.loc 1 1807 0
 5493 0000 0428     		cmp	r0, #4
 5494 0002 0DD8     		bhi	.L598
1805:mpu_9250.c    ****     // MPU9250_DELAYCTRL_I2C_SLV4_DLY_EN_BIT is 4, SLV3 is 3, etc.
 5495              		.loc 1 1805 0
 5496 0004 10B5     		push	{r4, lr}
 5497              		.cfi_def_cfa_offset 8
 5498              		.cfi_offset 4, -8
 5499              		.cfi_offset 14, -4
 5500 0006 0246     		mov	r2, r0
1808:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_I2C_MST_DELAY_CTRL, num, buffer);
 5501              		.loc 1 1808 0
 5502 0008 064C     		ldr	r4, .L601
 5503 000a 074B     		ldr	r3, .L601+4
 5504 000c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5505              	.LVL312:
 5506 000e 6721     		movs	r1, #103
 5507 0010 2346     		mov	r3, r4
 5508 0012 FFF7FEFF 		bl	I2CReadBit
 5509              	.LVL313:
1809:mpu_9250.c    ****     return buffer[0];
 5510              		.loc 1 1809 0
 5511 0016 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 5512 0018 0030     		adds	r0, r0, #0
 5513 001a 18BF     		it	ne
 5514 001c 0120     		movne	r0, #1
 5515 001e 10BD     		pop	{r4, pc}
 5516              	.LVL314:
 5517              	.L598:
 5518              		.cfi_def_cfa_offset 0
 5519              		.cfi_restore 4
 5520              		.cfi_restore 14
1807:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_I2C_MST_DELAY_CTRL, num, buffer);
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 130


 5521              		.loc 1 1807 0
 5522 0020 0020     		movs	r0, #0
 5523              	.LVL315:
 5524 0022 7047     		bx	lr
 5525              	.L602:
 5526              		.align	2
 5527              	.L601:
 5528 0024 00000000 		.word	buffer
 5529 0028 00000000 		.word	devAddr
 5530              		.cfi_endproc
 5531              	.LFE142:
 5532              		.size	MPU9250_getSlaveDelayEnabled, .-MPU9250_getSlaveDelayEnabled
 5533              		.section	.text.MPU9250_setSlaveDelayEnabled,"ax",%progbits
 5534              		.align	2
 5535              		.global	MPU9250_setSlaveDelayEnabled
 5536              		.thumb
 5537              		.thumb_func
 5538              		.type	MPU9250_setSlaveDelayEnabled, %function
 5539              	MPU9250_setSlaveDelayEnabled:
 5540              	.LFB143:
1810:mpu_9250.c    **** }
1811:mpu_9250.c    **** /** Set slave delay enabled status.
1812:mpu_9250.c    ****  * @param num Slave number (0-4)
1813:mpu_9250.c    ****  * @param enabled New slave delay enabled status.
1814:mpu_9250.c    ****  * @see MPU9250_RA_I2C_MST_DELAY_CTRL
1815:mpu_9250.c    ****  * @see MPU9250_DELAYCTRL_I2C_SLV0_DLY_EN_BIT
1816:mpu_9250.c    ****  */
1817:mpu_9250.c    **** void MPU9250_setSlaveDelayEnabled(uint8_t num, bool enabled) {
 5541              		.loc 1 1817 0
 5542              		.cfi_startproc
 5543              		@ args = 0, pretend = 0, frame = 0
 5544              		@ frame_needed = 0, uses_anonymous_args = 0
 5545              	.LVL316:
 5546 0000 08B5     		push	{r3, lr}
 5547              		.cfi_def_cfa_offset 8
 5548              		.cfi_offset 3, -8
 5549              		.cfi_offset 14, -4
 5550 0002 0246     		mov	r2, r0
 5551 0004 0B46     		mov	r3, r1
1818:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_I2C_MST_DELAY_CTRL, num, enabled);
 5552              		.loc 1 1818 0
 5553 0006 0349     		ldr	r1, .L605
 5554              	.LVL317:
 5555 0008 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 5556              	.LVL318:
 5557 000a 6721     		movs	r1, #103
 5558 000c FFF7FEFF 		bl	I2CWriteBit
 5559              	.LVL319:
 5560 0010 08BD     		pop	{r3, pc}
 5561              	.L606:
 5562 0012 00BF     		.align	2
 5563              	.L605:
 5564 0014 00000000 		.word	devAddr
 5565              		.cfi_endproc
 5566              	.LFE143:
 5567              		.size	MPU9250_setSlaveDelayEnabled, .-MPU9250_setSlaveDelayEnabled
 5568              		.section	.text.MPU9250_resetGyroscopePath,"ax",%progbits
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 131


 5569              		.align	2
 5570              		.global	MPU9250_resetGyroscopePath
 5571              		.thumb
 5572              		.thumb_func
 5573              		.type	MPU9250_resetGyroscopePath, %function
 5574              	MPU9250_resetGyroscopePath:
 5575              	.LFB144:
1819:mpu_9250.c    **** }
1820:mpu_9250.c    **** 
1821:mpu_9250.c    **** // SIGNAL_PATH_RESET register
1822:mpu_9250.c    **** 
1823:mpu_9250.c    **** /** Reset gyroscope signal path.
1824:mpu_9250.c    ****  * The reset will revert the signal path analog to digital converters and
1825:mpu_9250.c    ****  * filters to their power up configurations.
1826:mpu_9250.c    ****  * @see MPU9250_RA_SIGNAL_PATH_RESET
1827:mpu_9250.c    ****  * @see MPU9250_PATHRESET_GYRO_RESET_BIT
1828:mpu_9250.c    ****  */
1829:mpu_9250.c    **** void MPU9250_resetGyroscopePath() {
 5576              		.loc 1 1829 0
 5577              		.cfi_startproc
 5578              		@ args = 0, pretend = 0, frame = 0
 5579              		@ frame_needed = 0, uses_anonymous_args = 0
 5580 0000 08B5     		push	{r3, lr}
 5581              		.cfi_def_cfa_offset 8
 5582              		.cfi_offset 3, -8
 5583              		.cfi_offset 14, -4
1830:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_SIGNAL_PATH_RESET, MPU9250_PATHRESET_GYRO_RESET_BIT, true);
 5584              		.loc 1 1830 0
 5585 0002 044B     		ldr	r3, .L609
 5586 0004 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5587 0006 6821     		movs	r1, #104
 5588 0008 0222     		movs	r2, #2
 5589 000a 0123     		movs	r3, #1
 5590 000c FFF7FEFF 		bl	I2CWriteBit
 5591              	.LVL320:
 5592 0010 08BD     		pop	{r3, pc}
 5593              	.L610:
 5594 0012 00BF     		.align	2
 5595              	.L609:
 5596 0014 00000000 		.word	devAddr
 5597              		.cfi_endproc
 5598              	.LFE144:
 5599              		.size	MPU9250_resetGyroscopePath, .-MPU9250_resetGyroscopePath
 5600              		.section	.text.MPU9250_resetAccelerometerPath,"ax",%progbits
 5601              		.align	2
 5602              		.global	MPU9250_resetAccelerometerPath
 5603              		.thumb
 5604              		.thumb_func
 5605              		.type	MPU9250_resetAccelerometerPath, %function
 5606              	MPU9250_resetAccelerometerPath:
 5607              	.LFB145:
1831:mpu_9250.c    **** }
1832:mpu_9250.c    **** /** Reset accelerometer signal path.
1833:mpu_9250.c    ****  * The reset will revert the signal path analog to digital converters and
1834:mpu_9250.c    ****  * filters to their power up configurations.
1835:mpu_9250.c    ****  * @see MPU9250_RA_SIGNAL_PATH_RESET
1836:mpu_9250.c    ****  * @see MPU9250_PATHRESET_ACCEL_RESET_BIT
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 132


1837:mpu_9250.c    ****  */
1838:mpu_9250.c    **** void MPU9250_resetAccelerometerPath() {
 5608              		.loc 1 1838 0
 5609              		.cfi_startproc
 5610              		@ args = 0, pretend = 0, frame = 0
 5611              		@ frame_needed = 0, uses_anonymous_args = 0
 5612 0000 08B5     		push	{r3, lr}
 5613              		.cfi_def_cfa_offset 8
 5614              		.cfi_offset 3, -8
 5615              		.cfi_offset 14, -4
1839:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_SIGNAL_PATH_RESET, MPU9250_PATHRESET_ACCEL_RESET_BIT, true);
 5616              		.loc 1 1839 0
 5617 0002 044B     		ldr	r3, .L613
 5618 0004 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5619 0006 6821     		movs	r1, #104
 5620 0008 0122     		movs	r2, #1
 5621 000a 1346     		mov	r3, r2
 5622 000c FFF7FEFF 		bl	I2CWriteBit
 5623              	.LVL321:
 5624 0010 08BD     		pop	{r3, pc}
 5625              	.L614:
 5626 0012 00BF     		.align	2
 5627              	.L613:
 5628 0014 00000000 		.word	devAddr
 5629              		.cfi_endproc
 5630              	.LFE145:
 5631              		.size	MPU9250_resetAccelerometerPath, .-MPU9250_resetAccelerometerPath
 5632              		.section	.text.MPU9250_resetTemperaturePath,"ax",%progbits
 5633              		.align	2
 5634              		.global	MPU9250_resetTemperaturePath
 5635              		.thumb
 5636              		.thumb_func
 5637              		.type	MPU9250_resetTemperaturePath, %function
 5638              	MPU9250_resetTemperaturePath:
 5639              	.LFB146:
1840:mpu_9250.c    **** }
1841:mpu_9250.c    **** /** Reset temperature sensor signal path.
1842:mpu_9250.c    ****  * The reset will revert the signal path analog to digital converters and
1843:mpu_9250.c    ****  * filters to their power up configurations.
1844:mpu_9250.c    ****  * @see MPU9250_RA_SIGNAL_PATH_RESET
1845:mpu_9250.c    ****  * @see MPU9250_PATHRESET_TEMP_RESET_BIT
1846:mpu_9250.c    ****  */
1847:mpu_9250.c    **** void MPU9250_resetTemperaturePath() {
 5640              		.loc 1 1847 0
 5641              		.cfi_startproc
 5642              		@ args = 0, pretend = 0, frame = 0
 5643              		@ frame_needed = 0, uses_anonymous_args = 0
 5644 0000 08B5     		push	{r3, lr}
 5645              		.cfi_def_cfa_offset 8
 5646              		.cfi_offset 3, -8
 5647              		.cfi_offset 14, -4
1848:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_SIGNAL_PATH_RESET, MPU9250_PATHRESET_TEMP_RESET_BIT, true);
 5648              		.loc 1 1848 0
 5649 0002 044B     		ldr	r3, .L617
 5650 0004 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5651 0006 6821     		movs	r1, #104
 5652 0008 0022     		movs	r2, #0
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 133


 5653 000a 0123     		movs	r3, #1
 5654 000c FFF7FEFF 		bl	I2CWriteBit
 5655              	.LVL322:
 5656 0010 08BD     		pop	{r3, pc}
 5657              	.L618:
 5658 0012 00BF     		.align	2
 5659              	.L617:
 5660 0014 00000000 		.word	devAddr
 5661              		.cfi_endproc
 5662              	.LFE146:
 5663              		.size	MPU9250_resetTemperaturePath, .-MPU9250_resetTemperaturePath
 5664              		.section	.text.MPU9250_getAccelerometerPowerOnDelay,"ax",%progbits
 5665              		.align	2
 5666              		.global	MPU9250_getAccelerometerPowerOnDelay
 5667              		.thumb
 5668              		.thumb_func
 5669              		.type	MPU9250_getAccelerometerPowerOnDelay, %function
 5670              	MPU9250_getAccelerometerPowerOnDelay:
 5671              	.LFB147:
1849:mpu_9250.c    **** }
1850:mpu_9250.c    **** 
1851:mpu_9250.c    **** // MOT_DETECT_CTRL register
1852:mpu_9250.c    **** 
1853:mpu_9250.c    **** /** Get accelerometer power-on delay.
1854:mpu_9250.c    ****  * The accelerometer data path provides samples to the sensor registers, Motion
1855:mpu_9250.c    ****  * detection, Zero Motion detection, and Free Fall detection modules. The
1856:mpu_9250.c    ****  * signal path contains filters which must be flushed on wake-up with new
1857:mpu_9250.c    ****  * samples before the detection modules begin operations. The default wake-up
1858:mpu_9250.c    ****  * delay, of 4ms can be lengthened by up to 3ms. This additional delay is
1859:mpu_9250.c    ****  * specified in ACCEL_ON_DELAY in units of 1 LSB = 1 ms. The user may select
1860:mpu_9250.c    ****  * any value above zero unless instructed otherwise by InvenSense. Please refer
1861:mpu_9250.c    ****  * to Section 8 of the MPU-6000/MPU-9250 Product Specification document for
1862:mpu_9250.c    ****  * further information regarding the detection modules.
1863:mpu_9250.c    ****  * @return Current accelerometer power-on delay
1864:mpu_9250.c    ****  * @see MPU9250_RA_MOT_DETECT_CTRL
1865:mpu_9250.c    ****  * @see MPU9250_DETECT_ACCEL_ON_DELAY_BIT
1866:mpu_9250.c    ****  */
1867:mpu_9250.c    **** uint8_t MPU9250_getAccelerometerPowerOnDelay() {
 5672              		.loc 1 1867 0
 5673              		.cfi_startproc
 5674              		@ args = 0, pretend = 0, frame = 0
 5675              		@ frame_needed = 0, uses_anonymous_args = 0
 5676 0000 10B5     		push	{r4, lr}
 5677              		.cfi_def_cfa_offset 8
 5678              		.cfi_offset 4, -8
 5679              		.cfi_offset 14, -4
 5680 0002 82B0     		sub	sp, sp, #8
 5681              		.cfi_def_cfa_offset 16
1868:mpu_9250.c    ****     I2CReadBits(devAddr, MPU9250_RA_MOT_DETECT_CTRL, MPU9250_DETECT_ACCEL_ON_DELAY_BIT, MPU9250_DET
 5682              		.loc 1 1868 0
 5683 0004 054B     		ldr	r3, .L621
 5684 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5685 0008 054C     		ldr	r4, .L621+4
 5686 000a 0094     		str	r4, [sp]
 5687 000c 6921     		movs	r1, #105
 5688 000e 0522     		movs	r2, #5
 5689 0010 0223     		movs	r3, #2
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 134


 5690 0012 FFF7FEFF 		bl	I2CReadBits
 5691              	.LVL323:
1869:mpu_9250.c    ****     return buffer[0];
1870:mpu_9250.c    **** }
 5692              		.loc 1 1870 0
 5693 0016 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 5694 0018 02B0     		add	sp, sp, #8
 5695              		.cfi_def_cfa_offset 8
 5696              		@ sp needed
 5697 001a 10BD     		pop	{r4, pc}
 5698              	.L622:
 5699              		.align	2
 5700              	.L621:
 5701 001c 00000000 		.word	devAddr
 5702 0020 00000000 		.word	buffer
 5703              		.cfi_endproc
 5704              	.LFE147:
 5705              		.size	MPU9250_getAccelerometerPowerOnDelay, .-MPU9250_getAccelerometerPowerOnDelay
 5706              		.section	.text.MPU9250_setAccelerometerPowerOnDelay,"ax",%progbits
 5707              		.align	2
 5708              		.global	MPU9250_setAccelerometerPowerOnDelay
 5709              		.thumb
 5710              		.thumb_func
 5711              		.type	MPU9250_setAccelerometerPowerOnDelay, %function
 5712              	MPU9250_setAccelerometerPowerOnDelay:
 5713              	.LFB148:
1871:mpu_9250.c    **** /** Set accelerometer power-on delay.
1872:mpu_9250.c    ****  * @param delay New accelerometer power-on delay (0-3)
1873:mpu_9250.c    ****  * @see getAccelerometerPowerOnDelay()
1874:mpu_9250.c    ****  * @see MPU9250_RA_MOT_DETECT_CTRL
1875:mpu_9250.c    ****  * @see MPU9250_DETECT_ACCEL_ON_DELAY_BIT
1876:mpu_9250.c    ****  */
1877:mpu_9250.c    **** void MPU9250_setAccelerometerPowerOnDelay(uint8_t delay) {
 5714              		.loc 1 1877 0
 5715              		.cfi_startproc
 5716              		@ args = 0, pretend = 0, frame = 0
 5717              		@ frame_needed = 0, uses_anonymous_args = 0
 5718              	.LVL324:
 5719 0000 00B5     		push	{lr}
 5720              		.cfi_def_cfa_offset 4
 5721              		.cfi_offset 14, -4
 5722 0002 83B0     		sub	sp, sp, #12
 5723              		.cfi_def_cfa_offset 16
1878:mpu_9250.c    ****     I2CWriteBits(devAddr, MPU9250_RA_MOT_DETECT_CTRL, MPU9250_DETECT_ACCEL_ON_DELAY_BIT, MPU9250_DE
 5724              		.loc 1 1878 0
 5725 0004 054B     		ldr	r3, .L625
 5726 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5727 0008 0090     		str	r0, [sp]
 5728 000a 1846     		mov	r0, r3
 5729              	.LVL325:
 5730 000c 6921     		movs	r1, #105
 5731 000e 0522     		movs	r2, #5
 5732 0010 0223     		movs	r3, #2
 5733 0012 FFF7FEFF 		bl	I2CWriteBits
 5734              	.LVL326:
1879:mpu_9250.c    **** }
 5735              		.loc 1 1879 0
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 135


 5736 0016 03B0     		add	sp, sp, #12
 5737              		.cfi_def_cfa_offset 4
 5738              		@ sp needed
 5739 0018 5DF804FB 		ldr	pc, [sp], #4
 5740              	.L626:
 5741              		.align	2
 5742              	.L625:
 5743 001c 00000000 		.word	devAddr
 5744              		.cfi_endproc
 5745              	.LFE148:
 5746              		.size	MPU9250_setAccelerometerPowerOnDelay, .-MPU9250_setAccelerometerPowerOnDelay
 5747              		.section	.text.MPU9250_getFreefallDetectionCounterDecrement,"ax",%progbits
 5748              		.align	2
 5749              		.global	MPU9250_getFreefallDetectionCounterDecrement
 5750              		.thumb
 5751              		.thumb_func
 5752              		.type	MPU9250_getFreefallDetectionCounterDecrement, %function
 5753              	MPU9250_getFreefallDetectionCounterDecrement:
 5754              	.LFB149:
1880:mpu_9250.c    **** /** Get Free Fall detection counter decrement configuration.
1881:mpu_9250.c    ****  * Detection is registered by the Free Fall detection module after accelerometer
1882:mpu_9250.c    ****  * measurements meet their respective threshold conditions over a specified
1883:mpu_9250.c    ****  * number of samples. When the threshold conditions are met, the corresponding
1884:mpu_9250.c    ****  * detection counter increments by 1. The user may control the rate at which the
1885:mpu_9250.c    ****  * detection counter decrements when the threshold condition is not met by
1886:mpu_9250.c    ****  * configuring FF_COUNT. The decrement rate can be set according to the
1887:mpu_9250.c    ****  * following table:
1888:mpu_9250.c    ****  *
1889:mpu_9250.c    ****  * <pre>
1890:mpu_9250.c    ****  * FF_COUNT | Counter Decrement
1891:mpu_9250.c    ****  * ---------+------------------
1892:mpu_9250.c    ****  * 0        | Reset
1893:mpu_9250.c    ****  * 1        | 1
1894:mpu_9250.c    ****  * 2        | 2
1895:mpu_9250.c    ****  * 3        | 4
1896:mpu_9250.c    ****  * </pre>
1897:mpu_9250.c    ****  *
1898:mpu_9250.c    ****  * When FF_COUNT is configured to 0 (reset), any non-qualifying sample will
1899:mpu_9250.c    ****  * reset the counter to 0. For further information on Free Fall detection,
1900:mpu_9250.c    ****  * please refer to Registers 29 to 32.
1901:mpu_9250.c    ****  *
1902:mpu_9250.c    ****  * @return Current decrement configuration
1903:mpu_9250.c    ****  * @see MPU9250_RA_MOT_DETECT_CTRL
1904:mpu_9250.c    ****  * @see MPU9250_DETECT_FF_COUNT_BIT
1905:mpu_9250.c    ****  */
1906:mpu_9250.c    **** uint8_t MPU9250_getFreefallDetectionCounterDecrement() {
 5755              		.loc 1 1906 0
 5756              		.cfi_startproc
 5757              		@ args = 0, pretend = 0, frame = 0
 5758              		@ frame_needed = 0, uses_anonymous_args = 0
 5759 0000 10B5     		push	{r4, lr}
 5760              		.cfi_def_cfa_offset 8
 5761              		.cfi_offset 4, -8
 5762              		.cfi_offset 14, -4
 5763 0002 82B0     		sub	sp, sp, #8
 5764              		.cfi_def_cfa_offset 16
1907:mpu_9250.c    ****     I2CReadBits(devAddr, MPU9250_RA_MOT_DETECT_CTRL, MPU9250_DETECT_FF_COUNT_BIT, MPU9250_DETECT_FF
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 136


 5765              		.loc 1 1907 0
 5766 0004 054B     		ldr	r3, .L629
 5767 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5768 0008 054C     		ldr	r4, .L629+4
 5769 000a 0094     		str	r4, [sp]
 5770 000c 6921     		movs	r1, #105
 5771 000e 0322     		movs	r2, #3
 5772 0010 0223     		movs	r3, #2
 5773 0012 FFF7FEFF 		bl	I2CReadBits
 5774              	.LVL327:
1908:mpu_9250.c    ****     return buffer[0];
1909:mpu_9250.c    **** }
 5775              		.loc 1 1909 0
 5776 0016 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 5777 0018 02B0     		add	sp, sp, #8
 5778              		.cfi_def_cfa_offset 8
 5779              		@ sp needed
 5780 001a 10BD     		pop	{r4, pc}
 5781              	.L630:
 5782              		.align	2
 5783              	.L629:
 5784 001c 00000000 		.word	devAddr
 5785 0020 00000000 		.word	buffer
 5786              		.cfi_endproc
 5787              	.LFE149:
 5788              		.size	MPU9250_getFreefallDetectionCounterDecrement, .-MPU9250_getFreefallDetectionCounterDecrement
 5789              		.section	.text.MPU9250_setFreefallDetectionCounterDecrement,"ax",%progbits
 5790              		.align	2
 5791              		.global	MPU9250_setFreefallDetectionCounterDecrement
 5792              		.thumb
 5793              		.thumb_func
 5794              		.type	MPU9250_setFreefallDetectionCounterDecrement, %function
 5795              	MPU9250_setFreefallDetectionCounterDecrement:
 5796              	.LFB150:
1910:mpu_9250.c    **** /** Set Free Fall detection counter decrement configuration.
1911:mpu_9250.c    ****  * @param decrement New decrement configuration value
1912:mpu_9250.c    ****  * @see getFreefallDetectionCounterDecrement()
1913:mpu_9250.c    ****  * @see MPU9250_RA_MOT_DETECT_CTRL
1914:mpu_9250.c    ****  * @see MPU9250_DETECT_FF_COUNT_BIT
1915:mpu_9250.c    ****  */
1916:mpu_9250.c    **** void MPU9250_setFreefallDetectionCounterDecrement(uint8_t decrement) {
 5797              		.loc 1 1916 0
 5798              		.cfi_startproc
 5799              		@ args = 0, pretend = 0, frame = 0
 5800              		@ frame_needed = 0, uses_anonymous_args = 0
 5801              	.LVL328:
 5802 0000 00B5     		push	{lr}
 5803              		.cfi_def_cfa_offset 4
 5804              		.cfi_offset 14, -4
 5805 0002 83B0     		sub	sp, sp, #12
 5806              		.cfi_def_cfa_offset 16
1917:mpu_9250.c    ****     I2CWriteBits(devAddr, MPU9250_RA_MOT_DETECT_CTRL, MPU9250_DETECT_FF_COUNT_BIT, MPU9250_DETECT_F
 5807              		.loc 1 1917 0
 5808 0004 054B     		ldr	r3, .L633
 5809 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5810 0008 0090     		str	r0, [sp]
 5811 000a 1846     		mov	r0, r3
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 137


 5812              	.LVL329:
 5813 000c 6921     		movs	r1, #105
 5814 000e 0322     		movs	r2, #3
 5815 0010 0223     		movs	r3, #2
 5816 0012 FFF7FEFF 		bl	I2CWriteBits
 5817              	.LVL330:
1918:mpu_9250.c    **** }
 5818              		.loc 1 1918 0
 5819 0016 03B0     		add	sp, sp, #12
 5820              		.cfi_def_cfa_offset 4
 5821              		@ sp needed
 5822 0018 5DF804FB 		ldr	pc, [sp], #4
 5823              	.L634:
 5824              		.align	2
 5825              	.L633:
 5826 001c 00000000 		.word	devAddr
 5827              		.cfi_endproc
 5828              	.LFE150:
 5829              		.size	MPU9250_setFreefallDetectionCounterDecrement, .-MPU9250_setFreefallDetectionCounterDecrement
 5830              		.section	.text.MPU9250_getMotionDetectionCounterDecrement,"ax",%progbits
 5831              		.align	2
 5832              		.global	MPU9250_getMotionDetectionCounterDecrement
 5833              		.thumb
 5834              		.thumb_func
 5835              		.type	MPU9250_getMotionDetectionCounterDecrement, %function
 5836              	MPU9250_getMotionDetectionCounterDecrement:
 5837              	.LFB151:
1919:mpu_9250.c    **** /** Get Motion detection counter decrement configuration.
1920:mpu_9250.c    ****  * Detection is registered by the Motion detection module after accelerometer
1921:mpu_9250.c    ****  * measurements meet their respective threshold conditions over a specified
1922:mpu_9250.c    ****  * number of samples. When the threshold conditions are met, the corresponding
1923:mpu_9250.c    ****  * detection counter increments by 1. The user may control the rate at which the
1924:mpu_9250.c    ****  * detection counter decrements when the threshold condition is not met by
1925:mpu_9250.c    ****  * configuring MOT_COUNT. The decrement rate can be set according to the
1926:mpu_9250.c    ****  * following table:
1927:mpu_9250.c    ****  *
1928:mpu_9250.c    ****  * <pre>
1929:mpu_9250.c    ****  * MOT_COUNT | Counter Decrement
1930:mpu_9250.c    ****  * ----------+------------------
1931:mpu_9250.c    ****  * 0         | Reset
1932:mpu_9250.c    ****  * 1         | 1
1933:mpu_9250.c    ****  * 2         | 2
1934:mpu_9250.c    ****  * 3         | 4
1935:mpu_9250.c    ****  * </pre>
1936:mpu_9250.c    ****  *
1937:mpu_9250.c    ****  * When MOT_COUNT is configured to 0 (reset), any non-qualifying sample will
1938:mpu_9250.c    ****  * reset the counter to 0. For further information on Motion detection,
1939:mpu_9250.c    ****  * please refer to Registers 29 to 32.
1940:mpu_9250.c    ****  *
1941:mpu_9250.c    ****  */
1942:mpu_9250.c    **** uint8_t MPU9250_getMotionDetectionCounterDecrement() {
 5838              		.loc 1 1942 0
 5839              		.cfi_startproc
 5840              		@ args = 0, pretend = 0, frame = 0
 5841              		@ frame_needed = 0, uses_anonymous_args = 0
 5842 0000 10B5     		push	{r4, lr}
 5843              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 138


 5844              		.cfi_offset 4, -8
 5845              		.cfi_offset 14, -4
 5846 0002 82B0     		sub	sp, sp, #8
 5847              		.cfi_def_cfa_offset 16
1943:mpu_9250.c    ****     I2CReadBits(devAddr, MPU9250_RA_MOT_DETECT_CTRL, MPU9250_DETECT_MOT_COUNT_BIT, MPU9250_DETECT_M
 5848              		.loc 1 1943 0
 5849 0004 054B     		ldr	r3, .L637
 5850 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5851 0008 054C     		ldr	r4, .L637+4
 5852 000a 0094     		str	r4, [sp]
 5853 000c 6921     		movs	r1, #105
 5854 000e 0122     		movs	r2, #1
 5855 0010 0223     		movs	r3, #2
 5856 0012 FFF7FEFF 		bl	I2CReadBits
 5857              	.LVL331:
1944:mpu_9250.c    ****     return buffer[0];
1945:mpu_9250.c    **** }
 5858              		.loc 1 1945 0
 5859 0016 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 5860 0018 02B0     		add	sp, sp, #8
 5861              		.cfi_def_cfa_offset 8
 5862              		@ sp needed
 5863 001a 10BD     		pop	{r4, pc}
 5864              	.L638:
 5865              		.align	2
 5866              	.L637:
 5867 001c 00000000 		.word	devAddr
 5868 0020 00000000 		.word	buffer
 5869              		.cfi_endproc
 5870              	.LFE151:
 5871              		.size	MPU9250_getMotionDetectionCounterDecrement, .-MPU9250_getMotionDetectionCounterDecrement
 5872              		.section	.text.MPU9250_setMotionDetectionCounterDecrement,"ax",%progbits
 5873              		.align	2
 5874              		.global	MPU9250_setMotionDetectionCounterDecrement
 5875              		.thumb
 5876              		.thumb_func
 5877              		.type	MPU9250_setMotionDetectionCounterDecrement, %function
 5878              	MPU9250_setMotionDetectionCounterDecrement:
 5879              	.LFB152:
1946:mpu_9250.c    **** /** Set Motion detection counter decrement configuration.
1947:mpu_9250.c    ****  * @param decrement New decrement configuration value
1948:mpu_9250.c    ****  * @see getMotionDetectionCounterDecrement()
1949:mpu_9250.c    ****  * @see MPU9250_RA_MOT_DETECT_CTRL
1950:mpu_9250.c    ****  * @see MPU9250_DETECT_MOT_COUNT_BIT
1951:mpu_9250.c    ****  */
1952:mpu_9250.c    **** void MPU9250_setMotionDetectionCounterDecrement(uint8_t decrement) {
 5880              		.loc 1 1952 0
 5881              		.cfi_startproc
 5882              		@ args = 0, pretend = 0, frame = 0
 5883              		@ frame_needed = 0, uses_anonymous_args = 0
 5884              	.LVL332:
 5885 0000 00B5     		push	{lr}
 5886              		.cfi_def_cfa_offset 4
 5887              		.cfi_offset 14, -4
 5888 0002 83B0     		sub	sp, sp, #12
 5889              		.cfi_def_cfa_offset 16
1953:mpu_9250.c    ****     I2CWriteBits(devAddr, MPU9250_RA_MOT_DETECT_CTRL, MPU9250_DETECT_MOT_COUNT_BIT, MPU9250_DETECT_
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 139


 5890              		.loc 1 1953 0
 5891 0004 054B     		ldr	r3, .L641
 5892 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5893 0008 0090     		str	r0, [sp]
 5894 000a 1846     		mov	r0, r3
 5895              	.LVL333:
 5896 000c 6921     		movs	r1, #105
 5897 000e 0122     		movs	r2, #1
 5898 0010 0223     		movs	r3, #2
 5899 0012 FFF7FEFF 		bl	I2CWriteBits
 5900              	.LVL334:
1954:mpu_9250.c    **** }
 5901              		.loc 1 1954 0
 5902 0016 03B0     		add	sp, sp, #12
 5903              		.cfi_def_cfa_offset 4
 5904              		@ sp needed
 5905 0018 5DF804FB 		ldr	pc, [sp], #4
 5906              	.L642:
 5907              		.align	2
 5908              	.L641:
 5909 001c 00000000 		.word	devAddr
 5910              		.cfi_endproc
 5911              	.LFE152:
 5912              		.size	MPU9250_setMotionDetectionCounterDecrement, .-MPU9250_setMotionDetectionCounterDecrement
 5913              		.section	.text.MPU9250_resetI2CMaster,"ax",%progbits
 5914              		.align	2
 5915              		.global	MPU9250_resetI2CMaster
 5916              		.thumb
 5917              		.thumb_func
 5918              		.type	MPU9250_resetI2CMaster, %function
 5919              	MPU9250_resetI2CMaster:
 5920              	.LFB153:
1955:mpu_9250.c    **** 
1956:mpu_9250.c    **** /** Reset the I2C Master.
1957:mpu_9250.c    ****  * This bit resets the I2C Master when set to 1 while I2C_MST_EN equals 0.
1958:mpu_9250.c    ****  * This bit automatically clears to 0 after the reset has been triggered.
1959:mpu_9250.c    ****  * @see MPU9250_RA_USER_CTRL
1960:mpu_9250.c    ****  * @see MPU9250_USERCTRL_I2C_MST_RESET_BIT
1961:mpu_9250.c    ****  */
1962:mpu_9250.c    **** void MPU9250_resetI2CMaster() {
 5921              		.loc 1 1962 0
 5922              		.cfi_startproc
 5923              		@ args = 0, pretend = 0, frame = 0
 5924              		@ frame_needed = 0, uses_anonymous_args = 0
 5925 0000 08B5     		push	{r3, lr}
 5926              		.cfi_def_cfa_offset 8
 5927              		.cfi_offset 3, -8
 5928              		.cfi_offset 14, -4
1963:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_USER_CTRL, MPU9250_USERCTRL_I2C_MST_RESET_BIT, true);
 5929              		.loc 1 1963 0
 5930 0002 044B     		ldr	r3, .L645
 5931 0004 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5932 0006 6A21     		movs	r1, #106
 5933 0008 0122     		movs	r2, #1
 5934 000a 1346     		mov	r3, r2
 5935 000c FFF7FEFF 		bl	I2CWriteBit
 5936              	.LVL335:
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 140


 5937 0010 08BD     		pop	{r3, pc}
 5938              	.L646:
 5939 0012 00BF     		.align	2
 5940              	.L645:
 5941 0014 00000000 		.word	devAddr
 5942              		.cfi_endproc
 5943              	.LFE153:
 5944              		.size	MPU9250_resetI2CMaster, .-MPU9250_resetI2CMaster
 5945              		.section	.text.MPU9250_resetSensors,"ax",%progbits
 5946              		.align	2
 5947              		.global	MPU9250_resetSensors
 5948              		.thumb
 5949              		.thumb_func
 5950              		.type	MPU9250_resetSensors, %function
 5951              	MPU9250_resetSensors:
 5952              	.LFB154:
1964:mpu_9250.c    **** }
1965:mpu_9250.c    **** /** Reset all sensor registers and signal paths.
1966:mpu_9250.c    ****  * When set to 1, this bit resets the signal paths for all sensors (gyroscopes,
1967:mpu_9250.c    ****  * accelerometers, and temperature sensor). This operation will also clear the
1968:mpu_9250.c    ****  * sensor registers. This bit automatically clears to 0 after the reset has been
1969:mpu_9250.c    ****  * triggered.
1970:mpu_9250.c    ****  *
1971:mpu_9250.c    ****  * When resetting only the signal path (and not the sensor registers), please
1972:mpu_9250.c    ****  * use Register 104, SIGNAL_PATH_RESET.
1973:mpu_9250.c    ****  *
1974:mpu_9250.c    ****  * @see MPU9250_RA_USER_CTRL
1975:mpu_9250.c    ****  * @see MPU9250_USERCTRL_SIG_COND_RESET_BIT
1976:mpu_9250.c    ****  */
1977:mpu_9250.c    **** void MPU9250_resetSensors() {
 5953              		.loc 1 1977 0
 5954              		.cfi_startproc
 5955              		@ args = 0, pretend = 0, frame = 0
 5956              		@ frame_needed = 0, uses_anonymous_args = 0
 5957 0000 08B5     		push	{r3, lr}
 5958              		.cfi_def_cfa_offset 8
 5959              		.cfi_offset 3, -8
 5960              		.cfi_offset 14, -4
1978:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_USER_CTRL, MPU9250_USERCTRL_SIG_COND_RESET_BIT, true);
 5961              		.loc 1 1978 0
 5962 0002 044B     		ldr	r3, .L649
 5963 0004 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5964 0006 6A21     		movs	r1, #106
 5965 0008 0022     		movs	r2, #0
 5966 000a 0123     		movs	r3, #1
 5967 000c FFF7FEFF 		bl	I2CWriteBit
 5968              	.LVL336:
 5969 0010 08BD     		pop	{r3, pc}
 5970              	.L650:
 5971 0012 00BF     		.align	2
 5972              	.L649:
 5973 0014 00000000 		.word	devAddr
 5974              		.cfi_endproc
 5975              	.LFE154:
 5976              		.size	MPU9250_resetSensors, .-MPU9250_resetSensors
 5977              		.section	.text.MPU9250_reset,"ax",%progbits
 5978              		.align	2
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 141


 5979              		.global	MPU9250_reset
 5980              		.thumb
 5981              		.thumb_func
 5982              		.type	MPU9250_reset, %function
 5983              	MPU9250_reset:
 5984              	.LFB155:
1979:mpu_9250.c    **** }
1980:mpu_9250.c    **** 
1981:mpu_9250.c    **** // PWR_MGMT_1 register
1982:mpu_9250.c    **** 
1983:mpu_9250.c    **** /** Trigger a full device reset.
1984:mpu_9250.c    ****  * A small delay of ~50ms may be desirable after triggering a reset.
1985:mpu_9250.c    ****  * @see MPU9250_RA_PWR_MGMT_1
1986:mpu_9250.c    ****  * @see MPU9250_PWR1_DEVICE_RESET_BIT
1987:mpu_9250.c    ****  */
1988:mpu_9250.c    **** void MPU9250_reset() {
 5985              		.loc 1 1988 0
 5986              		.cfi_startproc
 5987              		@ args = 0, pretend = 0, frame = 0
 5988              		@ frame_needed = 0, uses_anonymous_args = 0
 5989 0000 08B5     		push	{r3, lr}
 5990              		.cfi_def_cfa_offset 8
 5991              		.cfi_offset 3, -8
 5992              		.cfi_offset 14, -4
1989:mpu_9250.c    **** 	//todo consider writing byte 0x80 without reading the register before since it is reset anyways
1990:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_PWR_MGMT_1, MPU9250_PWR1_DEVICE_RESET_BIT, true);
 5993              		.loc 1 1990 0
 5994 0002 044B     		ldr	r3, .L653
 5995 0004 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5996 0006 6B21     		movs	r1, #107
 5997 0008 0722     		movs	r2, #7
 5998 000a 0123     		movs	r3, #1
 5999 000c FFF7FEFF 		bl	I2CWriteBit
 6000              	.LVL337:
 6001 0010 08BD     		pop	{r3, pc}
 6002              	.L654:
 6003 0012 00BF     		.align	2
 6004              	.L653:
 6005 0014 00000000 		.word	devAddr
 6006              		.cfi_endproc
 6007              	.LFE155:
 6008              		.size	MPU9250_reset, .-MPU9250_reset
 6009              		.section	.text.MPU9250_getSleepEnabled,"ax",%progbits
 6010              		.align	2
 6011              		.global	MPU9250_getSleepEnabled
 6012              		.thumb
 6013              		.thumb_func
 6014              		.type	MPU9250_getSleepEnabled, %function
 6015              	MPU9250_getSleepEnabled:
 6016              	.LFB156:
1991:mpu_9250.c    **** }
1992:mpu_9250.c    **** /** Get sleep mode status.
1993:mpu_9250.c    ****  * Setting the SLEEP bit in the register puts the device into very low power
1994:mpu_9250.c    ****  * sleep mode. In this mode, only the serial interface and internal registers
1995:mpu_9250.c    ****  * remain active, allowing for a very low standby current. Clearing this bit
1996:mpu_9250.c    ****  * puts the device back into normal mode. To save power, the individual standby
1997:mpu_9250.c    ****  * selections for each of the gyros should be used if any gyro axis is not used
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 142


1998:mpu_9250.c    ****  * by the application.
1999:mpu_9250.c    ****  * @return Current sleep mode enabled status
2000:mpu_9250.c    ****  * @see MPU9250_RA_PWR_MGMT_1
2001:mpu_9250.c    ****  * @see MPU9250_PWR1_SLEEP_BIT
2002:mpu_9250.c    ****  */
2003:mpu_9250.c    **** bool MPU9250_getSleepEnabled() {
 6017              		.loc 1 2003 0
 6018              		.cfi_startproc
 6019              		@ args = 0, pretend = 0, frame = 0
 6020              		@ frame_needed = 0, uses_anonymous_args = 0
 6021 0000 10B5     		push	{r4, lr}
 6022              		.cfi_def_cfa_offset 8
 6023              		.cfi_offset 4, -8
 6024              		.cfi_offset 14, -4
2004:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_PWR_MGMT_1, MPU9250_PWR1_SLEEP_BIT, buffer);
 6025              		.loc 1 2004 0
 6026 0002 064C     		ldr	r4, .L657
 6027 0004 064B     		ldr	r3, .L657+4
 6028 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6029 0008 6B21     		movs	r1, #107
 6030 000a 0622     		movs	r2, #6
 6031 000c 2346     		mov	r3, r4
 6032 000e FFF7FEFF 		bl	I2CReadBit
 6033              	.LVL338:
2005:mpu_9250.c    ****     return buffer[0];
 6034              		.loc 1 2005 0
 6035 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
2006:mpu_9250.c    **** }
 6036              		.loc 1 2006 0
 6037 0014 0030     		adds	r0, r0, #0
 6038 0016 18BF     		it	ne
 6039 0018 0120     		movne	r0, #1
 6040 001a 10BD     		pop	{r4, pc}
 6041              	.L658:
 6042              		.align	2
 6043              	.L657:
 6044 001c 00000000 		.word	buffer
 6045 0020 00000000 		.word	devAddr
 6046              		.cfi_endproc
 6047              	.LFE156:
 6048              		.size	MPU9250_getSleepEnabled, .-MPU9250_getSleepEnabled
 6049              		.section	.text.MPU9250_setSleepEnabled,"ax",%progbits
 6050              		.align	2
 6051              		.global	MPU9250_setSleepEnabled
 6052              		.thumb
 6053              		.thumb_func
 6054              		.type	MPU9250_setSleepEnabled, %function
 6055              	MPU9250_setSleepEnabled:
 6056              	.LFB157:
2007:mpu_9250.c    **** /** Set sleep mode status.
2008:mpu_9250.c    ****  * @param enabled New sleep mode enabled status
2009:mpu_9250.c    ****  * @see getSleepEnabled()
2010:mpu_9250.c    ****  * @see MPU9250_RA_PWR_MGMT_1
2011:mpu_9250.c    ****  * @see MPU9250_PWR1_SLEEP_BIT
2012:mpu_9250.c    ****  */
2013:mpu_9250.c    **** void MPU9250_setSleepEnabled(bool enabled) {
 6057              		.loc 1 2013 0
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 143


 6058              		.cfi_startproc
 6059              		@ args = 0, pretend = 0, frame = 0
 6060              		@ frame_needed = 0, uses_anonymous_args = 0
 6061              	.LVL339:
 6062 0000 08B5     		push	{r3, lr}
 6063              		.cfi_def_cfa_offset 8
 6064              		.cfi_offset 3, -8
 6065              		.cfi_offset 14, -4
 6066 0002 0346     		mov	r3, r0
2014:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_PWR_MGMT_1, MPU9250_PWR1_SLEEP_BIT, enabled);
 6067              		.loc 1 2014 0
 6068 0004 034A     		ldr	r2, .L661
 6069 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 6070              	.LVL340:
 6071 0008 6B21     		movs	r1, #107
 6072 000a 0622     		movs	r2, #6
 6073 000c FFF7FEFF 		bl	I2CWriteBit
 6074              	.LVL341:
 6075 0010 08BD     		pop	{r3, pc}
 6076              	.L662:
 6077 0012 00BF     		.align	2
 6078              	.L661:
 6079 0014 00000000 		.word	devAddr
 6080              		.cfi_endproc
 6081              	.LFE157:
 6082              		.size	MPU9250_setSleepEnabled, .-MPU9250_setSleepEnabled
 6083              		.section	.text.MPU9250_getWakeCycleEnabled,"ax",%progbits
 6084              		.align	2
 6085              		.global	MPU9250_getWakeCycleEnabled
 6086              		.thumb
 6087              		.thumb_func
 6088              		.type	MPU9250_getWakeCycleEnabled, %function
 6089              	MPU9250_getWakeCycleEnabled:
 6090              	.LFB158:
2015:mpu_9250.c    **** }
2016:mpu_9250.c    **** /** Get wake cycle enabled status.
2017:mpu_9250.c    ****  * When this bit is set to 1 and SLEEP is disabled, the MPU-60X0 will cycle
2018:mpu_9250.c    ****  * between sleep mode and waking up to take a single sample of data from active
2019:mpu_9250.c    ****  * sensors at a rate determined by LP_WAKE_CTRL (register 108).
2020:mpu_9250.c    ****  * @return Current sleep mode enabled status
2021:mpu_9250.c    ****  * @see MPU9250_RA_PWR_MGMT_1
2022:mpu_9250.c    ****  * @see MPU9250_PWR1_CYCLE_BIT
2023:mpu_9250.c    ****  */
2024:mpu_9250.c    **** bool MPU9250_getWakeCycleEnabled() {
 6091              		.loc 1 2024 0
 6092              		.cfi_startproc
 6093              		@ args = 0, pretend = 0, frame = 0
 6094              		@ frame_needed = 0, uses_anonymous_args = 0
 6095 0000 10B5     		push	{r4, lr}
 6096              		.cfi_def_cfa_offset 8
 6097              		.cfi_offset 4, -8
 6098              		.cfi_offset 14, -4
2025:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_PWR_MGMT_1, MPU9250_PWR1_CYCLE_BIT, buffer);
 6099              		.loc 1 2025 0
 6100 0002 064C     		ldr	r4, .L665
 6101 0004 064B     		ldr	r3, .L665+4
 6102 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 144


 6103 0008 6B21     		movs	r1, #107
 6104 000a 0522     		movs	r2, #5
 6105 000c 2346     		mov	r3, r4
 6106 000e FFF7FEFF 		bl	I2CReadBit
 6107              	.LVL342:
2026:mpu_9250.c    ****     return buffer[0];
 6108              		.loc 1 2026 0
 6109 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
2027:mpu_9250.c    **** }
 6110              		.loc 1 2027 0
 6111 0014 0030     		adds	r0, r0, #0
 6112 0016 18BF     		it	ne
 6113 0018 0120     		movne	r0, #1
 6114 001a 10BD     		pop	{r4, pc}
 6115              	.L666:
 6116              		.align	2
 6117              	.L665:
 6118 001c 00000000 		.word	buffer
 6119 0020 00000000 		.word	devAddr
 6120              		.cfi_endproc
 6121              	.LFE158:
 6122              		.size	MPU9250_getWakeCycleEnabled, .-MPU9250_getWakeCycleEnabled
 6123              		.section	.text.MPU9250_setWakeCycleEnabled,"ax",%progbits
 6124              		.align	2
 6125              		.global	MPU9250_setWakeCycleEnabled
 6126              		.thumb
 6127              		.thumb_func
 6128              		.type	MPU9250_setWakeCycleEnabled, %function
 6129              	MPU9250_setWakeCycleEnabled:
 6130              	.LFB159:
2028:mpu_9250.c    **** /** Set wake cycle enabled status.
2029:mpu_9250.c    ****  * @param enabled New sleep mode enabled status
2030:mpu_9250.c    ****  * @see getWakeCycleEnabled()
2031:mpu_9250.c    ****  * @see MPU9250_RA_PWR_MGMT_1
2032:mpu_9250.c    ****  * @see MPU9250_PWR1_CYCLE_BIT
2033:mpu_9250.c    ****  */
2034:mpu_9250.c    **** void MPU9250_setWakeCycleEnabled(bool enabled) {
 6131              		.loc 1 2034 0
 6132              		.cfi_startproc
 6133              		@ args = 0, pretend = 0, frame = 0
 6134              		@ frame_needed = 0, uses_anonymous_args = 0
 6135              	.LVL343:
 6136 0000 08B5     		push	{r3, lr}
 6137              		.cfi_def_cfa_offset 8
 6138              		.cfi_offset 3, -8
 6139              		.cfi_offset 14, -4
 6140 0002 0346     		mov	r3, r0
2035:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_PWR_MGMT_1, MPU9250_PWR1_CYCLE_BIT, enabled);
 6141              		.loc 1 2035 0
 6142 0004 034A     		ldr	r2, .L669
 6143 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 6144              	.LVL344:
 6145 0008 6B21     		movs	r1, #107
 6146 000a 0522     		movs	r2, #5
 6147 000c FFF7FEFF 		bl	I2CWriteBit
 6148              	.LVL345:
 6149 0010 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 145


 6150              	.L670:
 6151 0012 00BF     		.align	2
 6152              	.L669:
 6153 0014 00000000 		.word	devAddr
 6154              		.cfi_endproc
 6155              	.LFE159:
 6156              		.size	MPU9250_setWakeCycleEnabled, .-MPU9250_setWakeCycleEnabled
 6157              		.section	.text.MPU9250_getTempSensorEnabled,"ax",%progbits
 6158              		.align	2
 6159              		.global	MPU9250_getTempSensorEnabled
 6160              		.thumb
 6161              		.thumb_func
 6162              		.type	MPU9250_getTempSensorEnabled, %function
 6163              	MPU9250_getTempSensorEnabled:
 6164              	.LFB160:
2036:mpu_9250.c    **** }
2037:mpu_9250.c    **** /** Get temperature sensor enabled status.
2038:mpu_9250.c    ****  * Control the usage of the internal temperature sensor.
2039:mpu_9250.c    ****  *
2040:mpu_9250.c    ****  * Note: this register stores the *disabled* value, but for consistency with the
2041:mpu_9250.c    ****  * rest of the code, the function is named and used with standard true/false
2042:mpu_9250.c    ****  * values to indicate whether the sensor is enabled or disabled, respectively.
2043:mpu_9250.c    ****  *
2044:mpu_9250.c    ****  * @return Current temperature sensor enabled status
2045:mpu_9250.c    ****  * @see MPU9250_RA_PWR_MGMT_1
2046:mpu_9250.c    ****  * @see MPU9250_PWR1_TEMP_DIS_BIT
2047:mpu_9250.c    ****  */
2048:mpu_9250.c    **** bool MPU9250_getTempSensorEnabled() {
 6165              		.loc 1 2048 0
 6166              		.cfi_startproc
 6167              		@ args = 0, pretend = 0, frame = 0
 6168              		@ frame_needed = 0, uses_anonymous_args = 0
 6169 0000 10B5     		push	{r4, lr}
 6170              		.cfi_def_cfa_offset 8
 6171              		.cfi_offset 4, -8
 6172              		.cfi_offset 14, -4
2049:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_PWR_MGMT_1, MPU9250_PWR1_TEMP_DIS_BIT, buffer);
 6173              		.loc 1 2049 0
 6174 0002 064C     		ldr	r4, .L673
 6175 0004 064B     		ldr	r3, .L673+4
 6176 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6177 0008 6B21     		movs	r1, #107
 6178 000a 0322     		movs	r2, #3
 6179 000c 2346     		mov	r3, r4
 6180 000e FFF7FEFF 		bl	I2CReadBit
 6181              	.LVL346:
2050:mpu_9250.c    ****     return buffer[0] == 0; // 1 is actually disabled here
 6182              		.loc 1 2050 0
 6183 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
2051:mpu_9250.c    **** }
 6184              		.loc 1 2051 0
 6185 0014 B0FA80F0 		clz	r0, r0
 6186 0018 4009     		lsrs	r0, r0, #5
 6187 001a 10BD     		pop	{r4, pc}
 6188              	.L674:
 6189              		.align	2
 6190              	.L673:
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 146


 6191 001c 00000000 		.word	buffer
 6192 0020 00000000 		.word	devAddr
 6193              		.cfi_endproc
 6194              	.LFE160:
 6195              		.size	MPU9250_getTempSensorEnabled, .-MPU9250_getTempSensorEnabled
 6196              		.section	.text.MPU9250_setTempSensorEnabled,"ax",%progbits
 6197              		.align	2
 6198              		.global	MPU9250_setTempSensorEnabled
 6199              		.thumb
 6200              		.thumb_func
 6201              		.type	MPU9250_setTempSensorEnabled, %function
 6202              	MPU9250_setTempSensorEnabled:
 6203              	.LFB161:
2052:mpu_9250.c    **** /** Set temperature sensor enabled status.
2053:mpu_9250.c    ****  * Note: this register stores the *disabled* value, but for consistency with the
2054:mpu_9250.c    ****  * rest of the code, the function is named and used with standard true/false
2055:mpu_9250.c    ****  * values to indicate whether the sensor is enabled or disabled, respectively.
2056:mpu_9250.c    ****  *
2057:mpu_9250.c    ****  * @param enabled New temperature sensor enabled status
2058:mpu_9250.c    ****  * @see getTempSensorEnabled()
2059:mpu_9250.c    ****  * @see MPU9250_RA_PWR_MGMT_1
2060:mpu_9250.c    ****  * @see MPU9250_PWR1_TEMP_DIS_BIT
2061:mpu_9250.c    ****  */
2062:mpu_9250.c    **** void MPU9250_setTempSensorEnabled(bool enabled) {
 6204              		.loc 1 2062 0
 6205              		.cfi_startproc
 6206              		@ args = 0, pretend = 0, frame = 0
 6207              		@ frame_needed = 0, uses_anonymous_args = 0
 6208              	.LVL347:
 6209 0000 08B5     		push	{r3, lr}
 6210              		.cfi_def_cfa_offset 8
 6211              		.cfi_offset 3, -8
 6212              		.cfi_offset 14, -4
2063:mpu_9250.c    ****     // 1 is actually disabled here
2064:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_PWR_MGMT_1, MPU9250_PWR1_TEMP_DIS_BIT, !enabled);
 6213              		.loc 1 2064 0
 6214 0002 80F00103 		eor	r3, r0, #1
 6215 0006 034A     		ldr	r2, .L677
 6216 0008 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 6217              	.LVL348:
 6218 000a 6B21     		movs	r1, #107
 6219 000c 0322     		movs	r2, #3
 6220 000e FFF7FEFF 		bl	I2CWriteBit
 6221              	.LVL349:
 6222 0012 08BD     		pop	{r3, pc}
 6223              	.L678:
 6224              		.align	2
 6225              	.L677:
 6226 0014 00000000 		.word	devAddr
 6227              		.cfi_endproc
 6228              	.LFE161:
 6229              		.size	MPU9250_setTempSensorEnabled, .-MPU9250_setTempSensorEnabled
 6230              		.section	.text.MPU9250_getClockSource,"ax",%progbits
 6231              		.align	2
 6232              		.global	MPU9250_getClockSource
 6233              		.thumb
 6234              		.thumb_func
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 147


 6235              		.type	MPU9250_getClockSource, %function
 6236              	MPU9250_getClockSource:
 6237              	.LFB162:
2065:mpu_9250.c    **** }
2066:mpu_9250.c    **** /** Get clock source setting.
2067:mpu_9250.c    ****  * @return Current clock source setting
2068:mpu_9250.c    ****  * @see MPU9250_RA_PWR_MGMT_1
2069:mpu_9250.c    ****  * @see MPU9250_PWR1_CLKSEL_BIT
2070:mpu_9250.c    ****  * @see MPU9250_PWR1_CLKSEL_LENGTH
2071:mpu_9250.c    ****  */
2072:mpu_9250.c    **** uint8_t MPU9250_getClockSource() {
 6238              		.loc 1 2072 0
 6239              		.cfi_startproc
 6240              		@ args = 0, pretend = 0, frame = 0
 6241              		@ frame_needed = 0, uses_anonymous_args = 0
 6242 0000 10B5     		push	{r4, lr}
 6243              		.cfi_def_cfa_offset 8
 6244              		.cfi_offset 4, -8
 6245              		.cfi_offset 14, -4
 6246 0002 82B0     		sub	sp, sp, #8
 6247              		.cfi_def_cfa_offset 16
2073:mpu_9250.c    ****     I2CReadBits(devAddr, MPU9250_RA_PWR_MGMT_1, MPU9250_PWR1_CLKSEL_BIT, MPU9250_PWR1_CLKSEL_LENGTH
 6248              		.loc 1 2073 0
 6249 0004 054B     		ldr	r3, .L681
 6250 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6251 0008 054C     		ldr	r4, .L681+4
 6252 000a 0094     		str	r4, [sp]
 6253 000c 6B21     		movs	r1, #107
 6254 000e 0222     		movs	r2, #2
 6255 0010 0323     		movs	r3, #3
 6256 0012 FFF7FEFF 		bl	I2CReadBits
 6257              	.LVL350:
2074:mpu_9250.c    ****     return buffer[0];
2075:mpu_9250.c    **** }
 6258              		.loc 1 2075 0
 6259 0016 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 6260 0018 02B0     		add	sp, sp, #8
 6261              		.cfi_def_cfa_offset 8
 6262              		@ sp needed
 6263 001a 10BD     		pop	{r4, pc}
 6264              	.L682:
 6265              		.align	2
 6266              	.L681:
 6267 001c 00000000 		.word	devAddr
 6268 0020 00000000 		.word	buffer
 6269              		.cfi_endproc
 6270              	.LFE162:
 6271              		.size	MPU9250_getClockSource, .-MPU9250_getClockSource
 6272              		.section	.text.MPU9250_setClockSource,"ax",%progbits
 6273              		.align	2
 6274              		.global	MPU9250_setClockSource
 6275              		.thumb
 6276              		.thumb_func
 6277              		.type	MPU9250_setClockSource, %function
 6278              	MPU9250_setClockSource:
 6279              	.LFB163:
2076:mpu_9250.c    **** /** Set clock source setting.
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 148


2077:mpu_9250.c    ****  * An internal 8MHz oscillator, gyroscope based clock, or external sources can
2078:mpu_9250.c    ****  * be selected as the MPU-60X0 clock source. When the internal 8 MHz oscillator
2079:mpu_9250.c    ****  * or an external source is chosen as the clock source, the MPU-60X0 can operate
2080:mpu_9250.c    ****  * in low power modes with the gyroscopes disabled.
2081:mpu_9250.c    ****  *
2082:mpu_9250.c    ****  * Upon power up, the MPU-60X0 clock source defaults to the internal oscillator.
2083:mpu_9250.c    ****  * However, it is highly recommended that the device be configured to use one of
2084:mpu_9250.c    ****  * the gyroscopes (or an external clock source) as the clock reference for
2085:mpu_9250.c    ****  * improved stability. The clock source can be selected according to the following table:
2086:mpu_9250.c    ****  *
2087:mpu_9250.c    ****  * <pre>
2088:mpu_9250.c    ****  * CLK_SEL | Clock Source
2089:mpu_9250.c    ****  * --------+--------------------------------------
2090:mpu_9250.c    ****  * 0       | Internal oscillator
2091:mpu_9250.c    ****  * 1       | PLL with X Gyro reference
2092:mpu_9250.c    ****  * 2       | PLL with Y Gyro reference
2093:mpu_9250.c    ****  * 3       | PLL with Z Gyro reference
2094:mpu_9250.c    ****  * 4       | PLL with external 32.768kHz reference
2095:mpu_9250.c    ****  * 5       | PLL with external 19.2MHz reference
2096:mpu_9250.c    ****  * 6       | Reserved
2097:mpu_9250.c    ****  * 7       | Stops the clock and keeps the timing generator in reset
2098:mpu_9250.c    ****  * </pre>
2099:mpu_9250.c    ****  *
2100:mpu_9250.c    ****  * @param source New clock source setting
2101:mpu_9250.c    ****  * @see getClockSource()
2102:mpu_9250.c    ****  * @see MPU9250_RA_PWR_MGMT_1
2103:mpu_9250.c    ****  * @see MPU9250_PWR1_CLKSEL_BIT
2104:mpu_9250.c    ****  * @see MPU9250_PWR1_CLKSEL_LENGTH
2105:mpu_9250.c    ****  */
2106:mpu_9250.c    **** void MPU9250_setClockSource(uint8_t source) {
 6280              		.loc 1 2106 0
 6281              		.cfi_startproc
 6282              		@ args = 0, pretend = 0, frame = 0
 6283              		@ frame_needed = 0, uses_anonymous_args = 0
 6284              	.LVL351:
 6285 0000 00B5     		push	{lr}
 6286              		.cfi_def_cfa_offset 4
 6287              		.cfi_offset 14, -4
 6288 0002 83B0     		sub	sp, sp, #12
 6289              		.cfi_def_cfa_offset 16
2107:mpu_9250.c    ****     I2CWriteBits(devAddr, MPU9250_RA_PWR_MGMT_1, MPU9250_PWR1_CLKSEL_BIT, MPU9250_PWR1_CLKSEL_LENGT
 6290              		.loc 1 2107 0
 6291 0004 054B     		ldr	r3, .L685
 6292 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6293 0008 0090     		str	r0, [sp]
 6294 000a 1846     		mov	r0, r3
 6295              	.LVL352:
 6296 000c 6B21     		movs	r1, #107
 6297 000e 0222     		movs	r2, #2
 6298 0010 0323     		movs	r3, #3
 6299 0012 FFF7FEFF 		bl	I2CWriteBits
 6300              	.LVL353:
2108:mpu_9250.c    **** }
 6301              		.loc 1 2108 0
 6302 0016 03B0     		add	sp, sp, #12
 6303              		.cfi_def_cfa_offset 4
 6304              		@ sp needed
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 149


 6305 0018 5DF804FB 		ldr	pc, [sp], #4
 6306              	.L686:
 6307              		.align	2
 6308              	.L685:
 6309 001c 00000000 		.word	devAddr
 6310              		.cfi_endproc
 6311              	.LFE163:
 6312              		.size	MPU9250_setClockSource, .-MPU9250_setClockSource
 6313              		.section	.text.MPU9250_initialize,"ax",%progbits
 6314              		.align	2
 6315              		.global	MPU9250_initialize
 6316              		.thumb
 6317              		.thumb_func
 6318              		.type	MPU9250_initialize, %function
 6319              	MPU9250_initialize:
 6320              	.LFB2:
  67:mpu_9250.c    ****     MPU9250_setClockSource(MPU9250_CLOCK_PLL_XGYRO);
 6321              		.loc 1 67 0
 6322              		.cfi_startproc
 6323              		@ args = 0, pretend = 0, frame = 0
 6324              		@ frame_needed = 0, uses_anonymous_args = 0
 6325 0000 08B5     		push	{r3, lr}
 6326              		.cfi_def_cfa_offset 8
 6327              		.cfi_offset 3, -8
 6328              		.cfi_offset 14, -4
  68:mpu_9250.c    ****     I2CWriteByte(devAddr, MPU9250_RA_INT_PIN_CFG, 0x02); 
 6329              		.loc 1 68 0
 6330 0002 0120     		movs	r0, #1
 6331 0004 FFF7FEFF 		bl	MPU9250_setClockSource
 6332              	.LVL354:
  69:mpu_9250.c    ****     MPU9250_setFullScaleGyroRange(MPU9250_GYRO_FS_250);
 6333              		.loc 1 69 0
 6334 0008 074B     		ldr	r3, .L689
 6335 000a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6336 000c 3721     		movs	r1, #55
 6337 000e 0222     		movs	r2, #2
 6338 0010 FFF7FEFF 		bl	I2CWriteByte
 6339              	.LVL355:
  70:mpu_9250.c    ****     MPU9250_setFullScaleAccelRange(MPU9250_ACCEL_FS_2);
 6340              		.loc 1 70 0
 6341 0014 0020     		movs	r0, #0
 6342 0016 FFF7FEFF 		bl	MPU9250_setFullScaleGyroRange
 6343              	.LVL356:
  71:mpu_9250.c    ****     MPU9250_setSleepEnabled(false); // thanks to Jack Elston for pointing this one out!
 6344              		.loc 1 71 0
 6345 001a 0020     		movs	r0, #0
 6346 001c FFF7FEFF 		bl	MPU9250_setFullScaleAccelRange
 6347              	.LVL357:
  72:mpu_9250.c    **** }
 6348              		.loc 1 72 0
 6349 0020 0020     		movs	r0, #0
 6350 0022 FFF7FEFF 		bl	MPU9250_setSleepEnabled
 6351              	.LVL358:
 6352 0026 08BD     		pop	{r3, pc}
 6353              	.L690:
 6354              		.align	2
 6355              	.L689:
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 150


 6356 0028 00000000 		.word	devAddr
 6357              		.cfi_endproc
 6358              	.LFE2:
 6359              		.size	MPU9250_initialize, .-MPU9250_initialize
 6360              		.section	.text.MPU9250_getWakeFrequency,"ax",%progbits
 6361              		.align	2
 6362              		.global	MPU9250_getWakeFrequency
 6363              		.thumb
 6364              		.thumb_func
 6365              		.type	MPU9250_getWakeFrequency, %function
 6366              	MPU9250_getWakeFrequency:
 6367              	.LFB164:
2109:mpu_9250.c    **** 
2110:mpu_9250.c    **** // PWR_MGMT_2 register
2111:mpu_9250.c    **** 
2112:mpu_9250.c    **** /** Get wake frequency in Accel-Only Low Power Mode.
2113:mpu_9250.c    ****  * The MPU-60X0 can be put into Accerlerometer Only Low Power Mode by setting
2114:mpu_9250.c    ****  * PWRSEL to 1 in the Power Management 1 register (Register 107). In this mode,
2115:mpu_9250.c    ****  * the device will power off all devices except for the primary I2C interface,
2116:mpu_9250.c    ****  * waking only the accelerometer at fixed intervals to take a single
2117:mpu_9250.c    ****  * measurement. The frequency of wake-ups can be configured with LP_WAKE_CTRL
2118:mpu_9250.c    ****  * as shown below:
2119:mpu_9250.c    ****  *
2120:mpu_9250.c    ****  * <pre>
2121:mpu_9250.c    ****  * LP_WAKE_CTRL | Wake-up Frequency
2122:mpu_9250.c    ****  * -------------+------------------
2123:mpu_9250.c    ****  * 0            | 1.25 Hz
2124:mpu_9250.c    ****  * 1            | 2.5 Hz
2125:mpu_9250.c    ****  * 2            | 5 Hz
2126:mpu_9250.c    ****  * 3            | 10 Hz
2127:mpu_9250.c    ****  * <pre>
2128:mpu_9250.c    ****  *
2129:mpu_9250.c    ****  * For further information regarding the MPU-60X0's power modes, please refer to
2130:mpu_9250.c    ****  * Register 107.
2131:mpu_9250.c    ****  *
2132:mpu_9250.c    ****  * @return Current wake frequency
2133:mpu_9250.c    ****  * @see MPU9250_RA_PWR_MGMT_2
2134:mpu_9250.c    ****  */
2135:mpu_9250.c    **** uint8_t MPU9250_getWakeFrequency() {
 6368              		.loc 1 2135 0
 6369              		.cfi_startproc
 6370              		@ args = 0, pretend = 0, frame = 0
 6371              		@ frame_needed = 0, uses_anonymous_args = 0
 6372 0000 10B5     		push	{r4, lr}
 6373              		.cfi_def_cfa_offset 8
 6374              		.cfi_offset 4, -8
 6375              		.cfi_offset 14, -4
 6376 0002 82B0     		sub	sp, sp, #8
 6377              		.cfi_def_cfa_offset 16
2136:mpu_9250.c    ****     I2CReadBits(devAddr, MPU9250_RA_PWR_MGMT_2, MPU9250_PWR2_LP_WAKE_CTRL_BIT, MPU9250_PWR2_LP_WAKE
 6378              		.loc 1 2136 0
 6379 0004 054B     		ldr	r3, .L693
 6380 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6381 0008 054C     		ldr	r4, .L693+4
 6382 000a 0094     		str	r4, [sp]
 6383 000c 6C21     		movs	r1, #108
 6384 000e 0722     		movs	r2, #7
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 151


 6385 0010 0223     		movs	r3, #2
 6386 0012 FFF7FEFF 		bl	I2CReadBits
 6387              	.LVL359:
2137:mpu_9250.c    ****     return buffer[0];
2138:mpu_9250.c    **** }
 6388              		.loc 1 2138 0
 6389 0016 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 6390 0018 02B0     		add	sp, sp, #8
 6391              		.cfi_def_cfa_offset 8
 6392              		@ sp needed
 6393 001a 10BD     		pop	{r4, pc}
 6394              	.L694:
 6395              		.align	2
 6396              	.L693:
 6397 001c 00000000 		.word	devAddr
 6398 0020 00000000 		.word	buffer
 6399              		.cfi_endproc
 6400              	.LFE164:
 6401              		.size	MPU9250_getWakeFrequency, .-MPU9250_getWakeFrequency
 6402              		.section	.text.MPU9250_setWakeFrequency,"ax",%progbits
 6403              		.align	2
 6404              		.global	MPU9250_setWakeFrequency
 6405              		.thumb
 6406              		.thumb_func
 6407              		.type	MPU9250_setWakeFrequency, %function
 6408              	MPU9250_setWakeFrequency:
 6409              	.LFB165:
2139:mpu_9250.c    **** /** Set wake frequency in Accel-Only Low Power Mode.
2140:mpu_9250.c    ****  * @param frequency New wake frequency
2141:mpu_9250.c    ****  * @see MPU9250_RA_PWR_MGMT_2
2142:mpu_9250.c    ****  */
2143:mpu_9250.c    **** void MPU9250_setWakeFrequency(uint8_t frequency) {
 6410              		.loc 1 2143 0
 6411              		.cfi_startproc
 6412              		@ args = 0, pretend = 0, frame = 0
 6413              		@ frame_needed = 0, uses_anonymous_args = 0
 6414              	.LVL360:
 6415 0000 00B5     		push	{lr}
 6416              		.cfi_def_cfa_offset 4
 6417              		.cfi_offset 14, -4
 6418 0002 83B0     		sub	sp, sp, #12
 6419              		.cfi_def_cfa_offset 16
2144:mpu_9250.c    ****     I2CWriteBits(devAddr, MPU9250_RA_PWR_MGMT_2, MPU9250_PWR2_LP_WAKE_CTRL_BIT, MPU9250_PWR2_LP_WAK
 6420              		.loc 1 2144 0
 6421 0004 054B     		ldr	r3, .L697
 6422 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6423 0008 0090     		str	r0, [sp]
 6424 000a 1846     		mov	r0, r3
 6425              	.LVL361:
 6426 000c 6C21     		movs	r1, #108
 6427 000e 0722     		movs	r2, #7
 6428 0010 0223     		movs	r3, #2
 6429 0012 FFF7FEFF 		bl	I2CWriteBits
 6430              	.LVL362:
2145:mpu_9250.c    **** }
 6431              		.loc 1 2145 0
 6432 0016 03B0     		add	sp, sp, #12
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 152


 6433              		.cfi_def_cfa_offset 4
 6434              		@ sp needed
 6435 0018 5DF804FB 		ldr	pc, [sp], #4
 6436              	.L698:
 6437              		.align	2
 6438              	.L697:
 6439 001c 00000000 		.word	devAddr
 6440              		.cfi_endproc
 6441              	.LFE165:
 6442              		.size	MPU9250_setWakeFrequency, .-MPU9250_setWakeFrequency
 6443              		.section	.text.MPU9250_getStandbyXAccelEnabled,"ax",%progbits
 6444              		.align	2
 6445              		.global	MPU9250_getStandbyXAccelEnabled
 6446              		.thumb
 6447              		.thumb_func
 6448              		.type	MPU9250_getStandbyXAccelEnabled, %function
 6449              	MPU9250_getStandbyXAccelEnabled:
 6450              	.LFB166:
2146:mpu_9250.c    **** 
2147:mpu_9250.c    **** /** Get X-axis accelerometer standby enabled status.
2148:mpu_9250.c    ****  * If enabled, the X-axis will not gather or report data (or use power).
2149:mpu_9250.c    ****  * @return Current X-axis standby enabled status
2150:mpu_9250.c    ****  * @see MPU9250_RA_PWR_MGMT_2
2151:mpu_9250.c    ****  * @see MPU9250_PWR2_STBY_XA_BIT
2152:mpu_9250.c    ****  */
2153:mpu_9250.c    **** bool MPU9250_getStandbyXAccelEnabled() {
 6451              		.loc 1 2153 0
 6452              		.cfi_startproc
 6453              		@ args = 0, pretend = 0, frame = 0
 6454              		@ frame_needed = 0, uses_anonymous_args = 0
 6455 0000 10B5     		push	{r4, lr}
 6456              		.cfi_def_cfa_offset 8
 6457              		.cfi_offset 4, -8
 6458              		.cfi_offset 14, -4
2154:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_PWR_MGMT_2, MPU9250_PWR2_STBY_XA_BIT, buffer);
 6459              		.loc 1 2154 0
 6460 0002 064C     		ldr	r4, .L701
 6461 0004 064B     		ldr	r3, .L701+4
 6462 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6463 0008 6C21     		movs	r1, #108
 6464 000a 0522     		movs	r2, #5
 6465 000c 2346     		mov	r3, r4
 6466 000e FFF7FEFF 		bl	I2CReadBit
 6467              	.LVL363:
2155:mpu_9250.c    ****     return buffer[0];
 6468              		.loc 1 2155 0
 6469 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
2156:mpu_9250.c    **** }
 6470              		.loc 1 2156 0
 6471 0014 0030     		adds	r0, r0, #0
 6472 0016 18BF     		it	ne
 6473 0018 0120     		movne	r0, #1
 6474 001a 10BD     		pop	{r4, pc}
 6475              	.L702:
 6476              		.align	2
 6477              	.L701:
 6478 001c 00000000 		.word	buffer
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 153


 6479 0020 00000000 		.word	devAddr
 6480              		.cfi_endproc
 6481              	.LFE166:
 6482              		.size	MPU9250_getStandbyXAccelEnabled, .-MPU9250_getStandbyXAccelEnabled
 6483              		.section	.text.MPU9250_setStandbyXAccelEnabled,"ax",%progbits
 6484              		.align	2
 6485              		.global	MPU9250_setStandbyXAccelEnabled
 6486              		.thumb
 6487              		.thumb_func
 6488              		.type	MPU9250_setStandbyXAccelEnabled, %function
 6489              	MPU9250_setStandbyXAccelEnabled:
 6490              	.LFB167:
2157:mpu_9250.c    **** /** Set X-axis accelerometer standby enabled status.
2158:mpu_9250.c    ****  * @param New X-axis standby enabled status
2159:mpu_9250.c    ****  * @see getStandbyXAccelEnabled()
2160:mpu_9250.c    ****  * @see MPU9250_RA_PWR_MGMT_2
2161:mpu_9250.c    ****  * @see MPU9250_PWR2_STBY_XA_BIT
2162:mpu_9250.c    ****  */
2163:mpu_9250.c    **** void MPU9250_setStandbyXAccelEnabled(bool enabled) {
 6491              		.loc 1 2163 0
 6492              		.cfi_startproc
 6493              		@ args = 0, pretend = 0, frame = 0
 6494              		@ frame_needed = 0, uses_anonymous_args = 0
 6495              	.LVL364:
 6496 0000 08B5     		push	{r3, lr}
 6497              		.cfi_def_cfa_offset 8
 6498              		.cfi_offset 3, -8
 6499              		.cfi_offset 14, -4
 6500 0002 0346     		mov	r3, r0
2164:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_PWR_MGMT_2, MPU9250_PWR2_STBY_XA_BIT, enabled);
 6501              		.loc 1 2164 0
 6502 0004 034A     		ldr	r2, .L705
 6503 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 6504              	.LVL365:
 6505 0008 6C21     		movs	r1, #108
 6506 000a 0522     		movs	r2, #5
 6507 000c FFF7FEFF 		bl	I2CWriteBit
 6508              	.LVL366:
 6509 0010 08BD     		pop	{r3, pc}
 6510              	.L706:
 6511 0012 00BF     		.align	2
 6512              	.L705:
 6513 0014 00000000 		.word	devAddr
 6514              		.cfi_endproc
 6515              	.LFE167:
 6516              		.size	MPU9250_setStandbyXAccelEnabled, .-MPU9250_setStandbyXAccelEnabled
 6517              		.section	.text.MPU9250_getStandbyYAccelEnabled,"ax",%progbits
 6518              		.align	2
 6519              		.global	MPU9250_getStandbyYAccelEnabled
 6520              		.thumb
 6521              		.thumb_func
 6522              		.type	MPU9250_getStandbyYAccelEnabled, %function
 6523              	MPU9250_getStandbyYAccelEnabled:
 6524              	.LFB168:
2165:mpu_9250.c    **** }
2166:mpu_9250.c    **** /** Get Y-axis accelerometer standby enabled status.
2167:mpu_9250.c    ****  * If enabled, the Y-axis will not gather or report data (or use power).
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 154


2168:mpu_9250.c    ****  * @return Current Y-axis standby enabled status
2169:mpu_9250.c    ****  * @see MPU9250_RA_PWR_MGMT_2
2170:mpu_9250.c    ****  * @see MPU9250_PWR2_STBY_YA_BIT
2171:mpu_9250.c    ****  */
2172:mpu_9250.c    **** bool MPU9250_getStandbyYAccelEnabled() {
 6525              		.loc 1 2172 0
 6526              		.cfi_startproc
 6527              		@ args = 0, pretend = 0, frame = 0
 6528              		@ frame_needed = 0, uses_anonymous_args = 0
 6529 0000 10B5     		push	{r4, lr}
 6530              		.cfi_def_cfa_offset 8
 6531              		.cfi_offset 4, -8
 6532              		.cfi_offset 14, -4
2173:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_PWR_MGMT_2, MPU9250_PWR2_STBY_YA_BIT, buffer);
 6533              		.loc 1 2173 0
 6534 0002 064C     		ldr	r4, .L709
 6535 0004 064B     		ldr	r3, .L709+4
 6536 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6537 0008 6C21     		movs	r1, #108
 6538 000a 0422     		movs	r2, #4
 6539 000c 2346     		mov	r3, r4
 6540 000e FFF7FEFF 		bl	I2CReadBit
 6541              	.LVL367:
2174:mpu_9250.c    ****     return buffer[0];
 6542              		.loc 1 2174 0
 6543 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
2175:mpu_9250.c    **** }
 6544              		.loc 1 2175 0
 6545 0014 0030     		adds	r0, r0, #0
 6546 0016 18BF     		it	ne
 6547 0018 0120     		movne	r0, #1
 6548 001a 10BD     		pop	{r4, pc}
 6549              	.L710:
 6550              		.align	2
 6551              	.L709:
 6552 001c 00000000 		.word	buffer
 6553 0020 00000000 		.word	devAddr
 6554              		.cfi_endproc
 6555              	.LFE168:
 6556              		.size	MPU9250_getStandbyYAccelEnabled, .-MPU9250_getStandbyYAccelEnabled
 6557              		.section	.text.MPU9250_setStandbyYAccelEnabled,"ax",%progbits
 6558              		.align	2
 6559              		.global	MPU9250_setStandbyYAccelEnabled
 6560              		.thumb
 6561              		.thumb_func
 6562              		.type	MPU9250_setStandbyYAccelEnabled, %function
 6563              	MPU9250_setStandbyYAccelEnabled:
 6564              	.LFB169:
2176:mpu_9250.c    **** /** Set Y-axis accelerometer standby enabled status.
2177:mpu_9250.c    ****  * @param New Y-axis standby enabled status
2178:mpu_9250.c    ****  * @see getStandbyYAccelEnabled()
2179:mpu_9250.c    ****  * @see MPU9250_RA_PWR_MGMT_2
2180:mpu_9250.c    ****  * @see MPU9250_PWR2_STBY_YA_BIT
2181:mpu_9250.c    ****  */
2182:mpu_9250.c    **** void MPU9250_setStandbyYAccelEnabled(bool enabled) {
 6565              		.loc 1 2182 0
 6566              		.cfi_startproc
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 155


 6567              		@ args = 0, pretend = 0, frame = 0
 6568              		@ frame_needed = 0, uses_anonymous_args = 0
 6569              	.LVL368:
 6570 0000 08B5     		push	{r3, lr}
 6571              		.cfi_def_cfa_offset 8
 6572              		.cfi_offset 3, -8
 6573              		.cfi_offset 14, -4
 6574 0002 0346     		mov	r3, r0
2183:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_PWR_MGMT_2, MPU9250_PWR2_STBY_YA_BIT, enabled);
 6575              		.loc 1 2183 0
 6576 0004 034A     		ldr	r2, .L713
 6577 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 6578              	.LVL369:
 6579 0008 6C21     		movs	r1, #108
 6580 000a 0422     		movs	r2, #4
 6581 000c FFF7FEFF 		bl	I2CWriteBit
 6582              	.LVL370:
 6583 0010 08BD     		pop	{r3, pc}
 6584              	.L714:
 6585 0012 00BF     		.align	2
 6586              	.L713:
 6587 0014 00000000 		.word	devAddr
 6588              		.cfi_endproc
 6589              	.LFE169:
 6590              		.size	MPU9250_setStandbyYAccelEnabled, .-MPU9250_setStandbyYAccelEnabled
 6591              		.section	.text.MPU9250_getStandbyZAccelEnabled,"ax",%progbits
 6592              		.align	2
 6593              		.global	MPU9250_getStandbyZAccelEnabled
 6594              		.thumb
 6595              		.thumb_func
 6596              		.type	MPU9250_getStandbyZAccelEnabled, %function
 6597              	MPU9250_getStandbyZAccelEnabled:
 6598              	.LFB170:
2184:mpu_9250.c    **** }
2185:mpu_9250.c    **** /** Get Z-axis accelerometer standby enabled status.
2186:mpu_9250.c    ****  * If enabled, the Z-axis will not gather or report data (or use power).
2187:mpu_9250.c    ****  * @return Current Z-axis standby enabled status
2188:mpu_9250.c    ****  * @see MPU9250_RA_PWR_MGMT_2
2189:mpu_9250.c    ****  * @see MPU9250_PWR2_STBY_ZA_BIT
2190:mpu_9250.c    ****  */
2191:mpu_9250.c    **** bool MPU9250_getStandbyZAccelEnabled() {
 6599              		.loc 1 2191 0
 6600              		.cfi_startproc
 6601              		@ args = 0, pretend = 0, frame = 0
 6602              		@ frame_needed = 0, uses_anonymous_args = 0
 6603 0000 10B5     		push	{r4, lr}
 6604              		.cfi_def_cfa_offset 8
 6605              		.cfi_offset 4, -8
 6606              		.cfi_offset 14, -4
2192:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_PWR_MGMT_2, MPU9250_PWR2_STBY_ZA_BIT, buffer);
 6607              		.loc 1 2192 0
 6608 0002 064C     		ldr	r4, .L717
 6609 0004 064B     		ldr	r3, .L717+4
 6610 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6611 0008 6C21     		movs	r1, #108
 6612 000a 0322     		movs	r2, #3
 6613 000c 2346     		mov	r3, r4
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 156


 6614 000e FFF7FEFF 		bl	I2CReadBit
 6615              	.LVL371:
2193:mpu_9250.c    ****     return buffer[0];
 6616              		.loc 1 2193 0
 6617 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
2194:mpu_9250.c    **** }
 6618              		.loc 1 2194 0
 6619 0014 0030     		adds	r0, r0, #0
 6620 0016 18BF     		it	ne
 6621 0018 0120     		movne	r0, #1
 6622 001a 10BD     		pop	{r4, pc}
 6623              	.L718:
 6624              		.align	2
 6625              	.L717:
 6626 001c 00000000 		.word	buffer
 6627 0020 00000000 		.word	devAddr
 6628              		.cfi_endproc
 6629              	.LFE170:
 6630              		.size	MPU9250_getStandbyZAccelEnabled, .-MPU9250_getStandbyZAccelEnabled
 6631              		.section	.text.MPU9250_setStandbyZAccelEnabled,"ax",%progbits
 6632              		.align	2
 6633              		.global	MPU9250_setStandbyZAccelEnabled
 6634              		.thumb
 6635              		.thumb_func
 6636              		.type	MPU9250_setStandbyZAccelEnabled, %function
 6637              	MPU9250_setStandbyZAccelEnabled:
 6638              	.LFB171:
2195:mpu_9250.c    **** /** Set Z-axis accelerometer standby enabled status.
2196:mpu_9250.c    ****  * @param New Z-axis standby enabled status
2197:mpu_9250.c    ****  * @see getStandbyZAccelEnabled()
2198:mpu_9250.c    ****  * @see MPU9250_RA_PWR_MGMT_2
2199:mpu_9250.c    ****  * @see MPU9250_PWR2_STBY_ZA_BIT
2200:mpu_9250.c    ****  */
2201:mpu_9250.c    **** void MPU9250_setStandbyZAccelEnabled(bool enabled) {
 6639              		.loc 1 2201 0
 6640              		.cfi_startproc
 6641              		@ args = 0, pretend = 0, frame = 0
 6642              		@ frame_needed = 0, uses_anonymous_args = 0
 6643              	.LVL372:
 6644 0000 08B5     		push	{r3, lr}
 6645              		.cfi_def_cfa_offset 8
 6646              		.cfi_offset 3, -8
 6647              		.cfi_offset 14, -4
 6648 0002 0346     		mov	r3, r0
2202:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_PWR_MGMT_2, MPU9250_PWR2_STBY_ZA_BIT, enabled);
 6649              		.loc 1 2202 0
 6650 0004 034A     		ldr	r2, .L721
 6651 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 6652              	.LVL373:
 6653 0008 6C21     		movs	r1, #108
 6654 000a 0322     		movs	r2, #3
 6655 000c FFF7FEFF 		bl	I2CWriteBit
 6656              	.LVL374:
 6657 0010 08BD     		pop	{r3, pc}
 6658              	.L722:
 6659 0012 00BF     		.align	2
 6660              	.L721:
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 157


 6661 0014 00000000 		.word	devAddr
 6662              		.cfi_endproc
 6663              	.LFE171:
 6664              		.size	MPU9250_setStandbyZAccelEnabled, .-MPU9250_setStandbyZAccelEnabled
 6665              		.section	.text.MPU9250_getStandbyXGyroEnabled,"ax",%progbits
 6666              		.align	2
 6667              		.global	MPU9250_getStandbyXGyroEnabled
 6668              		.thumb
 6669              		.thumb_func
 6670              		.type	MPU9250_getStandbyXGyroEnabled, %function
 6671              	MPU9250_getStandbyXGyroEnabled:
 6672              	.LFB172:
2203:mpu_9250.c    **** }
2204:mpu_9250.c    **** /** Get X-axis gyroscope standby enabled status.
2205:mpu_9250.c    ****  * If enabled, the X-axis will not gather or report data (or use power).
2206:mpu_9250.c    ****  * @return Current X-axis standby enabled status
2207:mpu_9250.c    ****  * @see MPU9250_RA_PWR_MGMT_2
2208:mpu_9250.c    ****  * @see MPU9250_PWR2_STBY_XG_BIT
2209:mpu_9250.c    ****  */
2210:mpu_9250.c    **** bool MPU9250_getStandbyXGyroEnabled() {
 6673              		.loc 1 2210 0
 6674              		.cfi_startproc
 6675              		@ args = 0, pretend = 0, frame = 0
 6676              		@ frame_needed = 0, uses_anonymous_args = 0
 6677 0000 10B5     		push	{r4, lr}
 6678              		.cfi_def_cfa_offset 8
 6679              		.cfi_offset 4, -8
 6680              		.cfi_offset 14, -4
2211:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_PWR_MGMT_2, MPU9250_PWR2_STBY_XG_BIT, buffer);
 6681              		.loc 1 2211 0
 6682 0002 064C     		ldr	r4, .L725
 6683 0004 064B     		ldr	r3, .L725+4
 6684 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6685 0008 6C21     		movs	r1, #108
 6686 000a 0222     		movs	r2, #2
 6687 000c 2346     		mov	r3, r4
 6688 000e FFF7FEFF 		bl	I2CReadBit
 6689              	.LVL375:
2212:mpu_9250.c    ****     return buffer[0];
 6690              		.loc 1 2212 0
 6691 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
2213:mpu_9250.c    **** }
 6692              		.loc 1 2213 0
 6693 0014 0030     		adds	r0, r0, #0
 6694 0016 18BF     		it	ne
 6695 0018 0120     		movne	r0, #1
 6696 001a 10BD     		pop	{r4, pc}
 6697              	.L726:
 6698              		.align	2
 6699              	.L725:
 6700 001c 00000000 		.word	buffer
 6701 0020 00000000 		.word	devAddr
 6702              		.cfi_endproc
 6703              	.LFE172:
 6704              		.size	MPU9250_getStandbyXGyroEnabled, .-MPU9250_getStandbyXGyroEnabled
 6705              		.section	.text.MPU9250_setStandbyXGyroEnabled,"ax",%progbits
 6706              		.align	2
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 158


 6707              		.global	MPU9250_setStandbyXGyroEnabled
 6708              		.thumb
 6709              		.thumb_func
 6710              		.type	MPU9250_setStandbyXGyroEnabled, %function
 6711              	MPU9250_setStandbyXGyroEnabled:
 6712              	.LFB173:
2214:mpu_9250.c    **** /** Set X-axis gyroscope standby enabled status.
2215:mpu_9250.c    ****  * @param New X-axis standby enabled status
2216:mpu_9250.c    ****  * @see getStandbyXGyroEnabled()
2217:mpu_9250.c    ****  * @see MPU9250_RA_PWR_MGMT_2
2218:mpu_9250.c    ****  * @see MPU9250_PWR2_STBY_XG_BIT
2219:mpu_9250.c    ****  */
2220:mpu_9250.c    **** void MPU9250_setStandbyXGyroEnabled(bool enabled) {
 6713              		.loc 1 2220 0
 6714              		.cfi_startproc
 6715              		@ args = 0, pretend = 0, frame = 0
 6716              		@ frame_needed = 0, uses_anonymous_args = 0
 6717              	.LVL376:
 6718 0000 08B5     		push	{r3, lr}
 6719              		.cfi_def_cfa_offset 8
 6720              		.cfi_offset 3, -8
 6721              		.cfi_offset 14, -4
 6722 0002 0346     		mov	r3, r0
2221:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_PWR_MGMT_2, MPU9250_PWR2_STBY_XG_BIT, enabled);
 6723              		.loc 1 2221 0
 6724 0004 034A     		ldr	r2, .L729
 6725 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 6726              	.LVL377:
 6727 0008 6C21     		movs	r1, #108
 6728 000a 0222     		movs	r2, #2
 6729 000c FFF7FEFF 		bl	I2CWriteBit
 6730              	.LVL378:
 6731 0010 08BD     		pop	{r3, pc}
 6732              	.L730:
 6733 0012 00BF     		.align	2
 6734              	.L729:
 6735 0014 00000000 		.word	devAddr
 6736              		.cfi_endproc
 6737              	.LFE173:
 6738              		.size	MPU9250_setStandbyXGyroEnabled, .-MPU9250_setStandbyXGyroEnabled
 6739              		.section	.text.MPU9250_getStandbyYGyroEnabled,"ax",%progbits
 6740              		.align	2
 6741              		.global	MPU9250_getStandbyYGyroEnabled
 6742              		.thumb
 6743              		.thumb_func
 6744              		.type	MPU9250_getStandbyYGyroEnabled, %function
 6745              	MPU9250_getStandbyYGyroEnabled:
 6746              	.LFB174:
2222:mpu_9250.c    **** }
2223:mpu_9250.c    **** /** Get Y-axis gyroscope standby enabled status.
2224:mpu_9250.c    ****  * If enabled, the Y-axis will not gather or report data (or use power).
2225:mpu_9250.c    ****  * @return Current Y-axis standby enabled status
2226:mpu_9250.c    ****  * @see MPU9250_RA_PWR_MGMT_2
2227:mpu_9250.c    ****  * @see MPU9250_PWR2_STBY_YG_BIT
2228:mpu_9250.c    ****  */
2229:mpu_9250.c    **** bool MPU9250_getStandbyYGyroEnabled() {
 6747              		.loc 1 2229 0
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 159


 6748              		.cfi_startproc
 6749              		@ args = 0, pretend = 0, frame = 0
 6750              		@ frame_needed = 0, uses_anonymous_args = 0
 6751 0000 10B5     		push	{r4, lr}
 6752              		.cfi_def_cfa_offset 8
 6753              		.cfi_offset 4, -8
 6754              		.cfi_offset 14, -4
2230:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_PWR_MGMT_2, MPU9250_PWR2_STBY_YG_BIT, buffer);
 6755              		.loc 1 2230 0
 6756 0002 064C     		ldr	r4, .L733
 6757 0004 064B     		ldr	r3, .L733+4
 6758 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6759 0008 6C21     		movs	r1, #108
 6760 000a 0122     		movs	r2, #1
 6761 000c 2346     		mov	r3, r4
 6762 000e FFF7FEFF 		bl	I2CReadBit
 6763              	.LVL379:
2231:mpu_9250.c    ****     return buffer[0];
 6764              		.loc 1 2231 0
 6765 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
2232:mpu_9250.c    **** }
 6766              		.loc 1 2232 0
 6767 0014 0030     		adds	r0, r0, #0
 6768 0016 18BF     		it	ne
 6769 0018 0120     		movne	r0, #1
 6770 001a 10BD     		pop	{r4, pc}
 6771              	.L734:
 6772              		.align	2
 6773              	.L733:
 6774 001c 00000000 		.word	buffer
 6775 0020 00000000 		.word	devAddr
 6776              		.cfi_endproc
 6777              	.LFE174:
 6778              		.size	MPU9250_getStandbyYGyroEnabled, .-MPU9250_getStandbyYGyroEnabled
 6779              		.section	.text.MPU9250_setStandbyYGyroEnabled,"ax",%progbits
 6780              		.align	2
 6781              		.global	MPU9250_setStandbyYGyroEnabled
 6782              		.thumb
 6783              		.thumb_func
 6784              		.type	MPU9250_setStandbyYGyroEnabled, %function
 6785              	MPU9250_setStandbyYGyroEnabled:
 6786              	.LFB175:
2233:mpu_9250.c    **** /** Set Y-axis gyroscope standby enabled status.
2234:mpu_9250.c    ****  * @param New Y-axis standby enabled status
2235:mpu_9250.c    ****  * @see getStandbyYGyroEnabled()
2236:mpu_9250.c    ****  * @see MPU9250_RA_PWR_MGMT_2
2237:mpu_9250.c    ****  * @see MPU9250_PWR2_STBY_YG_BIT
2238:mpu_9250.c    ****  */
2239:mpu_9250.c    **** void MPU9250_setStandbyYGyroEnabled(bool enabled) {
 6787              		.loc 1 2239 0
 6788              		.cfi_startproc
 6789              		@ args = 0, pretend = 0, frame = 0
 6790              		@ frame_needed = 0, uses_anonymous_args = 0
 6791              	.LVL380:
 6792 0000 08B5     		push	{r3, lr}
 6793              		.cfi_def_cfa_offset 8
 6794              		.cfi_offset 3, -8
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 160


 6795              		.cfi_offset 14, -4
 6796 0002 0346     		mov	r3, r0
2240:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_PWR_MGMT_2, MPU9250_PWR2_STBY_YG_BIT, enabled);
 6797              		.loc 1 2240 0
 6798 0004 034A     		ldr	r2, .L737
 6799 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 6800              	.LVL381:
 6801 0008 6C21     		movs	r1, #108
 6802 000a 0122     		movs	r2, #1
 6803 000c FFF7FEFF 		bl	I2CWriteBit
 6804              	.LVL382:
 6805 0010 08BD     		pop	{r3, pc}
 6806              	.L738:
 6807 0012 00BF     		.align	2
 6808              	.L737:
 6809 0014 00000000 		.word	devAddr
 6810              		.cfi_endproc
 6811              	.LFE175:
 6812              		.size	MPU9250_setStandbyYGyroEnabled, .-MPU9250_setStandbyYGyroEnabled
 6813              		.section	.text.MPU9250_getStandbyZGyroEnabled,"ax",%progbits
 6814              		.align	2
 6815              		.global	MPU9250_getStandbyZGyroEnabled
 6816              		.thumb
 6817              		.thumb_func
 6818              		.type	MPU9250_getStandbyZGyroEnabled, %function
 6819              	MPU9250_getStandbyZGyroEnabled:
 6820              	.LFB176:
2241:mpu_9250.c    **** }
2242:mpu_9250.c    **** /** Get Z-axis gyroscope standby enabled status.
2243:mpu_9250.c    ****  * If enabled, the Z-axis will not gather or report data (or use power).
2244:mpu_9250.c    ****  * @return Current Z-axis standby enabled status
2245:mpu_9250.c    ****  * @see MPU9250_RA_PWR_MGMT_2
2246:mpu_9250.c    ****  * @see MPU9250_PWR2_STBY_ZG_BIT
2247:mpu_9250.c    ****  */
2248:mpu_9250.c    **** bool MPU9250_getStandbyZGyroEnabled() {
 6821              		.loc 1 2248 0
 6822              		.cfi_startproc
 6823              		@ args = 0, pretend = 0, frame = 0
 6824              		@ frame_needed = 0, uses_anonymous_args = 0
 6825 0000 10B5     		push	{r4, lr}
 6826              		.cfi_def_cfa_offset 8
 6827              		.cfi_offset 4, -8
 6828              		.cfi_offset 14, -4
2249:mpu_9250.c    ****     I2CReadBit(devAddr, MPU9250_RA_PWR_MGMT_2, MPU9250_PWR2_STBY_ZG_BIT, buffer);
 6829              		.loc 1 2249 0
 6830 0002 064C     		ldr	r4, .L741
 6831 0004 064B     		ldr	r3, .L741+4
 6832 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6833 0008 6C21     		movs	r1, #108
 6834 000a 0022     		movs	r2, #0
 6835 000c 2346     		mov	r3, r4
 6836 000e FFF7FEFF 		bl	I2CReadBit
 6837              	.LVL383:
2250:mpu_9250.c    ****     return buffer[0];
 6838              		.loc 1 2250 0
 6839 0012 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
2251:mpu_9250.c    **** }
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 161


 6840              		.loc 1 2251 0
 6841 0014 0030     		adds	r0, r0, #0
 6842 0016 18BF     		it	ne
 6843 0018 0120     		movne	r0, #1
 6844 001a 10BD     		pop	{r4, pc}
 6845              	.L742:
 6846              		.align	2
 6847              	.L741:
 6848 001c 00000000 		.word	buffer
 6849 0020 00000000 		.word	devAddr
 6850              		.cfi_endproc
 6851              	.LFE176:
 6852              		.size	MPU9250_getStandbyZGyroEnabled, .-MPU9250_getStandbyZGyroEnabled
 6853              		.section	.text.MPU9250_setStandbyZGyroEnabled,"ax",%progbits
 6854              		.align	2
 6855              		.global	MPU9250_setStandbyZGyroEnabled
 6856              		.thumb
 6857              		.thumb_func
 6858              		.type	MPU9250_setStandbyZGyroEnabled, %function
 6859              	MPU9250_setStandbyZGyroEnabled:
 6860              	.LFB177:
2252:mpu_9250.c    **** /** Set Z-axis gyroscope standby enabled status.
2253:mpu_9250.c    ****  * @param New Z-axis standby enabled status
2254:mpu_9250.c    ****  * @see getStandbyZGyroEnabled()
2255:mpu_9250.c    ****  * @see MPU9250_RA_PWR_MGMT_2
2256:mpu_9250.c    ****  * @see MPU9250_PWR2_STBY_ZG_BIT
2257:mpu_9250.c    ****  */
2258:mpu_9250.c    **** void MPU9250_setStandbyZGyroEnabled(bool enabled) {
 6861              		.loc 1 2258 0
 6862              		.cfi_startproc
 6863              		@ args = 0, pretend = 0, frame = 0
 6864              		@ frame_needed = 0, uses_anonymous_args = 0
 6865              	.LVL384:
 6866 0000 08B5     		push	{r3, lr}
 6867              		.cfi_def_cfa_offset 8
 6868              		.cfi_offset 3, -8
 6869              		.cfi_offset 14, -4
 6870 0002 0346     		mov	r3, r0
2259:mpu_9250.c    ****     I2CWriteBit(devAddr, MPU9250_RA_PWR_MGMT_2, MPU9250_PWR2_STBY_ZG_BIT, enabled);
 6871              		.loc 1 2259 0
 6872 0004 034A     		ldr	r2, .L745
 6873 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 6874              	.LVL385:
 6875 0008 6C21     		movs	r1, #108
 6876 000a 0022     		movs	r2, #0
 6877 000c FFF7FEFF 		bl	I2CWriteBit
 6878              	.LVL386:
 6879 0010 08BD     		pop	{r3, pc}
 6880              	.L746:
 6881 0012 00BF     		.align	2
 6882              	.L745:
 6883 0014 00000000 		.word	devAddr
 6884              		.cfi_endproc
 6885              	.LFE177:
 6886              		.size	MPU9250_setStandbyZGyroEnabled, .-MPU9250_setStandbyZGyroEnabled
 6887              		.section	.text.MPU9250_EnableAccFilter,"ax",%progbits
 6888              		.align	2
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 162


 6889              		.global	MPU9250_EnableAccFilter
 6890              		.thumb
 6891              		.thumb_func
 6892              		.type	MPU9250_EnableAccFilter, %function
 6893              	MPU9250_EnableAccFilter:
 6894              	.LFB178:
2260:mpu_9250.c    **** }
2261:mpu_9250.c    **** 
2262:mpu_9250.c    **** void MPU9250_EnableAccFilter(void)
2263:mpu_9250.c    **** {
 6895              		.loc 1 2263 0
 6896              		.cfi_startproc
 6897              		@ args = 0, pretend = 0, frame = 0
 6898              		@ frame_needed = 0, uses_anonymous_args = 0
 6899 0000 08B5     		push	{r3, lr}
 6900              		.cfi_def_cfa_offset 8
 6901              		.cfi_offset 3, -8
 6902              		.cfi_offset 14, -4
2264:mpu_9250.c    ****     /* Setting the LPF at 5Hz both Gyro and temoperature for 9250 */
2265:mpu_9250.c    ****     MPU9250_setDLPFMode(6);     
 6903              		.loc 1 2265 0
 6904 0002 0620     		movs	r0, #6
 6905 0004 FFF7FEFF 		bl	MPU9250_setDLPFMode
 6906              	.LVL387:
2266:mpu_9250.c    ****     
2267:mpu_9250.c    ****     /* Setting the LPF at 5Hz both accelero for 9250 */
2268:mpu_9250.c    ****     MPU9250_set_A_DLPFMode(6); 
 6907              		.loc 1 2268 0
 6908 0008 0620     		movs	r0, #6
 6909 000a FFF7FEFF 		bl	MPU9250_set_A_DLPFMode
 6910              	.LVL388:
 6911 000e 08BD     		pop	{r3, pc}
 6912              		.cfi_endproc
 6913              	.LFE178:
 6914              		.size	MPU9250_EnableAccFilter, .-MPU9250_EnableAccFilter
 6915              		.section	.text.MPU9250_getDeviceID,"ax",%progbits
 6916              		.align	2
 6917              		.global	MPU9250_getDeviceID
 6918              		.thumb
 6919              		.thumb_func
 6920              		.type	MPU9250_getDeviceID, %function
 6921              	MPU9250_getDeviceID:
 6922              	.LFB179:
2269:mpu_9250.c    **** }
2270:mpu_9250.c    **** 
2271:mpu_9250.c    **** 
2272:mpu_9250.c    **** // WHO_AM_I register
2273:mpu_9250.c    **** 
2274:mpu_9250.c    **** /** Get Device ID.
2275:mpu_9250.c    ****  * This register is used to verify the identity of the device (0b110100, 0x34).
2276:mpu_9250.c    ****  * @return Device ID (6 bits only! should be 0x34)
2277:mpu_9250.c    ****  * @see MPU9250_RA_WHO_AM_I
2278:mpu_9250.c    ****  * @see MPU9250_WHO_AM_I_BIT
2279:mpu_9250.c    ****  * @see MPU9250_WHO_AM_I_LENGTH
2280:mpu_9250.c    ****  */
2281:mpu_9250.c    **** uint8_t MPU9250_getDeviceID() {
 6923              		.loc 1 2281 0
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 163


 6924              		.cfi_startproc
 6925              		@ args = 0, pretend = 0, frame = 0
 6926              		@ frame_needed = 0, uses_anonymous_args = 0
 6927 0000 10B5     		push	{r4, lr}
 6928              		.cfi_def_cfa_offset 8
 6929              		.cfi_offset 4, -8
 6930              		.cfi_offset 14, -4
 6931 0002 82B0     		sub	sp, sp, #8
 6932              		.cfi_def_cfa_offset 16
2282:mpu_9250.c    ****     I2CReadBits(devAddr, MPU9250_RA_WHO_AM_I, MPU9250_WHO_AM_I_BIT, MPU9250_WHO_AM_I_LENGTH, buffer
 6933              		.loc 1 2282 0
 6934 0004 054B     		ldr	r3, .L751
 6935 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6936 0008 054C     		ldr	r4, .L751+4
 6937 000a 0094     		str	r4, [sp]
 6938 000c 7521     		movs	r1, #117
 6939 000e 0622     		movs	r2, #6
 6940 0010 1346     		mov	r3, r2
 6941 0012 FFF7FEFF 		bl	I2CReadBits
 6942              	.LVL389:
2283:mpu_9250.c    ****     return buffer[0];
2284:mpu_9250.c    **** }
 6943              		.loc 1 2284 0
 6944 0016 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 6945 0018 02B0     		add	sp, sp, #8
 6946              		.cfi_def_cfa_offset 8
 6947              		@ sp needed
 6948 001a 10BD     		pop	{r4, pc}
 6949              	.L752:
 6950              		.align	2
 6951              	.L751:
 6952 001c 00000000 		.word	devAddr
 6953 0020 00000000 		.word	buffer
 6954              		.cfi_endproc
 6955              	.LFE179:
 6956              		.size	MPU9250_getDeviceID, .-MPU9250_getDeviceID
 6957              		.section	.text.MPU9250_testConnection,"ax",%progbits
 6958              		.align	2
 6959              		.global	MPU9250_testConnection
 6960              		.thumb
 6961              		.thumb_func
 6962              		.type	MPU9250_testConnection, %function
 6963              	MPU9250_testConnection:
 6964              	.LFB3:
  79:mpu_9250.c    ****     return MPU9250_getDeviceID() == 0x34;
 6965              		.loc 1 79 0
 6966              		.cfi_startproc
 6967              		@ args = 0, pretend = 0, frame = 0
 6968              		@ frame_needed = 0, uses_anonymous_args = 0
 6969 0000 08B5     		push	{r3, lr}
 6970              		.cfi_def_cfa_offset 8
 6971              		.cfi_offset 3, -8
 6972              		.cfi_offset 14, -4
  80:mpu_9250.c    **** }
 6973              		.loc 1 80 0
 6974 0002 FFF7FEFF 		bl	MPU9250_getDeviceID
 6975              	.LVL390:
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 164


  81:mpu_9250.c    **** 
 6976              		.loc 1 81 0
 6977 0006 3428     		cmp	r0, #52
 6978 0008 14BF     		ite	ne
 6979 000a 0020     		movne	r0, #0
 6980 000c 0120     		moveq	r0, #1
 6981 000e 08BD     		pop	{r3, pc}
 6982              		.cfi_endproc
 6983              	.LFE3:
 6984              		.size	MPU9250_testConnection, .-MPU9250_testConnection
 6985              		.section	.text.MPU9250_setDeviceID,"ax",%progbits
 6986              		.align	2
 6987              		.global	MPU9250_setDeviceID
 6988              		.thumb
 6989              		.thumb_func
 6990              		.type	MPU9250_setDeviceID, %function
 6991              	MPU9250_setDeviceID:
 6992              	.LFB180:
2285:mpu_9250.c    **** /** Set Device ID.
2286:mpu_9250.c    ****  * Write a new ID into the WHO_AM_I register (no idea why this should ever be
2287:mpu_9250.c    ****  * necessary though).
2288:mpu_9250.c    ****  * @param id New device ID to set.
2289:mpu_9250.c    ****  * @see getDeviceID()
2290:mpu_9250.c    ****  * @see MPU9250_RA_WHO_AM_I
2291:mpu_9250.c    ****  * @see MPU9250_WHO_AM_I_BIT
2292:mpu_9250.c    ****  * @see MPU9250_WHO_AM_I_LENGTH
2293:mpu_9250.c    ****  */
2294:mpu_9250.c    **** void MPU9250_setDeviceID(uint8_t id) {
 6993              		.loc 1 2294 0
 6994              		.cfi_startproc
 6995              		@ args = 0, pretend = 0, frame = 0
 6996              		@ frame_needed = 0, uses_anonymous_args = 0
 6997              	.LVL391:
 6998 0000 00B5     		push	{lr}
 6999              		.cfi_def_cfa_offset 4
 7000              		.cfi_offset 14, -4
 7001 0002 83B0     		sub	sp, sp, #12
 7002              		.cfi_def_cfa_offset 16
2295:mpu_9250.c    ****     I2CWriteBits(devAddr, MPU9250_RA_WHO_AM_I, MPU9250_WHO_AM_I_BIT, MPU9250_WHO_AM_I_LENGTH, id);
 7003              		.loc 1 2295 0
 7004 0004 054B     		ldr	r3, .L757
 7005 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7006 0008 0090     		str	r0, [sp]
 7007 000a 1846     		mov	r0, r3
 7008              	.LVL392:
 7009 000c 7521     		movs	r1, #117
 7010 000e 0622     		movs	r2, #6
 7011 0010 1346     		mov	r3, r2
 7012 0012 FFF7FEFF 		bl	I2CWriteBits
 7013              	.LVL393:
2296:mpu_9250.c    **** }
 7014              		.loc 1 2296 0
 7015 0016 03B0     		add	sp, sp, #12
 7016              		.cfi_def_cfa_offset 4
 7017              		@ sp needed
 7018 0018 5DF804FB 		ldr	pc, [sp], #4
 7019              	.L758:
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 165


 7020              		.align	2
 7021              	.L757:
 7022 001c 00000000 		.word	devAddr
 7023              		.cfi_endproc
 7024              	.LFE180:
 7025              		.size	MPU9250_setDeviceID, .-MPU9250_setDeviceID
 7026              		.comm	buffer,22,4
 7027              		.comm	devAddr,1,1
 7028              		.text
 7029              	.Letext0:
 7030              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 7031              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 7032              		.file 4 "mpu_9250.h"
 7033              		.section	.debug_info,"",%progbits
 7034              	.Ldebug_info0:
 7035 0000 832A0000 		.4byte	0x2a83
 7036 0004 0400     		.2byte	0x4
 7037 0006 00000000 		.4byte	.Ldebug_abbrev0
 7038 000a 04       		.byte	0x4
 7039 000b 01       		.uleb128 0x1
 7040 000c 38040000 		.4byte	.LASF223
 7041 0010 01       		.byte	0x1
 7042 0011 40100000 		.4byte	.LASF224
 7043 0015 2A0E0000 		.4byte	.LASF225
 7044 0019 00000000 		.4byte	.Ldebug_ranges0+0
 7045 001d 00000000 		.4byte	0
 7046 0021 00000000 		.4byte	.Ldebug_line0
 7047 0025 02       		.uleb128 0x2
 7048 0026 01       		.byte	0x1
 7049 0027 06       		.byte	0x6
 7050 0028 6A030000 		.4byte	.LASF0
 7051 002c 03       		.uleb128 0x3
 7052 002d 5F010000 		.4byte	.LASF2
 7053 0031 02       		.byte	0x2
 7054 0032 1D       		.byte	0x1d
 7055 0033 37000000 		.4byte	0x37
 7056 0037 02       		.uleb128 0x2
 7057 0038 01       		.byte	0x1
 7058 0039 08       		.byte	0x8
 7059 003a 100F0000 		.4byte	.LASF1
 7060 003e 03       		.uleb128 0x3
 7061 003f B9060000 		.4byte	.LASF3
 7062 0043 02       		.byte	0x2
 7063 0044 29       		.byte	0x29
 7064 0045 49000000 		.4byte	0x49
 7065 0049 02       		.uleb128 0x2
 7066 004a 02       		.byte	0x2
 7067 004b 05       		.byte	0x5
 7068 004c 630F0000 		.4byte	.LASF4
 7069 0050 02       		.uleb128 0x2
 7070 0051 02       		.byte	0x2
 7071 0052 07       		.byte	0x7
 7072 0053 10090000 		.4byte	.LASF5
 7073 0057 02       		.uleb128 0x2
 7074 0058 04       		.byte	0x4
 7075 0059 05       		.byte	0x5
 7076 005a 2F040000 		.4byte	.LASF6
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 166


 7077 005e 02       		.uleb128 0x2
 7078 005f 04       		.byte	0x4
 7079 0060 07       		.byte	0x7
 7080 0061 1C080000 		.4byte	.LASF7
 7081 0065 02       		.uleb128 0x2
 7082 0066 08       		.byte	0x8
 7083 0067 05       		.byte	0x5
 7084 0068 5C030000 		.4byte	.LASF8
 7085 006c 02       		.uleb128 0x2
 7086 006d 08       		.byte	0x8
 7087 006e 07       		.byte	0x7
 7088 006f 23020000 		.4byte	.LASF9
 7089 0073 04       		.uleb128 0x4
 7090 0074 04       		.byte	0x4
 7091 0075 05       		.byte	0x5
 7092 0076 696E7400 		.ascii	"int\000"
 7093 007a 02       		.uleb128 0x2
 7094 007b 04       		.byte	0x4
 7095 007c 07       		.byte	0x7
 7096 007d 81070000 		.4byte	.LASF10
 7097 0081 03       		.uleb128 0x3
 7098 0082 FB140000 		.4byte	.LASF11
 7099 0086 03       		.byte	0x3
 7100 0087 15       		.byte	0x15
 7101 0088 2C000000 		.4byte	0x2c
 7102 008c 03       		.uleb128 0x3
 7103 008d 54030000 		.4byte	.LASF12
 7104 0091 03       		.byte	0x3
 7105 0092 20       		.byte	0x20
 7106 0093 3E000000 		.4byte	0x3e
 7107 0097 05       		.uleb128 0x5
 7108 0098 76150000 		.4byte	.LASF226
 7109 009c 01       		.byte	0x1
 7110 009d 2E       		.byte	0x2e
 7111 009e 00000000 		.4byte	.LFB0
 7112 00a2 0C000000 		.4byte	.LFE0-.LFB0
 7113 00a6 01       		.uleb128 0x1
 7114 00a7 9C       		.byte	0x9c
 7115 00a8 06       		.uleb128 0x6
 7116 00a9 ED010000 		.4byte	.LASF13
 7117 00ad 01       		.byte	0x1
 7118 00ae 38       		.byte	0x38
 7119 00af 00000000 		.4byte	.LFB1
 7120 00b3 0C000000 		.4byte	.LFE1-.LFB1
 7121 00b7 01       		.uleb128 0x1
 7122 00b8 9C       		.byte	0x9c
 7123 00b9 CB000000 		.4byte	0xcb
 7124 00bd 07       		.uleb128 0x7
 7125 00be 1D0C0000 		.4byte	.LASF16
 7126 00c2 01       		.byte	0x1
 7127 00c3 38       		.byte	0x38
 7128 00c4 81000000 		.4byte	0x81
 7129 00c8 01       		.uleb128 0x1
 7130 00c9 50       		.byte	0x50
 7131 00ca 00       		.byte	0
 7132 00cb 08       		.uleb128 0x8
 7133 00cc D8150000 		.4byte	.LASF14
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 167


 7134 00d0 01       		.byte	0x1
 7135 00d1 5B       		.byte	0x5b
 7136 00d2 81000000 		.4byte	0x81
 7137 00d6 00000000 		.4byte	.LFB4
 7138 00da 20000000 		.4byte	.LFE4-.LFB4
 7139 00de 01       		.uleb128 0x1
 7140 00df 9C       		.byte	0x9c
 7141 00e0 FF000000 		.4byte	0xff
 7142 00e4 09       		.uleb128 0x9
 7143 00e5 12000000 		.4byte	.LVL1
 7144 00e9 9D290000 		.4byte	0x299d
 7145 00ed 0A       		.uleb128 0xa
 7146 00ee 01       		.uleb128 0x1
 7147 00ef 53       		.byte	0x53
 7148 00f0 02       		.uleb128 0x2
 7149 00f1 74       		.byte	0x74
 7150 00f2 00       		.sleb128 0
 7151 00f3 0A       		.uleb128 0xa
 7152 00f4 01       		.uleb128 0x1
 7153 00f5 52       		.byte	0x52
 7154 00f6 01       		.uleb128 0x1
 7155 00f7 37       		.byte	0x37
 7156 00f8 0A       		.uleb128 0xa
 7157 00f9 01       		.uleb128 0x1
 7158 00fa 51       		.byte	0x51
 7159 00fb 01       		.uleb128 0x1
 7160 00fc 31       		.byte	0x31
 7161 00fd 00       		.byte	0
 7162 00fe 00       		.byte	0
 7163 00ff 06       		.uleb128 0x6
 7164 0100 8D020000 		.4byte	.LASF15
 7165 0104 01       		.byte	0x1
 7166 0105 65       		.byte	0x65
 7167 0106 00000000 		.4byte	.LFB5
 7168 010a 18000000 		.4byte	.LFE5-.LFB5
 7169 010e 01       		.uleb128 0x1
 7170 010f 9C       		.byte	0x9c
 7171 0110 38010000 		.4byte	0x138
 7172 0114 0B       		.uleb128 0xb
 7173 0115 05090000 		.4byte	.LASF17
 7174 0119 01       		.byte	0x1
 7175 011a 65       		.byte	0x65
 7176 011b 81000000 		.4byte	0x81
 7177 011f 00000000 		.4byte	.LLST0
 7178 0123 09       		.uleb128 0x9
 7179 0124 10000000 		.4byte	.LVL4
 7180 0128 C4290000 		.4byte	0x29c4
 7181 012c 0A       		.uleb128 0xa
 7182 012d 01       		.uleb128 0x1
 7183 012e 52       		.byte	0x52
 7184 012f 01       		.uleb128 0x1
 7185 0130 37       		.byte	0x37
 7186 0131 0A       		.uleb128 0xa
 7187 0132 01       		.uleb128 0x1
 7188 0133 51       		.byte	0x51
 7189 0134 01       		.uleb128 0x1
 7190 0135 31       		.byte	0x31
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 168


 7191 0136 00       		.byte	0
 7192 0137 00       		.byte	0
 7193 0138 08       		.uleb128 0x8
 7194 0139 6E0C0000 		.4byte	.LASF18
 7195 013d 01       		.byte	0x1
 7196 013e 80       		.byte	0x80
 7197 013f 81000000 		.4byte	0x81
 7198 0143 00000000 		.4byte	.LFB6
 7199 0147 1C000000 		.4byte	.LFE6-.LFB6
 7200 014b 01       		.uleb128 0x1
 7201 014c 9C       		.byte	0x9c
 7202 014d 67010000 		.4byte	0x167
 7203 0151 09       		.uleb128 0x9
 7204 0152 10000000 		.4byte	.LVL5
 7205 0156 E5290000 		.4byte	0x29e5
 7206 015a 0A       		.uleb128 0xa
 7207 015b 01       		.uleb128 0x1
 7208 015c 52       		.byte	0x52
 7209 015d 02       		.uleb128 0x2
 7210 015e 74       		.byte	0x74
 7211 015f 00       		.sleb128 0
 7212 0160 0A       		.uleb128 0xa
 7213 0161 01       		.uleb128 0x1
 7214 0162 51       		.byte	0x51
 7215 0163 01       		.uleb128 0x1
 7216 0164 49       		.byte	0x49
 7217 0165 00       		.byte	0
 7218 0166 00       		.byte	0
 7219 0167 06       		.uleb128 0x6
 7220 0168 45000000 		.4byte	.LASF19
 7221 016c 01       		.byte	0x1
 7222 016d 89       		.byte	0x89
 7223 016e 00000000 		.4byte	.LFB7
 7224 0172 14000000 		.4byte	.LFE7-.LFB7
 7225 0176 01       		.uleb128 0x1
 7226 0177 9C       		.byte	0x9c
 7227 0178 9B010000 		.4byte	0x19b
 7228 017c 0B       		.uleb128 0xb
 7229 017d 8D030000 		.4byte	.LASF20
 7230 0181 01       		.byte	0x1
 7231 0182 89       		.byte	0x89
 7232 0183 81000000 		.4byte	0x81
 7233 0187 21000000 		.4byte	.LLST1
 7234 018b 09       		.uleb128 0x9
 7235 018c 0E000000 		.4byte	.LVL8
 7236 0190 012A0000 		.4byte	0x2a01
 7237 0194 0A       		.uleb128 0xa
 7238 0195 01       		.uleb128 0x1
 7239 0196 51       		.byte	0x51
 7240 0197 01       		.uleb128 0x1
 7241 0198 49       		.byte	0x49
 7242 0199 00       		.byte	0
 7243 019a 00       		.byte	0
 7244 019b 08       		.uleb128 0x8
 7245 019c 6B0A0000 		.4byte	.LASF21
 7246 01a0 01       		.byte	0x1
 7247 01a1 AA       		.byte	0xaa
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 169


 7248 01a2 81000000 		.4byte	0x81
 7249 01a6 00000000 		.4byte	.LFB8
 7250 01aa 24000000 		.4byte	.LFE8-.LFB8
 7251 01ae 01       		.uleb128 0x1
 7252 01af 9C       		.byte	0x9c
 7253 01b0 D5010000 		.4byte	0x1d5
 7254 01b4 09       		.uleb128 0x9
 7255 01b5 16000000 		.4byte	.LVL9
 7256 01b9 1D2A0000 		.4byte	0x2a1d
 7257 01bd 0A       		.uleb128 0xa
 7258 01be 01       		.uleb128 0x1
 7259 01bf 53       		.byte	0x53
 7260 01c0 01       		.uleb128 0x1
 7261 01c1 33       		.byte	0x33
 7262 01c2 0A       		.uleb128 0xa
 7263 01c3 01       		.uleb128 0x1
 7264 01c4 52       		.byte	0x52
 7265 01c5 01       		.uleb128 0x1
 7266 01c6 35       		.byte	0x35
 7267 01c7 0A       		.uleb128 0xa
 7268 01c8 01       		.uleb128 0x1
 7269 01c9 51       		.byte	0x51
 7270 01ca 01       		.uleb128 0x1
 7271 01cb 4A       		.byte	0x4a
 7272 01cc 0A       		.uleb128 0xa
 7273 01cd 02       		.uleb128 0x2
 7274 01ce 7D       		.byte	0x7d
 7275 01cf 00       		.sleb128 0
 7276 01d0 02       		.uleb128 0x2
 7277 01d1 74       		.byte	0x74
 7278 01d2 00       		.sleb128 0
 7279 01d3 00       		.byte	0
 7280 01d4 00       		.byte	0
 7281 01d5 06       		.uleb128 0x6
 7282 01d6 100B0000 		.4byte	.LASF22
 7283 01da 01       		.byte	0x1
 7284 01db B3       		.byte	0xb3
 7285 01dc 00000000 		.4byte	.LFB9
 7286 01e0 20000000 		.4byte	.LFE9-.LFB9
 7287 01e4 01       		.uleb128 0x1
 7288 01e5 9C       		.byte	0x9c
 7289 01e6 13020000 		.4byte	0x213
 7290 01ea 0B       		.uleb128 0xb
 7291 01eb 1F150000 		.4byte	.LASF23
 7292 01ef 01       		.byte	0x1
 7293 01f0 B3       		.byte	0xb3
 7294 01f1 81000000 		.4byte	0x81
 7295 01f5 42000000 		.4byte	.LLST2
 7296 01f9 09       		.uleb128 0x9
 7297 01fa 16000000 		.4byte	.LVL12
 7298 01fe 432A0000 		.4byte	0x2a43
 7299 0202 0A       		.uleb128 0xa
 7300 0203 01       		.uleb128 0x1
 7301 0204 53       		.byte	0x53
 7302 0205 01       		.uleb128 0x1
 7303 0206 33       		.byte	0x33
 7304 0207 0A       		.uleb128 0xa
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 170


 7305 0208 01       		.uleb128 0x1
 7306 0209 52       		.byte	0x52
 7307 020a 01       		.uleb128 0x1
 7308 020b 35       		.byte	0x35
 7309 020c 0A       		.uleb128 0xa
 7310 020d 01       		.uleb128 0x1
 7311 020e 51       		.byte	0x51
 7312 020f 01       		.uleb128 0x1
 7313 0210 4A       		.byte	0x4a
 7314 0211 00       		.byte	0
 7315 0212 00       		.byte	0
 7316 0213 08       		.uleb128 0x8
 7317 0214 E3050000 		.4byte	.LASF24
 7318 0218 01       		.byte	0x1
 7319 0219 D2       		.byte	0xd2
 7320 021a 81000000 		.4byte	0x81
 7321 021e 00000000 		.4byte	.LFB10
 7322 0222 24000000 		.4byte	.LFE10-.LFB10
 7323 0226 01       		.uleb128 0x1
 7324 0227 9C       		.byte	0x9c
 7325 0228 4D020000 		.4byte	0x24d
 7326 022c 09       		.uleb128 0x9
 7327 022d 16000000 		.4byte	.LVL13
 7328 0231 1D2A0000 		.4byte	0x2a1d
 7329 0235 0A       		.uleb128 0xa
 7330 0236 01       		.uleb128 0x1
 7331 0237 53       		.byte	0x53
 7332 0238 01       		.uleb128 0x1
 7333 0239 33       		.byte	0x33
 7334 023a 0A       		.uleb128 0xa
 7335 023b 01       		.uleb128 0x1
 7336 023c 52       		.byte	0x52
 7337 023d 01       		.uleb128 0x1
 7338 023e 32       		.byte	0x32
 7339 023f 0A       		.uleb128 0xa
 7340 0240 01       		.uleb128 0x1
 7341 0241 51       		.byte	0x51
 7342 0242 01       		.uleb128 0x1
 7343 0243 4A       		.byte	0x4a
 7344 0244 0A       		.uleb128 0xa
 7345 0245 02       		.uleb128 0x2
 7346 0246 7D       		.byte	0x7d
 7347 0247 00       		.sleb128 0
 7348 0248 02       		.uleb128 0x2
 7349 0249 74       		.byte	0x74
 7350 024a 00       		.sleb128 0
 7351 024b 00       		.byte	0
 7352 024c 00       		.byte	0
 7353 024d 06       		.uleb128 0x6
 7354 024e 5A0C0000 		.4byte	.LASF25
 7355 0252 01       		.byte	0x1
 7356 0253 E0       		.byte	0xe0
 7357 0254 00000000 		.4byte	.LFB11
 7358 0258 20000000 		.4byte	.LFE11-.LFB11
 7359 025c 01       		.uleb128 0x1
 7360 025d 9C       		.byte	0x9c
 7361 025e 8B020000 		.4byte	0x28b
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 171


 7362 0262 0B       		.uleb128 0xb
 7363 0263 EE110000 		.4byte	.LASF26
 7364 0267 01       		.byte	0x1
 7365 0268 E0       		.byte	0xe0
 7366 0269 81000000 		.4byte	0x81
 7367 026d 63000000 		.4byte	.LLST3
 7368 0271 09       		.uleb128 0x9
 7369 0272 16000000 		.4byte	.LVL16
 7370 0276 432A0000 		.4byte	0x2a43
 7371 027a 0A       		.uleb128 0xa
 7372 027b 01       		.uleb128 0x1
 7373 027c 53       		.byte	0x53
 7374 027d 01       		.uleb128 0x1
 7375 027e 33       		.byte	0x33
 7376 027f 0A       		.uleb128 0xa
 7377 0280 01       		.uleb128 0x1
 7378 0281 52       		.byte	0x52
 7379 0282 01       		.uleb128 0x1
 7380 0283 32       		.byte	0x32
 7381 0284 0A       		.uleb128 0xa
 7382 0285 01       		.uleb128 0x1
 7383 0286 51       		.byte	0x51
 7384 0287 01       		.uleb128 0x1
 7385 0288 4A       		.byte	0x4a
 7386 0289 00       		.byte	0
 7387 028a 00       		.byte	0
 7388 028b 06       		.uleb128 0x6
 7389 028c B2030000 		.4byte	.LASF27
 7390 0290 01       		.byte	0x1
 7391 0291 E6       		.byte	0xe6
 7392 0292 00000000 		.4byte	.LFB12
 7393 0296 20000000 		.4byte	.LFE12-.LFB12
 7394 029a 01       		.uleb128 0x1
 7395 029b 9C       		.byte	0x9c
 7396 029c C9020000 		.4byte	0x2c9
 7397 02a0 0B       		.uleb128 0xb
 7398 02a1 EE110000 		.4byte	.LASF26
 7399 02a5 01       		.byte	0x1
 7400 02a6 E6       		.byte	0xe6
 7401 02a7 81000000 		.4byte	0x81
 7402 02ab 84000000 		.4byte	.LLST4
 7403 02af 09       		.uleb128 0x9
 7404 02b0 16000000 		.4byte	.LVL19
 7405 02b4 432A0000 		.4byte	0x2a43
 7406 02b8 0A       		.uleb128 0xa
 7407 02b9 01       		.uleb128 0x1
 7408 02ba 53       		.byte	0x53
 7409 02bb 01       		.uleb128 0x1
 7410 02bc 33       		.byte	0x33
 7411 02bd 0A       		.uleb128 0xa
 7412 02be 01       		.uleb128 0x1
 7413 02bf 52       		.byte	0x52
 7414 02c0 01       		.uleb128 0x1
 7415 02c1 32       		.byte	0x32
 7416 02c2 0A       		.uleb128 0xa
 7417 02c3 01       		.uleb128 0x1
 7418 02c4 51       		.byte	0x51
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 172


 7419 02c5 01       		.uleb128 0x1
 7420 02c6 4D       		.byte	0x4d
 7421 02c7 00       		.byte	0
 7422 02c8 00       		.byte	0
 7423 02c9 08       		.uleb128 0x8
 7424 02ca B50C0000 		.4byte	.LASF28
 7425 02ce 01       		.byte	0x1
 7426 02cf FD       		.byte	0xfd
 7427 02d0 81000000 		.4byte	0x81
 7428 02d4 00000000 		.4byte	.LFB13
 7429 02d8 24000000 		.4byte	.LFE13-.LFB13
 7430 02dc 01       		.uleb128 0x1
 7431 02dd 9C       		.byte	0x9c
 7432 02de 03030000 		.4byte	0x303
 7433 02e2 09       		.uleb128 0x9
 7434 02e3 16000000 		.4byte	.LVL20
 7435 02e7 1D2A0000 		.4byte	0x2a1d
 7436 02eb 0A       		.uleb128 0xa
 7437 02ec 01       		.uleb128 0x1
 7438 02ed 53       		.byte	0x53
 7439 02ee 01       		.uleb128 0x1
 7440 02ef 32       		.byte	0x32
 7441 02f0 0A       		.uleb128 0xa
 7442 02f1 01       		.uleb128 0x1
 7443 02f2 52       		.byte	0x52
 7444 02f3 01       		.uleb128 0x1
 7445 02f4 34       		.byte	0x34
 7446 02f5 0A       		.uleb128 0xa
 7447 02f6 01       		.uleb128 0x1
 7448 02f7 51       		.byte	0x51
 7449 02f8 01       		.uleb128 0x1
 7450 02f9 4B       		.byte	0x4b
 7451 02fa 0A       		.uleb128 0xa
 7452 02fb 02       		.uleb128 0x2
 7453 02fc 7D       		.byte	0x7d
 7454 02fd 00       		.sleb128 0
 7455 02fe 02       		.uleb128 0x2
 7456 02ff 74       		.byte	0x74
 7457 0300 00       		.sleb128 0
 7458 0301 00       		.byte	0
 7459 0302 00       		.byte	0
 7460 0303 0C       		.uleb128 0xc
 7461 0304 250D0000 		.4byte	.LASF29
 7462 0308 01       		.byte	0x1
 7463 0309 0901     		.2byte	0x109
 7464 030b 00000000 		.4byte	.LFB14
 7465 030f 20000000 		.4byte	.LFE14-.LFB14
 7466 0313 01       		.uleb128 0x1
 7467 0314 9C       		.byte	0x9c
 7468 0315 43030000 		.4byte	0x343
 7469 0319 0D       		.uleb128 0xd
 7470 031a D10D0000 		.4byte	.LASF30
 7471 031e 01       		.byte	0x1
 7472 031f 0901     		.2byte	0x109
 7473 0321 81000000 		.4byte	0x81
 7474 0325 A5000000 		.4byte	.LLST5
 7475 0329 09       		.uleb128 0x9
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 173


 7476 032a 16000000 		.4byte	.LVL23
 7477 032e 432A0000 		.4byte	0x2a43
 7478 0332 0A       		.uleb128 0xa
 7479 0333 01       		.uleb128 0x1
 7480 0334 53       		.byte	0x53
 7481 0335 01       		.uleb128 0x1
 7482 0336 32       		.byte	0x32
 7483 0337 0A       		.uleb128 0xa
 7484 0338 01       		.uleb128 0x1
 7485 0339 52       		.byte	0x52
 7486 033a 01       		.uleb128 0x1
 7487 033b 34       		.byte	0x34
 7488 033c 0A       		.uleb128 0xa
 7489 033d 01       		.uleb128 0x1
 7490 033e 51       		.byte	0x51
 7491 033f 01       		.uleb128 0x1
 7492 0340 4B       		.byte	0x4b
 7493 0341 00       		.byte	0
 7494 0342 00       		.byte	0
 7495 0343 0E       		.uleb128 0xe
 7496 0344 E60E0000 		.4byte	.LASF31
 7497 0348 01       		.byte	0x1
 7498 0349 1301     		.2byte	0x113
 7499 034b 78030000 		.4byte	0x378
 7500 034f 00000000 		.4byte	.LFB15
 7501 0353 24000000 		.4byte	.LFE15-.LFB15
 7502 0357 01       		.uleb128 0x1
 7503 0358 9C       		.byte	0x9c
 7504 0359 78030000 		.4byte	0x378
 7505 035d 09       		.uleb128 0x9
 7506 035e 12000000 		.4byte	.LVL24
 7507 0362 9D290000 		.4byte	0x299d
 7508 0366 0A       		.uleb128 0xa
 7509 0367 01       		.uleb128 0x1
 7510 0368 53       		.byte	0x53
 7511 0369 02       		.uleb128 0x2
 7512 036a 74       		.byte	0x74
 7513 036b 00       		.sleb128 0
 7514 036c 0A       		.uleb128 0xa
 7515 036d 01       		.uleb128 0x1
 7516 036e 52       		.byte	0x52
 7517 036f 01       		.uleb128 0x1
 7518 0370 37       		.byte	0x37
 7519 0371 0A       		.uleb128 0xa
 7520 0372 01       		.uleb128 0x1
 7521 0373 51       		.byte	0x51
 7522 0374 01       		.uleb128 0x1
 7523 0375 4C       		.byte	0x4c
 7524 0376 00       		.byte	0
 7525 0377 00       		.byte	0
 7526 0378 02       		.uleb128 0x2
 7527 0379 01       		.byte	0x1
 7528 037a 02       		.byte	0x2
 7529 037b 0A0F0000 		.4byte	.LASF32
 7530 037f 0C       		.uleb128 0xc
 7531 0380 D3010000 		.4byte	.LASF33
 7532 0384 01       		.byte	0x1
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 174


 7533 0385 1B01     		.2byte	0x11b
 7534 0387 00000000 		.4byte	.LFB16
 7535 038b 18000000 		.4byte	.LFE16-.LFB16
 7536 038f 01       		.uleb128 0x1
 7537 0390 9C       		.byte	0x9c
 7538 0391 BA030000 		.4byte	0x3ba
 7539 0395 0D       		.uleb128 0xd
 7540 0396 81110000 		.4byte	.LASF34
 7541 039a 01       		.byte	0x1
 7542 039b 1B01     		.2byte	0x11b
 7543 039d 78030000 		.4byte	0x378
 7544 03a1 C6000000 		.4byte	.LLST6
 7545 03a5 09       		.uleb128 0x9
 7546 03a6 10000000 		.4byte	.LVL27
 7547 03aa C4290000 		.4byte	0x29c4
 7548 03ae 0A       		.uleb128 0xa
 7549 03af 01       		.uleb128 0x1
 7550 03b0 52       		.byte	0x52
 7551 03b1 01       		.uleb128 0x1
 7552 03b2 37       		.byte	0x37
 7553 03b3 0A       		.uleb128 0xa
 7554 03b4 01       		.uleb128 0x1
 7555 03b5 51       		.byte	0x51
 7556 03b6 01       		.uleb128 0x1
 7557 03b7 4C       		.byte	0x4c
 7558 03b8 00       		.byte	0
 7559 03b9 00       		.byte	0
 7560 03ba 0E       		.uleb128 0xe
 7561 03bb 4D120000 		.4byte	.LASF35
 7562 03bf 01       		.byte	0x1
 7563 03c0 2201     		.2byte	0x122
 7564 03c2 78030000 		.4byte	0x378
 7565 03c6 00000000 		.4byte	.LFB17
 7566 03ca 24000000 		.4byte	.LFE17-.LFB17
 7567 03ce 01       		.uleb128 0x1
 7568 03cf 9C       		.byte	0x9c
 7569 03d0 EF030000 		.4byte	0x3ef
 7570 03d4 09       		.uleb128 0x9
 7571 03d5 12000000 		.4byte	.LVL28
 7572 03d9 9D290000 		.4byte	0x299d
 7573 03dd 0A       		.uleb128 0xa
 7574 03de 01       		.uleb128 0x1
 7575 03df 53       		.byte	0x53
 7576 03e0 02       		.uleb128 0x2
 7577 03e1 74       		.byte	0x74
 7578 03e2 00       		.sleb128 0
 7579 03e3 0A       		.uleb128 0xa
 7580 03e4 01       		.uleb128 0x1
 7581 03e5 52       		.byte	0x52
 7582 03e6 01       		.uleb128 0x1
 7583 03e7 36       		.byte	0x36
 7584 03e8 0A       		.uleb128 0xa
 7585 03e9 01       		.uleb128 0x1
 7586 03ea 51       		.byte	0x51
 7587 03eb 01       		.uleb128 0x1
 7588 03ec 4C       		.byte	0x4c
 7589 03ed 00       		.byte	0
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 175


 7590 03ee 00       		.byte	0
 7591 03ef 0C       		.uleb128 0xc
 7592 03f0 54050000 		.4byte	.LASF36
 7593 03f4 01       		.byte	0x1
 7594 03f5 2A01     		.2byte	0x12a
 7595 03f7 00000000 		.4byte	.LFB18
 7596 03fb 18000000 		.4byte	.LFE18-.LFB18
 7597 03ff 01       		.uleb128 0x1
 7598 0400 9C       		.byte	0x9c
 7599 0401 2A040000 		.4byte	0x42a
 7600 0405 0D       		.uleb128 0xd
 7601 0406 81110000 		.4byte	.LASF34
 7602 040a 01       		.byte	0x1
 7603 040b 2A01     		.2byte	0x12a
 7604 040d 78030000 		.4byte	0x378
 7605 0411 E7000000 		.4byte	.LLST7
 7606 0415 09       		.uleb128 0x9
 7607 0416 10000000 		.4byte	.LVL31
 7608 041a C4290000 		.4byte	0x29c4
 7609 041e 0A       		.uleb128 0xa
 7610 041f 01       		.uleb128 0x1
 7611 0420 52       		.byte	0x52
 7612 0421 01       		.uleb128 0x1
 7613 0422 36       		.byte	0x36
 7614 0423 0A       		.uleb128 0xa
 7615 0424 01       		.uleb128 0x1
 7616 0425 51       		.byte	0x51
 7617 0426 01       		.uleb128 0x1
 7618 0427 4C       		.byte	0x4c
 7619 0428 00       		.byte	0
 7620 0429 00       		.byte	0
 7621 042a 0E       		.uleb128 0xe
 7622 042b 9D150000 		.4byte	.LASF37
 7623 042f 01       		.byte	0x1
 7624 0430 3101     		.2byte	0x131
 7625 0432 78030000 		.4byte	0x378
 7626 0436 00000000 		.4byte	.LFB19
 7627 043a 24000000 		.4byte	.LFE19-.LFB19
 7628 043e 01       		.uleb128 0x1
 7629 043f 9C       		.byte	0x9c
 7630 0440 5F040000 		.4byte	0x45f
 7631 0444 09       		.uleb128 0x9
 7632 0445 12000000 		.4byte	.LVL32
 7633 0449 9D290000 		.4byte	0x299d
 7634 044d 0A       		.uleb128 0xa
 7635 044e 01       		.uleb128 0x1
 7636 044f 53       		.byte	0x53
 7637 0450 02       		.uleb128 0x2
 7638 0451 74       		.byte	0x74
 7639 0452 00       		.sleb128 0
 7640 0453 0A       		.uleb128 0xa
 7641 0454 01       		.uleb128 0x1
 7642 0455 52       		.byte	0x52
 7643 0456 01       		.uleb128 0x1
 7644 0457 35       		.byte	0x35
 7645 0458 0A       		.uleb128 0xa
 7646 0459 01       		.uleb128 0x1
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 176


 7647 045a 51       		.byte	0x51
 7648 045b 01       		.uleb128 0x1
 7649 045c 4C       		.byte	0x4c
 7650 045d 00       		.byte	0
 7651 045e 00       		.byte	0
 7652 045f 0C       		.uleb128 0xc
 7653 0460 63080000 		.4byte	.LASF38
 7654 0464 01       		.byte	0x1
 7655 0465 3901     		.2byte	0x139
 7656 0467 00000000 		.4byte	.LFB20
 7657 046b 18000000 		.4byte	.LFE20-.LFB20
 7658 046f 01       		.uleb128 0x1
 7659 0470 9C       		.byte	0x9c
 7660 0471 9A040000 		.4byte	0x49a
 7661 0475 0D       		.uleb128 0xd
 7662 0476 81110000 		.4byte	.LASF34
 7663 047a 01       		.byte	0x1
 7664 047b 3901     		.2byte	0x139
 7665 047d 78030000 		.4byte	0x378
 7666 0481 08010000 		.4byte	.LLST8
 7667 0485 09       		.uleb128 0x9
 7668 0486 10000000 		.4byte	.LVL35
 7669 048a C4290000 		.4byte	0x29c4
 7670 048e 0A       		.uleb128 0xa
 7671 048f 01       		.uleb128 0x1
 7672 0490 52       		.byte	0x52
 7673 0491 01       		.uleb128 0x1
 7674 0492 35       		.byte	0x35
 7675 0493 0A       		.uleb128 0xa
 7676 0494 01       		.uleb128 0x1
 7677 0495 51       		.byte	0x51
 7678 0496 01       		.uleb128 0x1
 7679 0497 4C       		.byte	0x4c
 7680 0498 00       		.byte	0
 7681 0499 00       		.byte	0
 7682 049a 0E       		.uleb128 0xe
 7683 049b D9060000 		.4byte	.LASF39
 7684 049f 01       		.byte	0x1
 7685 04a0 4D01     		.2byte	0x14d
 7686 04a2 81000000 		.4byte	0x81
 7687 04a6 00000000 		.4byte	.LFB21
 7688 04aa 24000000 		.4byte	.LFE21-.LFB21
 7689 04ae 01       		.uleb128 0x1
 7690 04af 9C       		.byte	0x9c
 7691 04b0 D5040000 		.4byte	0x4d5
 7692 04b4 09       		.uleb128 0x9
 7693 04b5 16000000 		.4byte	.LVL36
 7694 04b9 1D2A0000 		.4byte	0x2a1d
 7695 04bd 0A       		.uleb128 0xa
 7696 04be 01       		.uleb128 0x1
 7697 04bf 53       		.byte	0x53
 7698 04c0 01       		.uleb128 0x1
 7699 04c1 32       		.byte	0x32
 7700 04c2 0A       		.uleb128 0xa
 7701 04c3 01       		.uleb128 0x1
 7702 04c4 52       		.byte	0x52
 7703 04c5 01       		.uleb128 0x1
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 177


 7704 04c6 34       		.byte	0x34
 7705 04c7 0A       		.uleb128 0xa
 7706 04c8 01       		.uleb128 0x1
 7707 04c9 51       		.byte	0x51
 7708 04ca 01       		.uleb128 0x1
 7709 04cb 4C       		.byte	0x4c
 7710 04cc 0A       		.uleb128 0xa
 7711 04cd 02       		.uleb128 0x2
 7712 04ce 7D       		.byte	0x7d
 7713 04cf 00       		.sleb128 0
 7714 04d0 02       		.uleb128 0x2
 7715 04d1 74       		.byte	0x74
 7716 04d2 00       		.sleb128 0
 7717 04d3 00       		.byte	0
 7718 04d4 00       		.byte	0
 7719 04d5 0C       		.uleb128 0xc
 7720 04d6 9E140000 		.4byte	.LASF40
 7721 04da 01       		.byte	0x1
 7722 04db 5501     		.2byte	0x155
 7723 04dd 00000000 		.4byte	.LFB22
 7724 04e1 20000000 		.4byte	.LFE22-.LFB22
 7725 04e5 01       		.uleb128 0x1
 7726 04e6 9C       		.byte	0x9c
 7727 04e7 15050000 		.4byte	0x515
 7728 04eb 0D       		.uleb128 0xd
 7729 04ec D10D0000 		.4byte	.LASF30
 7730 04f0 01       		.byte	0x1
 7731 04f1 5501     		.2byte	0x155
 7732 04f3 81000000 		.4byte	0x81
 7733 04f7 29010000 		.4byte	.LLST9
 7734 04fb 09       		.uleb128 0x9
 7735 04fc 16000000 		.4byte	.LVL39
 7736 0500 432A0000 		.4byte	0x2a43
 7737 0504 0A       		.uleb128 0xa
 7738 0505 01       		.uleb128 0x1
 7739 0506 53       		.byte	0x53
 7740 0507 01       		.uleb128 0x1
 7741 0508 32       		.byte	0x32
 7742 0509 0A       		.uleb128 0xa
 7743 050a 01       		.uleb128 0x1
 7744 050b 52       		.byte	0x52
 7745 050c 01       		.uleb128 0x1
 7746 050d 34       		.byte	0x34
 7747 050e 0A       		.uleb128 0xa
 7748 050f 01       		.uleb128 0x1
 7749 0510 51       		.byte	0x51
 7750 0511 01       		.uleb128 0x1
 7751 0512 4C       		.byte	0x4c
 7752 0513 00       		.byte	0
 7753 0514 00       		.byte	0
 7754 0515 0E       		.uleb128 0xe
 7755 0516 43140000 		.4byte	.LASF41
 7756 051a 01       		.byte	0x1
 7757 051b 7B01     		.2byte	0x17b
 7758 051d 81000000 		.4byte	0x81
 7759 0521 00000000 		.4byte	.LFB23
 7760 0525 24000000 		.4byte	.LFE23-.LFB23
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 178


 7761 0529 01       		.uleb128 0x1
 7762 052a 9C       		.byte	0x9c
 7763 052b 50050000 		.4byte	0x550
 7764 052f 09       		.uleb128 0x9
 7765 0530 16000000 		.4byte	.LVL40
 7766 0534 1D2A0000 		.4byte	0x2a1d
 7767 0538 0A       		.uleb128 0xa
 7768 0539 01       		.uleb128 0x1
 7769 053a 53       		.byte	0x53
 7770 053b 01       		.uleb128 0x1
 7771 053c 33       		.byte	0x33
 7772 053d 0A       		.uleb128 0xa
 7773 053e 01       		.uleb128 0x1
 7774 053f 52       		.byte	0x52
 7775 0540 01       		.uleb128 0x1
 7776 0541 32       		.byte	0x32
 7777 0542 0A       		.uleb128 0xa
 7778 0543 01       		.uleb128 0x1
 7779 0544 51       		.byte	0x51
 7780 0545 01       		.uleb128 0x1
 7781 0546 4C       		.byte	0x4c
 7782 0547 0A       		.uleb128 0xa
 7783 0548 02       		.uleb128 0x2
 7784 0549 7D       		.byte	0x7d
 7785 054a 00       		.sleb128 0
 7786 054b 02       		.uleb128 0x2
 7787 054c 74       		.byte	0x74
 7788 054d 00       		.sleb128 0
 7789 054e 00       		.byte	0
 7790 054f 00       		.byte	0
 7791 0550 0C       		.uleb128 0xc
 7792 0551 FC0A0000 		.4byte	.LASF42
 7793 0555 01       		.byte	0x1
 7794 0556 8501     		.2byte	0x185
 7795 0558 00000000 		.4byte	.LFB24
 7796 055c 20000000 		.4byte	.LFE24-.LFB24
 7797 0560 01       		.uleb128 0x1
 7798 0561 9C       		.byte	0x9c
 7799 0562 90050000 		.4byte	0x590
 7800 0566 0D       		.uleb128 0xd
 7801 0567 49110000 		.4byte	.LASF43
 7802 056b 01       		.byte	0x1
 7803 056c 8501     		.2byte	0x185
 7804 056e 81000000 		.4byte	0x81
 7805 0572 4A010000 		.4byte	.LLST10
 7806 0576 09       		.uleb128 0x9
 7807 0577 16000000 		.4byte	.LVL43
 7808 057b 432A0000 		.4byte	0x2a43
 7809 057f 0A       		.uleb128 0xa
 7810 0580 01       		.uleb128 0x1
 7811 0581 53       		.byte	0x53
 7812 0582 01       		.uleb128 0x1
 7813 0583 33       		.byte	0x33
 7814 0584 0A       		.uleb128 0xa
 7815 0585 01       		.uleb128 0x1
 7816 0586 52       		.byte	0x52
 7817 0587 01       		.uleb128 0x1
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 179


 7818 0588 32       		.byte	0x32
 7819 0589 0A       		.uleb128 0xa
 7820 058a 01       		.uleb128 0x1
 7821 058b 51       		.byte	0x51
 7822 058c 01       		.uleb128 0x1
 7823 058d 4C       		.byte	0x4c
 7824 058e 00       		.byte	0
 7825 058f 00       		.byte	0
 7826 0590 0E       		.uleb128 0xe
 7827 0591 6E050000 		.4byte	.LASF44
 7828 0595 01       		.byte	0x1
 7829 0596 9A01     		.2byte	0x19a
 7830 0598 81000000 		.4byte	0x81
 7831 059c 00000000 		.4byte	.LFB25
 7832 05a0 1C000000 		.4byte	.LFE25-.LFB25
 7833 05a4 01       		.uleb128 0x1
 7834 05a5 9C       		.byte	0x9c
 7835 05a6 C0050000 		.4byte	0x5c0
 7836 05aa 09       		.uleb128 0x9
 7837 05ab 10000000 		.4byte	.LVL44
 7838 05af E5290000 		.4byte	0x29e5
 7839 05b3 0A       		.uleb128 0xa
 7840 05b4 01       		.uleb128 0x1
 7841 05b5 52       		.byte	0x52
 7842 05b6 02       		.uleb128 0x2
 7843 05b7 74       		.byte	0x74
 7844 05b8 00       		.sleb128 0
 7845 05b9 0A       		.uleb128 0xa
 7846 05ba 01       		.uleb128 0x1
 7847 05bb 51       		.byte	0x51
 7848 05bc 01       		.uleb128 0x1
 7849 05bd 4D       		.byte	0x4d
 7850 05be 00       		.byte	0
 7851 05bf 00       		.byte	0
 7852 05c0 0C       		.uleb128 0xc
 7853 05c1 C8110000 		.4byte	.LASF45
 7854 05c5 01       		.byte	0x1
 7855 05c6 A301     		.2byte	0x1a3
 7856 05c8 00000000 		.4byte	.LFB26
 7857 05cc 14000000 		.4byte	.LFE26-.LFB26
 7858 05d0 01       		.uleb128 0x1
 7859 05d1 9C       		.byte	0x9c
 7860 05d2 F6050000 		.4byte	0x5f6
 7861 05d6 0D       		.uleb128 0xd
 7862 05d7 000F0000 		.4byte	.LASF46
 7863 05db 01       		.byte	0x1
 7864 05dc A301     		.2byte	0x1a3
 7865 05de 81000000 		.4byte	0x81
 7866 05e2 6B010000 		.4byte	.LLST11
 7867 05e6 09       		.uleb128 0x9
 7868 05e7 0E000000 		.4byte	.LVL47
 7869 05eb 012A0000 		.4byte	0x2a01
 7870 05ef 0A       		.uleb128 0xa
 7871 05f0 01       		.uleb128 0x1
 7872 05f1 51       		.byte	0x51
 7873 05f2 01       		.uleb128 0x1
 7874 05f3 4D       		.byte	0x4d
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 180


 7875 05f4 00       		.byte	0
 7876 05f5 00       		.byte	0
 7877 05f6 0E       		.uleb128 0xe
 7878 05f7 94060000 		.4byte	.LASF47
 7879 05fb 01       		.byte	0x1
 7880 05fc BA01     		.2byte	0x1ba
 7881 05fe 81000000 		.4byte	0x81
 7882 0602 00000000 		.4byte	.LFB27
 7883 0606 1C000000 		.4byte	.LFE27-.LFB27
 7884 060a 01       		.uleb128 0x1
 7885 060b 9C       		.byte	0x9c
 7886 060c 26060000 		.4byte	0x626
 7887 0610 09       		.uleb128 0x9
 7888 0611 10000000 		.4byte	.LVL48
 7889 0615 E5290000 		.4byte	0x29e5
 7890 0619 0A       		.uleb128 0xa
 7891 061a 01       		.uleb128 0x1
 7892 061b 52       		.byte	0x52
 7893 061c 02       		.uleb128 0x2
 7894 061d 74       		.byte	0x74
 7895 061e 00       		.sleb128 0
 7896 061f 0A       		.uleb128 0xa
 7897 0620 01       		.uleb128 0x1
 7898 0621 51       		.byte	0x51
 7899 0622 01       		.uleb128 0x1
 7900 0623 4E       		.byte	0x4e
 7901 0624 00       		.byte	0
 7902 0625 00       		.byte	0
 7903 0626 0C       		.uleb128 0xc
 7904 0627 AA0B0000 		.4byte	.LASF48
 7905 062b 01       		.byte	0x1
 7906 062c C301     		.2byte	0x1c3
 7907 062e 00000000 		.4byte	.LFB28
 7908 0632 14000000 		.4byte	.LFE28-.LFB28
 7909 0636 01       		.uleb128 0x1
 7910 0637 9C       		.byte	0x9c
 7911 0638 5C060000 		.4byte	0x65c
 7912 063c 0D       		.uleb128 0xd
 7913 063d D0060000 		.4byte	.LASF49
 7914 0641 01       		.byte	0x1
 7915 0642 C301     		.2byte	0x1c3
 7916 0644 81000000 		.4byte	0x81
 7917 0648 8C010000 		.4byte	.LLST12
 7918 064c 09       		.uleb128 0x9
 7919 064d 0E000000 		.4byte	.LVL51
 7920 0651 012A0000 		.4byte	0x2a01
 7921 0655 0A       		.uleb128 0xa
 7922 0656 01       		.uleb128 0x1
 7923 0657 51       		.byte	0x51
 7924 0658 01       		.uleb128 0x1
 7925 0659 4E       		.byte	0x4e
 7926 065a 00       		.byte	0
 7927 065b 00       		.byte	0
 7928 065c 0E       		.uleb128 0xe
 7929 065d CE000000 		.4byte	.LASF50
 7930 0661 01       		.byte	0x1
 7931 0662 DC01     		.2byte	0x1dc
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 181


 7932 0664 81000000 		.4byte	0x81
 7933 0668 00000000 		.4byte	.LFB29
 7934 066c 1C000000 		.4byte	.LFE29-.LFB29
 7935 0670 01       		.uleb128 0x1
 7936 0671 9C       		.byte	0x9c
 7937 0672 8C060000 		.4byte	0x68c
 7938 0676 09       		.uleb128 0x9
 7939 0677 10000000 		.4byte	.LVL52
 7940 067b E5290000 		.4byte	0x29e5
 7941 067f 0A       		.uleb128 0xa
 7942 0680 01       		.uleb128 0x1
 7943 0681 52       		.byte	0x52
 7944 0682 02       		.uleb128 0x2
 7945 0683 74       		.byte	0x74
 7946 0684 00       		.sleb128 0
 7947 0685 0A       		.uleb128 0xa
 7948 0686 01       		.uleb128 0x1
 7949 0687 51       		.byte	0x51
 7950 0688 01       		.uleb128 0x1
 7951 0689 4F       		.byte	0x4f
 7952 068a 00       		.byte	0
 7953 068b 00       		.byte	0
 7954 068c 0C       		.uleb128 0xc
 7955 068d F3110000 		.4byte	.LASF51
 7956 0691 01       		.byte	0x1
 7957 0692 E501     		.2byte	0x1e5
 7958 0694 00000000 		.4byte	.LFB30
 7959 0698 14000000 		.4byte	.LFE30-.LFB30
 7960 069c 01       		.uleb128 0x1
 7961 069d 9C       		.byte	0x9c
 7962 069e C2060000 		.4byte	0x6c2
 7963 06a2 0D       		.uleb128 0xd
 7964 06a3 000F0000 		.4byte	.LASF46
 7965 06a7 01       		.byte	0x1
 7966 06a8 E501     		.2byte	0x1e5
 7967 06aa 81000000 		.4byte	0x81
 7968 06ae AD010000 		.4byte	.LLST13
 7969 06b2 09       		.uleb128 0x9
 7970 06b3 0E000000 		.4byte	.LVL55
 7971 06b7 012A0000 		.4byte	0x2a01
 7972 06bb 0A       		.uleb128 0xa
 7973 06bc 01       		.uleb128 0x1
 7974 06bd 51       		.byte	0x51
 7975 06be 01       		.uleb128 0x1
 7976 06bf 4F       		.byte	0x4f
 7977 06c0 00       		.byte	0
 7978 06c1 00       		.byte	0
 7979 06c2 0E       		.uleb128 0xe
 7980 06c3 1E0F0000 		.4byte	.LASF52
 7981 06c7 01       		.byte	0x1
 7982 06c8 FA01     		.2byte	0x1fa
 7983 06ca 81000000 		.4byte	0x81
 7984 06ce 00000000 		.4byte	.LFB31
 7985 06d2 1C000000 		.4byte	.LFE31-.LFB31
 7986 06d6 01       		.uleb128 0x1
 7987 06d7 9C       		.byte	0x9c
 7988 06d8 F3060000 		.4byte	0x6f3
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 182


 7989 06dc 09       		.uleb128 0x9
 7990 06dd 10000000 		.4byte	.LVL56
 7991 06e1 E5290000 		.4byte	0x29e5
 7992 06e5 0A       		.uleb128 0xa
 7993 06e6 01       		.uleb128 0x1
 7994 06e7 52       		.byte	0x52
 7995 06e8 02       		.uleb128 0x2
 7996 06e9 74       		.byte	0x74
 7997 06ea 00       		.sleb128 0
 7998 06eb 0A       		.uleb128 0xa
 7999 06ec 01       		.uleb128 0x1
 8000 06ed 51       		.byte	0x51
 8001 06ee 02       		.uleb128 0x2
 8002 06ef 08       		.byte	0x8
 8003 06f0 20       		.byte	0x20
 8004 06f1 00       		.byte	0
 8005 06f2 00       		.byte	0
 8006 06f3 0C       		.uleb128 0xc
 8007 06f4 CC0F0000 		.4byte	.LASF53
 8008 06f8 01       		.byte	0x1
 8009 06f9 0302     		.2byte	0x203
 8010 06fb 00000000 		.4byte	.LFB32
 8011 06ff 14000000 		.4byte	.LFE32-.LFB32
 8012 0703 01       		.uleb128 0x1
 8013 0704 9C       		.byte	0x9c
 8014 0705 2A070000 		.4byte	0x72a
 8015 0709 0D       		.uleb128 0xd
 8016 070a D0060000 		.4byte	.LASF49
 8017 070e 01       		.byte	0x1
 8018 070f 0302     		.2byte	0x203
 8019 0711 81000000 		.4byte	0x81
 8020 0715 CE010000 		.4byte	.LLST14
 8021 0719 09       		.uleb128 0x9
 8022 071a 0E000000 		.4byte	.LVL59
 8023 071e 012A0000 		.4byte	0x2a01
 8024 0722 0A       		.uleb128 0xa
 8025 0723 01       		.uleb128 0x1
 8026 0724 51       		.byte	0x51
 8027 0725 02       		.uleb128 0x2
 8028 0726 08       		.byte	0x8
 8029 0727 20       		.byte	0x20
 8030 0728 00       		.byte	0
 8031 0729 00       		.byte	0
 8032 072a 0E       		.uleb128 0xe
 8033 072b A90D0000 		.4byte	.LASF54
 8034 072f 01       		.byte	0x1
 8035 0730 2202     		.2byte	0x222
 8036 0732 81000000 		.4byte	0x81
 8037 0736 00000000 		.4byte	.LFB33
 8038 073a 1C000000 		.4byte	.LFE33-.LFB33
 8039 073e 01       		.uleb128 0x1
 8040 073f 9C       		.byte	0x9c
 8041 0740 5B070000 		.4byte	0x75b
 8042 0744 09       		.uleb128 0x9
 8043 0745 10000000 		.4byte	.LVL60
 8044 0749 E5290000 		.4byte	0x29e5
 8045 074d 0A       		.uleb128 0xa
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 183


 8046 074e 01       		.uleb128 0x1
 8047 074f 52       		.byte	0x52
 8048 0750 02       		.uleb128 0x2
 8049 0751 74       		.byte	0x74
 8050 0752 00       		.sleb128 0
 8051 0753 0A       		.uleb128 0xa
 8052 0754 01       		.uleb128 0x1
 8053 0755 51       		.byte	0x51
 8054 0756 02       		.uleb128 0x2
 8055 0757 08       		.byte	0x8
 8056 0758 21       		.byte	0x21
 8057 0759 00       		.byte	0
 8058 075a 00       		.byte	0
 8059 075b 0C       		.uleb128 0xc
 8060 075c 14070000 		.4byte	.LASF55
 8061 0760 01       		.byte	0x1
 8062 0761 2B02     		.2byte	0x22b
 8063 0763 00000000 		.4byte	.LFB34
 8064 0767 14000000 		.4byte	.LFE34-.LFB34
 8065 076b 01       		.uleb128 0x1
 8066 076c 9C       		.byte	0x9c
 8067 076d 92070000 		.4byte	0x792
 8068 0771 0D       		.uleb128 0xd
 8069 0772 000F0000 		.4byte	.LASF46
 8070 0776 01       		.byte	0x1
 8071 0777 2B02     		.2byte	0x22b
 8072 0779 81000000 		.4byte	0x81
 8073 077d EF010000 		.4byte	.LLST15
 8074 0781 09       		.uleb128 0x9
 8075 0782 0E000000 		.4byte	.LVL63
 8076 0786 012A0000 		.4byte	0x2a01
 8077 078a 0A       		.uleb128 0xa
 8078 078b 01       		.uleb128 0x1
 8079 078c 51       		.byte	0x51
 8080 078d 02       		.uleb128 0x2
 8081 078e 08       		.byte	0x8
 8082 078f 21       		.byte	0x21
 8083 0790 00       		.byte	0
 8084 0791 00       		.byte	0
 8085 0792 0E       		.uleb128 0xe
 8086 0793 0A0A0000 		.4byte	.LASF56
 8087 0797 01       		.byte	0x1
 8088 0798 4102     		.2byte	0x241
 8089 079a 81000000 		.4byte	0x81
 8090 079e 00000000 		.4byte	.LFB35
 8091 07a2 1C000000 		.4byte	.LFE35-.LFB35
 8092 07a6 01       		.uleb128 0x1
 8093 07a7 9C       		.byte	0x9c
 8094 07a8 C3070000 		.4byte	0x7c3
 8095 07ac 09       		.uleb128 0x9
 8096 07ad 10000000 		.4byte	.LVL64
 8097 07b1 E5290000 		.4byte	0x29e5
 8098 07b5 0A       		.uleb128 0xa
 8099 07b6 01       		.uleb128 0x1
 8100 07b7 52       		.byte	0x52
 8101 07b8 02       		.uleb128 0x2
 8102 07b9 74       		.byte	0x74
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 184


 8103 07ba 00       		.sleb128 0
 8104 07bb 0A       		.uleb128 0xa
 8105 07bc 01       		.uleb128 0x1
 8106 07bd 51       		.byte	0x51
 8107 07be 02       		.uleb128 0x2
 8108 07bf 08       		.byte	0x8
 8109 07c0 22       		.byte	0x22
 8110 07c1 00       		.byte	0
 8111 07c2 00       		.byte	0
 8112 07c3 0C       		.uleb128 0xc
 8113 07c4 AC010000 		.4byte	.LASF57
 8114 07c8 01       		.byte	0x1
 8115 07c9 4A02     		.2byte	0x24a
 8116 07cb 00000000 		.4byte	.LFB36
 8117 07cf 14000000 		.4byte	.LFE36-.LFB36
 8118 07d3 01       		.uleb128 0x1
 8119 07d4 9C       		.byte	0x9c
 8120 07d5 FA070000 		.4byte	0x7fa
 8121 07d9 0D       		.uleb128 0xd
 8122 07da D0060000 		.4byte	.LASF49
 8123 07de 01       		.byte	0x1
 8124 07df 4A02     		.2byte	0x24a
 8125 07e1 81000000 		.4byte	0x81
 8126 07e5 10020000 		.4byte	.LLST16
 8127 07e9 09       		.uleb128 0x9
 8128 07ea 0E000000 		.4byte	.LVL67
 8129 07ee 012A0000 		.4byte	0x2a01
 8130 07f2 0A       		.uleb128 0xa
 8131 07f3 01       		.uleb128 0x1
 8132 07f4 51       		.byte	0x51
 8133 07f5 02       		.uleb128 0x2
 8134 07f6 08       		.byte	0x8
 8135 07f7 22       		.byte	0x22
 8136 07f8 00       		.byte	0
 8137 07f9 00       		.byte	0
 8138 07fa 0E       		.uleb128 0xe
 8139 07fb F8120000 		.4byte	.LASF58
 8140 07ff 01       		.byte	0x1
 8141 0800 5602     		.2byte	0x256
 8142 0802 78030000 		.4byte	0x378
 8143 0806 00000000 		.4byte	.LFB37
 8144 080a 24000000 		.4byte	.LFE37-.LFB37
 8145 080e 01       		.uleb128 0x1
 8146 080f 9C       		.byte	0x9c
 8147 0810 30080000 		.4byte	0x830
 8148 0814 09       		.uleb128 0x9
 8149 0815 12000000 		.4byte	.LVL68
 8150 0819 9D290000 		.4byte	0x299d
 8151 081d 0A       		.uleb128 0xa
 8152 081e 01       		.uleb128 0x1
 8153 081f 53       		.byte	0x53
 8154 0820 02       		.uleb128 0x2
 8155 0821 74       		.byte	0x74
 8156 0822 00       		.sleb128 0
 8157 0823 0A       		.uleb128 0xa
 8158 0824 01       		.uleb128 0x1
 8159 0825 52       		.byte	0x52
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 185


 8160 0826 01       		.uleb128 0x1
 8161 0827 37       		.byte	0x37
 8162 0828 0A       		.uleb128 0xa
 8163 0829 01       		.uleb128 0x1
 8164 082a 51       		.byte	0x51
 8165 082b 02       		.uleb128 0x2
 8166 082c 08       		.byte	0x8
 8167 082d 23       		.byte	0x23
 8168 082e 00       		.byte	0
 8169 082f 00       		.byte	0
 8170 0830 0C       		.uleb128 0xc
 8171 0831 75130000 		.4byte	.LASF59
 8172 0835 01       		.byte	0x1
 8173 0836 5F02     		.2byte	0x25f
 8174 0838 00000000 		.4byte	.LFB38
 8175 083c 18000000 		.4byte	.LFE38-.LFB38
 8176 0840 01       		.uleb128 0x1
 8177 0841 9C       		.byte	0x9c
 8178 0842 6C080000 		.4byte	0x86c
 8179 0846 0D       		.uleb128 0xd
 8180 0847 81110000 		.4byte	.LASF34
 8181 084b 01       		.byte	0x1
 8182 084c 5F02     		.2byte	0x25f
 8183 084e 78030000 		.4byte	0x378
 8184 0852 31020000 		.4byte	.LLST17
 8185 0856 09       		.uleb128 0x9
 8186 0857 10000000 		.4byte	.LVL71
 8187 085b C4290000 		.4byte	0x29c4
 8188 085f 0A       		.uleb128 0xa
 8189 0860 01       		.uleb128 0x1
 8190 0861 52       		.byte	0x52
 8191 0862 01       		.uleb128 0x1
 8192 0863 37       		.byte	0x37
 8193 0864 0A       		.uleb128 0xa
 8194 0865 01       		.uleb128 0x1
 8195 0866 51       		.byte	0x51
 8196 0867 02       		.uleb128 0x2
 8197 0868 08       		.byte	0x8
 8198 0869 23       		.byte	0x23
 8199 086a 00       		.byte	0
 8200 086b 00       		.byte	0
 8201 086c 0E       		.uleb128 0xe
 8202 086d F7150000 		.4byte	.LASF60
 8203 0871 01       		.byte	0x1
 8204 0872 6802     		.2byte	0x268
 8205 0874 78030000 		.4byte	0x378
 8206 0878 00000000 		.4byte	.LFB39
 8207 087c 24000000 		.4byte	.LFE39-.LFB39
 8208 0880 01       		.uleb128 0x1
 8209 0881 9C       		.byte	0x9c
 8210 0882 A2080000 		.4byte	0x8a2
 8211 0886 09       		.uleb128 0x9
 8212 0887 12000000 		.4byte	.LVL72
 8213 088b 9D290000 		.4byte	0x299d
 8214 088f 0A       		.uleb128 0xa
 8215 0890 01       		.uleb128 0x1
 8216 0891 53       		.byte	0x53
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 186


 8217 0892 02       		.uleb128 0x2
 8218 0893 74       		.byte	0x74
 8219 0894 00       		.sleb128 0
 8220 0895 0A       		.uleb128 0xa
 8221 0896 01       		.uleb128 0x1
 8222 0897 52       		.byte	0x52
 8223 0898 01       		.uleb128 0x1
 8224 0899 36       		.byte	0x36
 8225 089a 0A       		.uleb128 0xa
 8226 089b 01       		.uleb128 0x1
 8227 089c 51       		.byte	0x51
 8228 089d 02       		.uleb128 0x2
 8229 089e 08       		.byte	0x8
 8230 089f 23       		.byte	0x23
 8231 08a0 00       		.byte	0
 8232 08a1 00       		.byte	0
 8233 08a2 0C       		.uleb128 0xc
 8234 08a3 470F0000 		.4byte	.LASF61
 8235 08a7 01       		.byte	0x1
 8236 08a8 7102     		.2byte	0x271
 8237 08aa 00000000 		.4byte	.LFB40
 8238 08ae 18000000 		.4byte	.LFE40-.LFB40
 8239 08b2 01       		.uleb128 0x1
 8240 08b3 9C       		.byte	0x9c
 8241 08b4 DE080000 		.4byte	0x8de
 8242 08b8 0D       		.uleb128 0xd
 8243 08b9 81110000 		.4byte	.LASF34
 8244 08bd 01       		.byte	0x1
 8245 08be 7102     		.2byte	0x271
 8246 08c0 78030000 		.4byte	0x378
 8247 08c4 52020000 		.4byte	.LLST18
 8248 08c8 09       		.uleb128 0x9
 8249 08c9 10000000 		.4byte	.LVL75
 8250 08cd C4290000 		.4byte	0x29c4
 8251 08d1 0A       		.uleb128 0xa
 8252 08d2 01       		.uleb128 0x1
 8253 08d3 52       		.byte	0x52
 8254 08d4 01       		.uleb128 0x1
 8255 08d5 36       		.byte	0x36
 8256 08d6 0A       		.uleb128 0xa
 8257 08d7 01       		.uleb128 0x1
 8258 08d8 51       		.byte	0x51
 8259 08d9 02       		.uleb128 0x2
 8260 08da 08       		.byte	0x8
 8261 08db 23       		.byte	0x23
 8262 08dc 00       		.byte	0
 8263 08dd 00       		.byte	0
 8264 08de 0E       		.uleb128 0xe
 8265 08df D1090000 		.4byte	.LASF62
 8266 08e3 01       		.byte	0x1
 8267 08e4 7A02     		.2byte	0x27a
 8268 08e6 78030000 		.4byte	0x378
 8269 08ea 00000000 		.4byte	.LFB41
 8270 08ee 24000000 		.4byte	.LFE41-.LFB41
 8271 08f2 01       		.uleb128 0x1
 8272 08f3 9C       		.byte	0x9c
 8273 08f4 14090000 		.4byte	0x914
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 187


 8274 08f8 09       		.uleb128 0x9
 8275 08f9 12000000 		.4byte	.LVL76
 8276 08fd 9D290000 		.4byte	0x299d
 8277 0901 0A       		.uleb128 0xa
 8278 0902 01       		.uleb128 0x1
 8279 0903 53       		.byte	0x53
 8280 0904 02       		.uleb128 0x2
 8281 0905 74       		.byte	0x74
 8282 0906 00       		.sleb128 0
 8283 0907 0A       		.uleb128 0xa
 8284 0908 01       		.uleb128 0x1
 8285 0909 52       		.byte	0x52
 8286 090a 01       		.uleb128 0x1
 8287 090b 35       		.byte	0x35
 8288 090c 0A       		.uleb128 0xa
 8289 090d 01       		.uleb128 0x1
 8290 090e 51       		.byte	0x51
 8291 090f 02       		.uleb128 0x2
 8292 0910 08       		.byte	0x8
 8293 0911 23       		.byte	0x23
 8294 0912 00       		.byte	0
 8295 0913 00       		.byte	0
 8296 0914 0C       		.uleb128 0xc
 8297 0915 4F0A0000 		.4byte	.LASF63
 8298 0919 01       		.byte	0x1
 8299 091a 8302     		.2byte	0x283
 8300 091c 00000000 		.4byte	.LFB42
 8301 0920 18000000 		.4byte	.LFE42-.LFB42
 8302 0924 01       		.uleb128 0x1
 8303 0925 9C       		.byte	0x9c
 8304 0926 50090000 		.4byte	0x950
 8305 092a 0D       		.uleb128 0xd
 8306 092b 81110000 		.4byte	.LASF34
 8307 092f 01       		.byte	0x1
 8308 0930 8302     		.2byte	0x283
 8309 0932 78030000 		.4byte	0x378
 8310 0936 73020000 		.4byte	.LLST19
 8311 093a 09       		.uleb128 0x9
 8312 093b 10000000 		.4byte	.LVL79
 8313 093f C4290000 		.4byte	0x29c4
 8314 0943 0A       		.uleb128 0xa
 8315 0944 01       		.uleb128 0x1
 8316 0945 52       		.byte	0x52
 8317 0946 01       		.uleb128 0x1
 8318 0947 35       		.byte	0x35
 8319 0948 0A       		.uleb128 0xa
 8320 0949 01       		.uleb128 0x1
 8321 094a 51       		.byte	0x51
 8322 094b 02       		.uleb128 0x2
 8323 094c 08       		.byte	0x8
 8324 094d 23       		.byte	0x23
 8325 094e 00       		.byte	0
 8326 094f 00       		.byte	0
 8327 0950 0E       		.uleb128 0xe
 8328 0951 13040000 		.4byte	.LASF64
 8329 0955 01       		.byte	0x1
 8330 0956 8C02     		.2byte	0x28c
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 188


 8331 0958 78030000 		.4byte	0x378
 8332 095c 00000000 		.4byte	.LFB43
 8333 0960 24000000 		.4byte	.LFE43-.LFB43
 8334 0964 01       		.uleb128 0x1
 8335 0965 9C       		.byte	0x9c
 8336 0966 86090000 		.4byte	0x986
 8337 096a 09       		.uleb128 0x9
 8338 096b 12000000 		.4byte	.LVL80
 8339 096f 9D290000 		.4byte	0x299d
 8340 0973 0A       		.uleb128 0xa
 8341 0974 01       		.uleb128 0x1
 8342 0975 53       		.byte	0x53
 8343 0976 02       		.uleb128 0x2
 8344 0977 74       		.byte	0x74
 8345 0978 00       		.sleb128 0
 8346 0979 0A       		.uleb128 0xa
 8347 097a 01       		.uleb128 0x1
 8348 097b 52       		.byte	0x52
 8349 097c 01       		.uleb128 0x1
 8350 097d 34       		.byte	0x34
 8351 097e 0A       		.uleb128 0xa
 8352 097f 01       		.uleb128 0x1
 8353 0980 51       		.byte	0x51
 8354 0981 02       		.uleb128 0x2
 8355 0982 08       		.byte	0x8
 8356 0983 23       		.byte	0x23
 8357 0984 00       		.byte	0
 8358 0985 00       		.byte	0
 8359 0986 0C       		.uleb128 0xc
 8360 0987 03150000 		.4byte	.LASF65
 8361 098b 01       		.byte	0x1
 8362 098c 9502     		.2byte	0x295
 8363 098e 00000000 		.4byte	.LFB44
 8364 0992 18000000 		.4byte	.LFE44-.LFB44
 8365 0996 01       		.uleb128 0x1
 8366 0997 9C       		.byte	0x9c
 8367 0998 C2090000 		.4byte	0x9c2
 8368 099c 0D       		.uleb128 0xd
 8369 099d 81110000 		.4byte	.LASF34
 8370 09a1 01       		.byte	0x1
 8371 09a2 9502     		.2byte	0x295
 8372 09a4 78030000 		.4byte	0x378
 8373 09a8 94020000 		.4byte	.LLST20
 8374 09ac 09       		.uleb128 0x9
 8375 09ad 10000000 		.4byte	.LVL83
 8376 09b1 C4290000 		.4byte	0x29c4
 8377 09b5 0A       		.uleb128 0xa
 8378 09b6 01       		.uleb128 0x1
 8379 09b7 52       		.byte	0x52
 8380 09b8 01       		.uleb128 0x1
 8381 09b9 34       		.byte	0x34
 8382 09ba 0A       		.uleb128 0xa
 8383 09bb 01       		.uleb128 0x1
 8384 09bc 51       		.byte	0x51
 8385 09bd 02       		.uleb128 0x2
 8386 09be 08       		.byte	0x8
 8387 09bf 23       		.byte	0x23
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 189


 8388 09c0 00       		.byte	0
 8389 09c1 00       		.byte	0
 8390 09c2 0E       		.uleb128 0xe
 8391 09c3 CC080000 		.4byte	.LASF66
 8392 09c7 01       		.byte	0x1
 8393 09c8 9F02     		.2byte	0x29f
 8394 09ca 78030000 		.4byte	0x378
 8395 09ce 00000000 		.4byte	.LFB45
 8396 09d2 24000000 		.4byte	.LFE45-.LFB45
 8397 09d6 01       		.uleb128 0x1
 8398 09d7 9C       		.byte	0x9c
 8399 09d8 F8090000 		.4byte	0x9f8
 8400 09dc 09       		.uleb128 0x9
 8401 09dd 12000000 		.4byte	.LVL84
 8402 09e1 9D290000 		.4byte	0x299d
 8403 09e5 0A       		.uleb128 0xa
 8404 09e6 01       		.uleb128 0x1
 8405 09e7 53       		.byte	0x53
 8406 09e8 02       		.uleb128 0x2
 8407 09e9 74       		.byte	0x74
 8408 09ea 00       		.sleb128 0
 8409 09eb 0A       		.uleb128 0xa
 8410 09ec 01       		.uleb128 0x1
 8411 09ed 52       		.byte	0x52
 8412 09ee 01       		.uleb128 0x1
 8413 09ef 33       		.byte	0x33
 8414 09f0 0A       		.uleb128 0xa
 8415 09f1 01       		.uleb128 0x1
 8416 09f2 51       		.byte	0x51
 8417 09f3 02       		.uleb128 0x2
 8418 09f4 08       		.byte	0x8
 8419 09f5 23       		.byte	0x23
 8420 09f6 00       		.byte	0
 8421 09f7 00       		.byte	0
 8422 09f8 0C       		.uleb128 0xc
 8423 09f9 2F090000 		.4byte	.LASF67
 8424 09fd 01       		.byte	0x1
 8425 09fe A802     		.2byte	0x2a8
 8426 0a00 00000000 		.4byte	.LFB46
 8427 0a04 18000000 		.4byte	.LFE46-.LFB46
 8428 0a08 01       		.uleb128 0x1
 8429 0a09 9C       		.byte	0x9c
 8430 0a0a 340A0000 		.4byte	0xa34
 8431 0a0e 0D       		.uleb128 0xd
 8432 0a0f 81110000 		.4byte	.LASF34
 8433 0a13 01       		.byte	0x1
 8434 0a14 A802     		.2byte	0x2a8
 8435 0a16 78030000 		.4byte	0x378
 8436 0a1a B5020000 		.4byte	.LLST21
 8437 0a1e 09       		.uleb128 0x9
 8438 0a1f 10000000 		.4byte	.LVL87
 8439 0a23 C4290000 		.4byte	0x29c4
 8440 0a27 0A       		.uleb128 0xa
 8441 0a28 01       		.uleb128 0x1
 8442 0a29 52       		.byte	0x52
 8443 0a2a 01       		.uleb128 0x1
 8444 0a2b 33       		.byte	0x33
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 190


 8445 0a2c 0A       		.uleb128 0xa
 8446 0a2d 01       		.uleb128 0x1
 8447 0a2e 51       		.byte	0x51
 8448 0a2f 02       		.uleb128 0x2
 8449 0a30 08       		.byte	0x8
 8450 0a31 23       		.byte	0x23
 8451 0a32 00       		.byte	0
 8452 0a33 00       		.byte	0
 8453 0a34 0E       		.uleb128 0xe
 8454 0a35 E8080000 		.4byte	.LASF68
 8455 0a39 01       		.byte	0x1
 8456 0a3a B102     		.2byte	0x2b1
 8457 0a3c 78030000 		.4byte	0x378
 8458 0a40 00000000 		.4byte	.LFB47
 8459 0a44 24000000 		.4byte	.LFE47-.LFB47
 8460 0a48 01       		.uleb128 0x1
 8461 0a49 9C       		.byte	0x9c
 8462 0a4a 6A0A0000 		.4byte	0xa6a
 8463 0a4e 09       		.uleb128 0x9
 8464 0a4f 12000000 		.4byte	.LVL88
 8465 0a53 9D290000 		.4byte	0x299d
 8466 0a57 0A       		.uleb128 0xa
 8467 0a58 01       		.uleb128 0x1
 8468 0a59 53       		.byte	0x53
 8469 0a5a 02       		.uleb128 0x2
 8470 0a5b 74       		.byte	0x74
 8471 0a5c 00       		.sleb128 0
 8472 0a5d 0A       		.uleb128 0xa
 8473 0a5e 01       		.uleb128 0x1
 8474 0a5f 52       		.byte	0x52
 8475 0a60 01       		.uleb128 0x1
 8476 0a61 32       		.byte	0x32
 8477 0a62 0A       		.uleb128 0xa
 8478 0a63 01       		.uleb128 0x1
 8479 0a64 51       		.byte	0x51
 8480 0a65 02       		.uleb128 0x2
 8481 0a66 08       		.byte	0x8
 8482 0a67 23       		.byte	0x23
 8483 0a68 00       		.byte	0
 8484 0a69 00       		.byte	0
 8485 0a6a 0C       		.uleb128 0xc
 8486 0a6b DB100000 		.4byte	.LASF69
 8487 0a6f 01       		.byte	0x1
 8488 0a70 BA02     		.2byte	0x2ba
 8489 0a72 00000000 		.4byte	.LFB48
 8490 0a76 18000000 		.4byte	.LFE48-.LFB48
 8491 0a7a 01       		.uleb128 0x1
 8492 0a7b 9C       		.byte	0x9c
 8493 0a7c A60A0000 		.4byte	0xaa6
 8494 0a80 0D       		.uleb128 0xd
 8495 0a81 81110000 		.4byte	.LASF34
 8496 0a85 01       		.byte	0x1
 8497 0a86 BA02     		.2byte	0x2ba
 8498 0a88 78030000 		.4byte	0x378
 8499 0a8c D6020000 		.4byte	.LLST22
 8500 0a90 09       		.uleb128 0x9
 8501 0a91 10000000 		.4byte	.LVL91
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 191


 8502 0a95 C4290000 		.4byte	0x29c4
 8503 0a99 0A       		.uleb128 0xa
 8504 0a9a 01       		.uleb128 0x1
 8505 0a9b 52       		.byte	0x52
 8506 0a9c 01       		.uleb128 0x1
 8507 0a9d 32       		.byte	0x32
 8508 0a9e 0A       		.uleb128 0xa
 8509 0a9f 01       		.uleb128 0x1
 8510 0aa0 51       		.byte	0x51
 8511 0aa1 02       		.uleb128 0x2
 8512 0aa2 08       		.byte	0x8
 8513 0aa3 23       		.byte	0x23
 8514 0aa4 00       		.byte	0
 8515 0aa5 00       		.byte	0
 8516 0aa6 0E       		.uleb128 0xe
 8517 0aa7 55000000 		.4byte	.LASF70
 8518 0aab 01       		.byte	0x1
 8519 0aac C302     		.2byte	0x2c3
 8520 0aae 78030000 		.4byte	0x378
 8521 0ab2 00000000 		.4byte	.LFB49
 8522 0ab6 24000000 		.4byte	.LFE49-.LFB49
 8523 0aba 01       		.uleb128 0x1
 8524 0abb 9C       		.byte	0x9c
 8525 0abc DC0A0000 		.4byte	0xadc
 8526 0ac0 09       		.uleb128 0x9
 8527 0ac1 12000000 		.4byte	.LVL92
 8528 0ac5 9D290000 		.4byte	0x299d
 8529 0ac9 0A       		.uleb128 0xa
 8530 0aca 01       		.uleb128 0x1
 8531 0acb 53       		.byte	0x53
 8532 0acc 02       		.uleb128 0x2
 8533 0acd 74       		.byte	0x74
 8534 0ace 00       		.sleb128 0
 8535 0acf 0A       		.uleb128 0xa
 8536 0ad0 01       		.uleb128 0x1
 8537 0ad1 52       		.byte	0x52
 8538 0ad2 01       		.uleb128 0x1
 8539 0ad3 31       		.byte	0x31
 8540 0ad4 0A       		.uleb128 0xa
 8541 0ad5 01       		.uleb128 0x1
 8542 0ad6 51       		.byte	0x51
 8543 0ad7 02       		.uleb128 0x2
 8544 0ad8 08       		.byte	0x8
 8545 0ad9 23       		.byte	0x23
 8546 0ada 00       		.byte	0
 8547 0adb 00       		.byte	0
 8548 0adc 0C       		.uleb128 0xc
 8549 0add FF070000 		.4byte	.LASF71
 8550 0ae1 01       		.byte	0x1
 8551 0ae2 CC02     		.2byte	0x2cc
 8552 0ae4 00000000 		.4byte	.LFB50
 8553 0ae8 18000000 		.4byte	.LFE50-.LFB50
 8554 0aec 01       		.uleb128 0x1
 8555 0aed 9C       		.byte	0x9c
 8556 0aee 180B0000 		.4byte	0xb18
 8557 0af2 0D       		.uleb128 0xd
 8558 0af3 81110000 		.4byte	.LASF34
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 192


 8559 0af7 01       		.byte	0x1
 8560 0af8 CC02     		.2byte	0x2cc
 8561 0afa 78030000 		.4byte	0x378
 8562 0afe F7020000 		.4byte	.LLST23
 8563 0b02 09       		.uleb128 0x9
 8564 0b03 10000000 		.4byte	.LVL95
 8565 0b07 C4290000 		.4byte	0x29c4
 8566 0b0b 0A       		.uleb128 0xa
 8567 0b0c 01       		.uleb128 0x1
 8568 0b0d 52       		.byte	0x52
 8569 0b0e 01       		.uleb128 0x1
 8570 0b0f 31       		.byte	0x31
 8571 0b10 0A       		.uleb128 0xa
 8572 0b11 01       		.uleb128 0x1
 8573 0b12 51       		.byte	0x51
 8574 0b13 02       		.uleb128 0x2
 8575 0b14 08       		.byte	0x8
 8576 0b15 23       		.byte	0x23
 8577 0b16 00       		.byte	0
 8578 0b17 00       		.byte	0
 8579 0b18 0E       		.uleb128 0xe
 8580 0b19 32160000 		.4byte	.LASF72
 8581 0b1d 01       		.byte	0x1
 8582 0b1e D502     		.2byte	0x2d5
 8583 0b20 78030000 		.4byte	0x378
 8584 0b24 00000000 		.4byte	.LFB51
 8585 0b28 24000000 		.4byte	.LFE51-.LFB51
 8586 0b2c 01       		.uleb128 0x1
 8587 0b2d 9C       		.byte	0x9c
 8588 0b2e 4E0B0000 		.4byte	0xb4e
 8589 0b32 09       		.uleb128 0x9
 8590 0b33 12000000 		.4byte	.LVL96
 8591 0b37 9D290000 		.4byte	0x299d
 8592 0b3b 0A       		.uleb128 0xa
 8593 0b3c 01       		.uleb128 0x1
 8594 0b3d 53       		.byte	0x53
 8595 0b3e 02       		.uleb128 0x2
 8596 0b3f 74       		.byte	0x74
 8597 0b40 00       		.sleb128 0
 8598 0b41 0A       		.uleb128 0xa
 8599 0b42 01       		.uleb128 0x1
 8600 0b43 52       		.byte	0x52
 8601 0b44 01       		.uleb128 0x1
 8602 0b45 30       		.byte	0x30
 8603 0b46 0A       		.uleb128 0xa
 8604 0b47 01       		.uleb128 0x1
 8605 0b48 51       		.byte	0x51
 8606 0b49 02       		.uleb128 0x2
 8607 0b4a 08       		.byte	0x8
 8608 0b4b 23       		.byte	0x23
 8609 0b4c 00       		.byte	0
 8610 0b4d 00       		.byte	0
 8611 0b4e 0C       		.uleb128 0xc
 8612 0b4f C1160000 		.4byte	.LASF73
 8613 0b53 01       		.byte	0x1
 8614 0b54 DE02     		.2byte	0x2de
 8615 0b56 00000000 		.4byte	.LFB52
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 193


 8616 0b5a 18000000 		.4byte	.LFE52-.LFB52
 8617 0b5e 01       		.uleb128 0x1
 8618 0b5f 9C       		.byte	0x9c
 8619 0b60 8A0B0000 		.4byte	0xb8a
 8620 0b64 0D       		.uleb128 0xd
 8621 0b65 81110000 		.4byte	.LASF34
 8622 0b69 01       		.byte	0x1
 8623 0b6a DE02     		.2byte	0x2de
 8624 0b6c 78030000 		.4byte	0x378
 8625 0b70 18030000 		.4byte	.LLST24
 8626 0b74 09       		.uleb128 0x9
 8627 0b75 10000000 		.4byte	.LVL99
 8628 0b79 C4290000 		.4byte	0x29c4
 8629 0b7d 0A       		.uleb128 0xa
 8630 0b7e 01       		.uleb128 0x1
 8631 0b7f 52       		.byte	0x52
 8632 0b80 01       		.uleb128 0x1
 8633 0b81 30       		.byte	0x30
 8634 0b82 0A       		.uleb128 0xa
 8635 0b83 01       		.uleb128 0x1
 8636 0b84 51       		.byte	0x51
 8637 0b85 02       		.uleb128 0x2
 8638 0b86 08       		.byte	0x8
 8639 0b87 23       		.byte	0x23
 8640 0b88 00       		.byte	0
 8641 0b89 00       		.byte	0
 8642 0b8a 0E       		.uleb128 0xe
 8643 0b8b 72000000 		.4byte	.LASF74
 8644 0b8f 01       		.byte	0x1
 8645 0b90 F302     		.2byte	0x2f3
 8646 0b92 78030000 		.4byte	0x378
 8647 0b96 00000000 		.4byte	.LFB53
 8648 0b9a 24000000 		.4byte	.LFE53-.LFB53
 8649 0b9e 01       		.uleb128 0x1
 8650 0b9f 9C       		.byte	0x9c
 8651 0ba0 C00B0000 		.4byte	0xbc0
 8652 0ba4 09       		.uleb128 0x9
 8653 0ba5 12000000 		.4byte	.LVL100
 8654 0ba9 9D290000 		.4byte	0x299d
 8655 0bad 0A       		.uleb128 0xa
 8656 0bae 01       		.uleb128 0x1
 8657 0baf 53       		.byte	0x53
 8658 0bb0 02       		.uleb128 0x2
 8659 0bb1 74       		.byte	0x74
 8660 0bb2 00       		.sleb128 0
 8661 0bb3 0A       		.uleb128 0xa
 8662 0bb4 01       		.uleb128 0x1
 8663 0bb5 52       		.byte	0x52
 8664 0bb6 01       		.uleb128 0x1
 8665 0bb7 37       		.byte	0x37
 8666 0bb8 0A       		.uleb128 0xa
 8667 0bb9 01       		.uleb128 0x1
 8668 0bba 51       		.byte	0x51
 8669 0bbb 02       		.uleb128 0x2
 8670 0bbc 08       		.byte	0x8
 8671 0bbd 24       		.byte	0x24
 8672 0bbe 00       		.byte	0
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 194


 8673 0bbf 00       		.byte	0
 8674 0bc0 0C       		.uleb128 0xc
 8675 0bc1 BD100000 		.4byte	.LASF75
 8676 0bc5 01       		.byte	0x1
 8677 0bc6 FC02     		.2byte	0x2fc
 8678 0bc8 00000000 		.4byte	.LFB54
 8679 0bcc 18000000 		.4byte	.LFE54-.LFB54
 8680 0bd0 01       		.uleb128 0x1
 8681 0bd1 9C       		.byte	0x9c
 8682 0bd2 FC0B0000 		.4byte	0xbfc
 8683 0bd6 0D       		.uleb128 0xd
 8684 0bd7 81110000 		.4byte	.LASF34
 8685 0bdb 01       		.byte	0x1
 8686 0bdc FC02     		.2byte	0x2fc
 8687 0bde 78030000 		.4byte	0x378
 8688 0be2 39030000 		.4byte	.LLST25
 8689 0be6 09       		.uleb128 0x9
 8690 0be7 10000000 		.4byte	.LVL103
 8691 0beb C4290000 		.4byte	0x29c4
 8692 0bef 0A       		.uleb128 0xa
 8693 0bf0 01       		.uleb128 0x1
 8694 0bf1 52       		.byte	0x52
 8695 0bf2 01       		.uleb128 0x1
 8696 0bf3 37       		.byte	0x37
 8697 0bf4 0A       		.uleb128 0xa
 8698 0bf5 01       		.uleb128 0x1
 8699 0bf6 51       		.byte	0x51
 8700 0bf7 02       		.uleb128 0x2
 8701 0bf8 08       		.byte	0x8
 8702 0bf9 24       		.byte	0x24
 8703 0bfa 00       		.byte	0
 8704 0bfb 00       		.byte	0
 8705 0bfc 0E       		.uleb128 0xe
 8706 0bfd 69100000 		.4byte	.LASF76
 8707 0c01 01       		.byte	0x1
 8708 0c02 0A03     		.2byte	0x30a
 8709 0c04 78030000 		.4byte	0x378
 8710 0c08 00000000 		.4byte	.LFB55
 8711 0c0c 24000000 		.4byte	.LFE55-.LFB55
 8712 0c10 01       		.uleb128 0x1
 8713 0c11 9C       		.byte	0x9c
 8714 0c12 320C0000 		.4byte	0xc32
 8715 0c16 09       		.uleb128 0x9
 8716 0c17 12000000 		.4byte	.LVL104
 8717 0c1b 9D290000 		.4byte	0x299d
 8718 0c1f 0A       		.uleb128 0xa
 8719 0c20 01       		.uleb128 0x1
 8720 0c21 53       		.byte	0x53
 8721 0c22 02       		.uleb128 0x2
 8722 0c23 74       		.byte	0x74
 8723 0c24 00       		.sleb128 0
 8724 0c25 0A       		.uleb128 0xa
 8725 0c26 01       		.uleb128 0x1
 8726 0c27 52       		.byte	0x52
 8727 0c28 01       		.uleb128 0x1
 8728 0c29 36       		.byte	0x36
 8729 0c2a 0A       		.uleb128 0xa
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 195


 8730 0c2b 01       		.uleb128 0x1
 8731 0c2c 51       		.byte	0x51
 8732 0c2d 02       		.uleb128 0x2
 8733 0c2e 08       		.byte	0x8
 8734 0c2f 24       		.byte	0x24
 8735 0c30 00       		.byte	0
 8736 0c31 00       		.byte	0
 8737 0c32 0C       		.uleb128 0xc
 8738 0c33 59070000 		.4byte	.LASF77
 8739 0c37 01       		.byte	0x1
 8740 0c38 1303     		.2byte	0x313
 8741 0c3a 00000000 		.4byte	.LFB56
 8742 0c3e 18000000 		.4byte	.LFE56-.LFB56
 8743 0c42 01       		.uleb128 0x1
 8744 0c43 9C       		.byte	0x9c
 8745 0c44 6E0C0000 		.4byte	0xc6e
 8746 0c48 0D       		.uleb128 0xd
 8747 0c49 81110000 		.4byte	.LASF34
 8748 0c4d 01       		.byte	0x1
 8749 0c4e 1303     		.2byte	0x313
 8750 0c50 78030000 		.4byte	0x378
 8751 0c54 5A030000 		.4byte	.LLST26
 8752 0c58 09       		.uleb128 0x9
 8753 0c59 10000000 		.4byte	.LVL107
 8754 0c5d C4290000 		.4byte	0x29c4
 8755 0c61 0A       		.uleb128 0xa
 8756 0c62 01       		.uleb128 0x1
 8757 0c63 52       		.byte	0x52
 8758 0c64 01       		.uleb128 0x1
 8759 0c65 36       		.byte	0x36
 8760 0c66 0A       		.uleb128 0xa
 8761 0c67 01       		.uleb128 0x1
 8762 0c68 51       		.byte	0x51
 8763 0c69 02       		.uleb128 0x2
 8764 0c6a 08       		.byte	0x8
 8765 0c6b 24       		.byte	0x24
 8766 0c6c 00       		.byte	0
 8767 0c6d 00       		.byte	0
 8768 0c6e 0E       		.uleb128 0xe
 8769 0c6f 89110000 		.4byte	.LASF78
 8770 0c73 01       		.byte	0x1
 8771 0c74 1C03     		.2byte	0x31c
 8772 0c76 78030000 		.4byte	0x378
 8773 0c7a 00000000 		.4byte	.LFB57
 8774 0c7e 24000000 		.4byte	.LFE57-.LFB57
 8775 0c82 01       		.uleb128 0x1
 8776 0c83 9C       		.byte	0x9c
 8777 0c84 A40C0000 		.4byte	0xca4
 8778 0c88 09       		.uleb128 0x9
 8779 0c89 12000000 		.4byte	.LVL108
 8780 0c8d 9D290000 		.4byte	0x299d
 8781 0c91 0A       		.uleb128 0xa
 8782 0c92 01       		.uleb128 0x1
 8783 0c93 53       		.byte	0x53
 8784 0c94 02       		.uleb128 0x2
 8785 0c95 74       		.byte	0x74
 8786 0c96 00       		.sleb128 0
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 196


 8787 0c97 0A       		.uleb128 0xa
 8788 0c98 01       		.uleb128 0x1
 8789 0c99 52       		.byte	0x52
 8790 0c9a 01       		.uleb128 0x1
 8791 0c9b 35       		.byte	0x35
 8792 0c9c 0A       		.uleb128 0xa
 8793 0c9d 01       		.uleb128 0x1
 8794 0c9e 51       		.byte	0x51
 8795 0c9f 02       		.uleb128 0x2
 8796 0ca0 08       		.byte	0x8
 8797 0ca1 24       		.byte	0x24
 8798 0ca2 00       		.byte	0
 8799 0ca3 00       		.byte	0
 8800 0ca4 0C       		.uleb128 0xc
 8801 0ca5 17120000 		.4byte	.LASF79
 8802 0ca9 01       		.byte	0x1
 8803 0caa 2503     		.2byte	0x325
 8804 0cac 00000000 		.4byte	.LFB58
 8805 0cb0 18000000 		.4byte	.LFE58-.LFB58
 8806 0cb4 01       		.uleb128 0x1
 8807 0cb5 9C       		.byte	0x9c
 8808 0cb6 E00C0000 		.4byte	0xce0
 8809 0cba 0D       		.uleb128 0xd
 8810 0cbb 81110000 		.4byte	.LASF34
 8811 0cbf 01       		.byte	0x1
 8812 0cc0 2503     		.2byte	0x325
 8813 0cc2 78030000 		.4byte	0x378
 8814 0cc6 7B030000 		.4byte	.LLST27
 8815 0cca 09       		.uleb128 0x9
 8816 0ccb 10000000 		.4byte	.LVL111
 8817 0ccf C4290000 		.4byte	0x29c4
 8818 0cd3 0A       		.uleb128 0xa
 8819 0cd4 01       		.uleb128 0x1
 8820 0cd5 52       		.byte	0x52
 8821 0cd6 01       		.uleb128 0x1
 8822 0cd7 35       		.byte	0x35
 8823 0cd8 0A       		.uleb128 0xa
 8824 0cd9 01       		.uleb128 0x1
 8825 0cda 51       		.byte	0x51
 8826 0cdb 02       		.uleb128 0x2
 8827 0cdc 08       		.byte	0x8
 8828 0cdd 24       		.byte	0x24
 8829 0cde 00       		.byte	0
 8830 0cdf 00       		.byte	0
 8831 0ce0 0E       		.uleb128 0xe
 8832 0ce1 3A020000 		.4byte	.LASF80
 8833 0ce5 01       		.byte	0x1
 8834 0ce6 3203     		.2byte	0x332
 8835 0ce8 78030000 		.4byte	0x378
 8836 0cec 00000000 		.4byte	.LFB59
 8837 0cf0 24000000 		.4byte	.LFE59-.LFB59
 8838 0cf4 01       		.uleb128 0x1
 8839 0cf5 9C       		.byte	0x9c
 8840 0cf6 160D0000 		.4byte	0xd16
 8841 0cfa 09       		.uleb128 0x9
 8842 0cfb 12000000 		.4byte	.LVL112
 8843 0cff 9D290000 		.4byte	0x299d
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 197


 8844 0d03 0A       		.uleb128 0xa
 8845 0d04 01       		.uleb128 0x1
 8846 0d05 53       		.byte	0x53
 8847 0d06 02       		.uleb128 0x2
 8848 0d07 74       		.byte	0x74
 8849 0d08 00       		.sleb128 0
 8850 0d09 0A       		.uleb128 0xa
 8851 0d0a 01       		.uleb128 0x1
 8852 0d0b 52       		.byte	0x52
 8853 0d0c 01       		.uleb128 0x1
 8854 0d0d 34       		.byte	0x34
 8855 0d0e 0A       		.uleb128 0xa
 8856 0d0f 01       		.uleb128 0x1
 8857 0d10 51       		.byte	0x51
 8858 0d11 02       		.uleb128 0x2
 8859 0d12 08       		.byte	0x8
 8860 0d13 24       		.byte	0x24
 8861 0d14 00       		.byte	0
 8862 0d15 00       		.byte	0
 8863 0d16 0C       		.uleb128 0xc
 8864 0d17 4A130000 		.4byte	.LASF81
 8865 0d1b 01       		.byte	0x1
 8866 0d1c 3B03     		.2byte	0x33b
 8867 0d1e 00000000 		.4byte	.LFB60
 8868 0d22 18000000 		.4byte	.LFE60-.LFB60
 8869 0d26 01       		.uleb128 0x1
 8870 0d27 9C       		.byte	0x9c
 8871 0d28 520D0000 		.4byte	0xd52
 8872 0d2c 0D       		.uleb128 0xd
 8873 0d2d 81110000 		.4byte	.LASF34
 8874 0d31 01       		.byte	0x1
 8875 0d32 3B03     		.2byte	0x33b
 8876 0d34 78030000 		.4byte	0x378
 8877 0d38 9C030000 		.4byte	.LLST28
 8878 0d3c 09       		.uleb128 0x9
 8879 0d3d 10000000 		.4byte	.LVL115
 8880 0d41 C4290000 		.4byte	0x29c4
 8881 0d45 0A       		.uleb128 0xa
 8882 0d46 01       		.uleb128 0x1
 8883 0d47 52       		.byte	0x52
 8884 0d48 01       		.uleb128 0x1
 8885 0d49 34       		.byte	0x34
 8886 0d4a 0A       		.uleb128 0xa
 8887 0d4b 01       		.uleb128 0x1
 8888 0d4c 51       		.byte	0x51
 8889 0d4d 02       		.uleb128 0x2
 8890 0d4e 08       		.byte	0x8
 8891 0d4f 24       		.byte	0x24
 8892 0d50 00       		.byte	0
 8893 0d51 00       		.byte	0
 8894 0d52 0E       		.uleb128 0xe
 8895 0d53 B1050000 		.4byte	.LASF82
 8896 0d57 01       		.byte	0x1
 8897 0d58 5B03     		.2byte	0x35b
 8898 0d5a 81000000 		.4byte	0x81
 8899 0d5e 00000000 		.4byte	.LFB61
 8900 0d62 24000000 		.4byte	.LFE61-.LFB61
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 198


 8901 0d66 01       		.uleb128 0x1
 8902 0d67 9C       		.byte	0x9c
 8903 0d68 8E0D0000 		.4byte	0xd8e
 8904 0d6c 09       		.uleb128 0x9
 8905 0d6d 16000000 		.4byte	.LVL116
 8906 0d71 1D2A0000 		.4byte	0x2a1d
 8907 0d75 0A       		.uleb128 0xa
 8908 0d76 01       		.uleb128 0x1
 8909 0d77 53       		.byte	0x53
 8910 0d78 01       		.uleb128 0x1
 8911 0d79 34       		.byte	0x34
 8912 0d7a 0A       		.uleb128 0xa
 8913 0d7b 01       		.uleb128 0x1
 8914 0d7c 52       		.byte	0x52
 8915 0d7d 01       		.uleb128 0x1
 8916 0d7e 33       		.byte	0x33
 8917 0d7f 0A       		.uleb128 0xa
 8918 0d80 01       		.uleb128 0x1
 8919 0d81 51       		.byte	0x51
 8920 0d82 02       		.uleb128 0x2
 8921 0d83 08       		.byte	0x8
 8922 0d84 24       		.byte	0x24
 8923 0d85 0A       		.uleb128 0xa
 8924 0d86 02       		.uleb128 0x2
 8925 0d87 7D       		.byte	0x7d
 8926 0d88 00       		.sleb128 0
 8927 0d89 02       		.uleb128 0x2
 8928 0d8a 74       		.byte	0x74
 8929 0d8b 00       		.sleb128 0
 8930 0d8c 00       		.byte	0
 8931 0d8d 00       		.byte	0
 8932 0d8e 0C       		.uleb128 0xc
 8933 0d8f F8060000 		.4byte	.LASF83
 8934 0d93 01       		.byte	0x1
 8935 0d94 6303     		.2byte	0x363
 8936 0d96 00000000 		.4byte	.LFB62
 8937 0d9a 20000000 		.4byte	.LFE62-.LFB62
 8938 0d9e 01       		.uleb128 0x1
 8939 0d9f 9C       		.byte	0x9c
 8940 0da0 CF0D0000 		.4byte	0xdcf
 8941 0da4 0D       		.uleb128 0xd
 8942 0da5 B7150000 		.4byte	.LASF84
 8943 0da9 01       		.byte	0x1
 8944 0daa 6303     		.2byte	0x363
 8945 0dac 81000000 		.4byte	0x81
 8946 0db0 BD030000 		.4byte	.LLST29
 8947 0db4 09       		.uleb128 0x9
 8948 0db5 16000000 		.4byte	.LVL119
 8949 0db9 432A0000 		.4byte	0x2a43
 8950 0dbd 0A       		.uleb128 0xa
 8951 0dbe 01       		.uleb128 0x1
 8952 0dbf 53       		.byte	0x53
 8953 0dc0 01       		.uleb128 0x1
 8954 0dc1 34       		.byte	0x34
 8955 0dc2 0A       		.uleb128 0xa
 8956 0dc3 01       		.uleb128 0x1
 8957 0dc4 52       		.byte	0x52
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 199


 8958 0dc5 01       		.uleb128 0x1
 8959 0dc6 33       		.byte	0x33
 8960 0dc7 0A       		.uleb128 0xa
 8961 0dc8 01       		.uleb128 0x1
 8962 0dc9 51       		.byte	0x51
 8963 0dca 02       		.uleb128 0x2
 8964 0dcb 08       		.byte	0x8
 8965 0dcc 24       		.byte	0x24
 8966 0dcd 00       		.byte	0
 8967 0dce 00       		.byte	0
 8968 0dcf 0F       		.uleb128 0xf
 8969 0dd0 420C0000 		.4byte	.LASF86
 8970 0dd4 01       		.byte	0x1
 8971 0dd5 9203     		.2byte	0x392
 8972 0dd7 81000000 		.4byte	0x81
 8973 0ddb 00000000 		.4byte	.LFB63
 8974 0ddf 2C000000 		.4byte	.LFE63-.LFB63
 8975 0de3 01       		.uleb128 0x1
 8976 0de4 9C       		.byte	0x9c
 8977 0de5 0A0E0000 		.4byte	0xe0a
 8978 0de9 10       		.uleb128 0x10
 8979 0dea 6E756D00 		.ascii	"num\000"
 8980 0dee 01       		.byte	0x1
 8981 0def 9203     		.2byte	0x392
 8982 0df1 81000000 		.4byte	0x81
 8983 0df5 DE030000 		.4byte	.LLST30
 8984 0df9 09       		.uleb128 0x9
 8985 0dfa 1C000000 		.4byte	.LVL122
 8986 0dfe E5290000 		.4byte	0x29e5
 8987 0e02 0A       		.uleb128 0xa
 8988 0e03 01       		.uleb128 0x1
 8989 0e04 52       		.byte	0x52
 8990 0e05 02       		.uleb128 0x2
 8991 0e06 74       		.byte	0x74
 8992 0e07 00       		.sleb128 0
 8993 0e08 00       		.byte	0
 8994 0e09 00       		.byte	0
 8995 0e0a 0C       		.uleb128 0xc
 8996 0e0b 4F160000 		.4byte	.LASF85
 8997 0e0f 01       		.byte	0x1
 8998 0e10 9D03     		.2byte	0x39d
 8999 0e12 00000000 		.4byte	.LFB64
 9000 0e16 24000000 		.4byte	.LFE64-.LFB64
 9001 0e1a 01       		.uleb128 0x1
 9002 0e1b 9C       		.byte	0x9c
 9003 0e1c 4A0E0000 		.4byte	0xe4a
 9004 0e20 10       		.uleb128 0x10
 9005 0e21 6E756D00 		.ascii	"num\000"
 9006 0e25 01       		.byte	0x1
 9007 0e26 9D03     		.2byte	0x39d
 9008 0e28 81000000 		.4byte	0x81
 9009 0e2c 18040000 		.4byte	.LLST31
 9010 0e30 0D       		.uleb128 0xd
 9011 0e31 1D0C0000 		.4byte	.LASF16
 9012 0e35 01       		.byte	0x1
 9013 0e36 9D03     		.2byte	0x39d
 9014 0e38 81000000 		.4byte	0x81
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 200


 9015 0e3c 44040000 		.4byte	.LLST32
 9016 0e40 11       		.uleb128 0x11
 9017 0e41 1A000000 		.4byte	.LVL128
 9018 0e45 012A0000 		.4byte	0x2a01
 9019 0e49 00       		.byte	0
 9020 0e4a 0F       		.uleb128 0xf
 9021 0e4b 68110000 		.4byte	.LASF87
 9022 0e4f 01       		.byte	0x1
 9023 0e50 AC03     		.2byte	0x3ac
 9024 0e52 81000000 		.4byte	0x81
 9025 0e56 00000000 		.4byte	.LFB65
 9026 0e5a 2C000000 		.4byte	.LFE65-.LFB65
 9027 0e5e 01       		.uleb128 0x1
 9028 0e5f 9C       		.byte	0x9c
 9029 0e60 850E0000 		.4byte	0xe85
 9030 0e64 10       		.uleb128 0x10
 9031 0e65 6E756D00 		.ascii	"num\000"
 9032 0e69 01       		.byte	0x1
 9033 0e6a AC03     		.2byte	0x3ac
 9034 0e6c 81000000 		.4byte	0x81
 9035 0e70 70040000 		.4byte	.LLST33
 9036 0e74 09       		.uleb128 0x9
 9037 0e75 1C000000 		.4byte	.LVL132
 9038 0e79 E5290000 		.4byte	0x29e5
 9039 0e7d 0A       		.uleb128 0xa
 9040 0e7e 01       		.uleb128 0x1
 9041 0e7f 52       		.byte	0x52
 9042 0e80 02       		.uleb128 0x2
 9043 0e81 74       		.byte	0x74
 9044 0e82 00       		.sleb128 0
 9045 0e83 00       		.byte	0
 9046 0e84 00       		.byte	0
 9047 0e85 0C       		.uleb128 0xc
 9048 0e86 3B050000 		.4byte	.LASF88
 9049 0e8a 01       		.byte	0x1
 9050 0e8b B703     		.2byte	0x3b7
 9051 0e8d 00000000 		.4byte	.LFB66
 9052 0e91 24000000 		.4byte	.LFE66-.LFB66
 9053 0e95 01       		.uleb128 0x1
 9054 0e96 9C       		.byte	0x9c
 9055 0e97 C50E0000 		.4byte	0xec5
 9056 0e9b 10       		.uleb128 0x10
 9057 0e9c 6E756D00 		.ascii	"num\000"
 9058 0ea0 01       		.byte	0x1
 9059 0ea1 B703     		.2byte	0x3b7
 9060 0ea3 81000000 		.4byte	0x81
 9061 0ea7 AA040000 		.4byte	.LLST34
 9062 0eab 10       		.uleb128 0x10
 9063 0eac 72656700 		.ascii	"reg\000"
 9064 0eb0 01       		.byte	0x1
 9065 0eb1 B703     		.2byte	0x3b7
 9066 0eb3 81000000 		.4byte	0x81
 9067 0eb7 D6040000 		.4byte	.LLST35
 9068 0ebb 11       		.uleb128 0x11
 9069 0ebc 1A000000 		.4byte	.LVL138
 9070 0ec0 012A0000 		.4byte	0x2a01
 9071 0ec4 00       		.byte	0
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 201


 9072 0ec5 0F       		.uleb128 0xf
 9073 0ec6 880A0000 		.4byte	.LASF89
 9074 0eca 01       		.byte	0x1
 9075 0ecb C203     		.2byte	0x3c2
 9076 0ecd 78030000 		.4byte	0x378
 9077 0ed1 00000000 		.4byte	.LFB67
 9078 0ed5 34000000 		.4byte	.LFE67-.LFB67
 9079 0ed9 01       		.uleb128 0x1
 9080 0eda 9C       		.byte	0x9c
 9081 0edb 050F0000 		.4byte	0xf05
 9082 0edf 10       		.uleb128 0x10
 9083 0ee0 6E756D00 		.ascii	"num\000"
 9084 0ee4 01       		.byte	0x1
 9085 0ee5 C203     		.2byte	0x3c2
 9086 0ee7 81000000 		.4byte	0x81
 9087 0eeb 02050000 		.4byte	.LLST36
 9088 0eef 09       		.uleb128 0x9
 9089 0ef0 1E000000 		.4byte	.LVL142
 9090 0ef4 9D290000 		.4byte	0x299d
 9091 0ef8 0A       		.uleb128 0xa
 9092 0ef9 01       		.uleb128 0x1
 9093 0efa 53       		.byte	0x53
 9094 0efb 02       		.uleb128 0x2
 9095 0efc 74       		.byte	0x74
 9096 0efd 00       		.sleb128 0
 9097 0efe 0A       		.uleb128 0xa
 9098 0eff 01       		.uleb128 0x1
 9099 0f00 52       		.byte	0x52
 9100 0f01 01       		.uleb128 0x1
 9101 0f02 37       		.byte	0x37
 9102 0f03 00       		.byte	0
 9103 0f04 00       		.byte	0
 9104 0f05 0C       		.uleb128 0xc
 9105 0f06 5E150000 		.4byte	.LASF90
 9106 0f0a 01       		.byte	0x1
 9107 0f0b CD03     		.2byte	0x3cd
 9108 0f0d 00000000 		.4byte	.LFB68
 9109 0f11 24000000 		.4byte	.LFE68-.LFB68
 9110 0f15 01       		.uleb128 0x1
 9111 0f16 9C       		.byte	0x9c
 9112 0f17 4B0F0000 		.4byte	0xf4b
 9113 0f1b 10       		.uleb128 0x10
 9114 0f1c 6E756D00 		.ascii	"num\000"
 9115 0f20 01       		.byte	0x1
 9116 0f21 CD03     		.2byte	0x3cd
 9117 0f23 81000000 		.4byte	0x81
 9118 0f27 3C050000 		.4byte	.LLST37
 9119 0f2b 0D       		.uleb128 0xd
 9120 0f2c 81110000 		.4byte	.LASF34
 9121 0f30 01       		.byte	0x1
 9122 0f31 CD03     		.2byte	0x3cd
 9123 0f33 78030000 		.4byte	0x378
 9124 0f37 68050000 		.4byte	.LLST38
 9125 0f3b 09       		.uleb128 0x9
 9126 0f3c 1C000000 		.4byte	.LVL148
 9127 0f40 C4290000 		.4byte	0x29c4
 9128 0f44 0A       		.uleb128 0xa
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 202


 9129 0f45 01       		.uleb128 0x1
 9130 0f46 52       		.byte	0x52
 9131 0f47 01       		.uleb128 0x1
 9132 0f48 37       		.byte	0x37
 9133 0f49 00       		.byte	0
 9134 0f4a 00       		.byte	0
 9135 0f4b 0F       		.uleb128 0xf
 9136 0f4c 3C070000 		.4byte	.LASF91
 9137 0f50 01       		.byte	0x1
 9138 0f51 DC03     		.2byte	0x3dc
 9139 0f53 78030000 		.4byte	0x378
 9140 0f57 00000000 		.4byte	.LFB69
 9141 0f5b 34000000 		.4byte	.LFE69-.LFB69
 9142 0f5f 01       		.uleb128 0x1
 9143 0f60 9C       		.byte	0x9c
 9144 0f61 8B0F0000 		.4byte	0xf8b
 9145 0f65 10       		.uleb128 0x10
 9146 0f66 6E756D00 		.ascii	"num\000"
 9147 0f6a 01       		.byte	0x1
 9148 0f6b DC03     		.2byte	0x3dc
 9149 0f6d 81000000 		.4byte	0x81
 9150 0f71 94050000 		.4byte	.LLST39
 9151 0f75 09       		.uleb128 0x9
 9152 0f76 1E000000 		.4byte	.LVL152
 9153 0f7a 9D290000 		.4byte	0x299d
 9154 0f7e 0A       		.uleb128 0xa
 9155 0f7f 01       		.uleb128 0x1
 9156 0f80 53       		.byte	0x53
 9157 0f81 02       		.uleb128 0x2
 9158 0f82 74       		.byte	0x74
 9159 0f83 00       		.sleb128 0
 9160 0f84 0A       		.uleb128 0xa
 9161 0f85 01       		.uleb128 0x1
 9162 0f86 52       		.byte	0x52
 9163 0f87 01       		.uleb128 0x1
 9164 0f88 36       		.byte	0x36
 9165 0f89 00       		.byte	0
 9166 0f8a 00       		.byte	0
 9167 0f8b 0C       		.uleb128 0xc
 9168 0f8c D6130000 		.4byte	.LASF92
 9169 0f90 01       		.byte	0x1
 9170 0f91 E703     		.2byte	0x3e7
 9171 0f93 00000000 		.4byte	.LFB70
 9172 0f97 24000000 		.4byte	.LFE70-.LFB70
 9173 0f9b 01       		.uleb128 0x1
 9174 0f9c 9C       		.byte	0x9c
 9175 0f9d D10F0000 		.4byte	0xfd1
 9176 0fa1 10       		.uleb128 0x10
 9177 0fa2 6E756D00 		.ascii	"num\000"
 9178 0fa6 01       		.byte	0x1
 9179 0fa7 E703     		.2byte	0x3e7
 9180 0fa9 81000000 		.4byte	0x81
 9181 0fad CE050000 		.4byte	.LLST40
 9182 0fb1 0D       		.uleb128 0xd
 9183 0fb2 81110000 		.4byte	.LASF34
 9184 0fb6 01       		.byte	0x1
 9185 0fb7 E703     		.2byte	0x3e7
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 203


 9186 0fb9 78030000 		.4byte	0x378
 9187 0fbd FA050000 		.4byte	.LLST41
 9188 0fc1 09       		.uleb128 0x9
 9189 0fc2 1C000000 		.4byte	.LVL158
 9190 0fc6 C4290000 		.4byte	0x29c4
 9191 0fca 0A       		.uleb128 0xa
 9192 0fcb 01       		.uleb128 0x1
 9193 0fcc 52       		.byte	0x52
 9194 0fcd 01       		.uleb128 0x1
 9195 0fce 36       		.byte	0x36
 9196 0fcf 00       		.byte	0
 9197 0fd0 00       		.byte	0
 9198 0fd1 0F       		.uleb128 0xf
 9199 0fd2 11110000 		.4byte	.LASF93
 9200 0fd6 01       		.byte	0x1
 9201 0fd7 F503     		.2byte	0x3f5
 9202 0fd9 78030000 		.4byte	0x378
 9203 0fdd 00000000 		.4byte	.LFB71
 9204 0fe1 34000000 		.4byte	.LFE71-.LFB71
 9205 0fe5 01       		.uleb128 0x1
 9206 0fe6 9C       		.byte	0x9c
 9207 0fe7 11100000 		.4byte	0x1011
 9208 0feb 10       		.uleb128 0x10
 9209 0fec 6E756D00 		.ascii	"num\000"
 9210 0ff0 01       		.byte	0x1
 9211 0ff1 F503     		.2byte	0x3f5
 9212 0ff3 81000000 		.4byte	0x81
 9213 0ff7 26060000 		.4byte	.LLST42
 9214 0ffb 09       		.uleb128 0x9
 9215 0ffc 1E000000 		.4byte	.LVL162
 9216 1000 9D290000 		.4byte	0x299d
 9217 1004 0A       		.uleb128 0xa
 9218 1005 01       		.uleb128 0x1
 9219 1006 53       		.byte	0x53
 9220 1007 02       		.uleb128 0x2
 9221 1008 74       		.byte	0x74
 9222 1009 00       		.sleb128 0
 9223 100a 0A       		.uleb128 0xa
 9224 100b 01       		.uleb128 0x1
 9225 100c 52       		.byte	0x52
 9226 100d 01       		.uleb128 0x1
 9227 100e 35       		.byte	0x35
 9228 100f 00       		.byte	0
 9229 1010 00       		.byte	0
 9230 1011 0C       		.uleb128 0xc
 9231 1012 F3130000 		.4byte	.LASF94
 9232 1016 01       		.byte	0x1
 9233 1017 0004     		.2byte	0x400
 9234 1019 00000000 		.4byte	.LFB72
 9235 101d 24000000 		.4byte	.LFE72-.LFB72
 9236 1021 01       		.uleb128 0x1
 9237 1022 9C       		.byte	0x9c
 9238 1023 57100000 		.4byte	0x1057
 9239 1027 10       		.uleb128 0x10
 9240 1028 6E756D00 		.ascii	"num\000"
 9241 102c 01       		.byte	0x1
 9242 102d 0004     		.2byte	0x400
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 204


 9243 102f 81000000 		.4byte	0x81
 9244 1033 60060000 		.4byte	.LLST43
 9245 1037 0D       		.uleb128 0xd
 9246 1038 EE110000 		.4byte	.LASF26
 9247 103c 01       		.byte	0x1
 9248 103d 0004     		.2byte	0x400
 9249 103f 78030000 		.4byte	0x378
 9250 1043 8C060000 		.4byte	.LLST44
 9251 1047 09       		.uleb128 0x9
 9252 1048 1C000000 		.4byte	.LVL168
 9253 104c C4290000 		.4byte	0x29c4
 9254 1050 0A       		.uleb128 0xa
 9255 1051 01       		.uleb128 0x1
 9256 1052 52       		.byte	0x52
 9257 1053 01       		.uleb128 0x1
 9258 1054 35       		.byte	0x35
 9259 1055 00       		.byte	0
 9260 1056 00       		.byte	0
 9261 1057 0F       		.uleb128 0xf
 9262 1058 23010000 		.4byte	.LASF95
 9263 105c 01       		.byte	0x1
 9264 105d 0F04     		.2byte	0x40f
 9265 105f 78030000 		.4byte	0x378
 9266 1063 00000000 		.4byte	.LFB73
 9267 1067 34000000 		.4byte	.LFE73-.LFB73
 9268 106b 01       		.uleb128 0x1
 9269 106c 9C       		.byte	0x9c
 9270 106d 97100000 		.4byte	0x1097
 9271 1071 10       		.uleb128 0x10
 9272 1072 6E756D00 		.ascii	"num\000"
 9273 1076 01       		.byte	0x1
 9274 1077 0F04     		.2byte	0x40f
 9275 1079 81000000 		.4byte	0x81
 9276 107d B8060000 		.4byte	.LLST45
 9277 1081 09       		.uleb128 0x9
 9278 1082 1E000000 		.4byte	.LVL172
 9279 1086 9D290000 		.4byte	0x299d
 9280 108a 0A       		.uleb128 0xa
 9281 108b 01       		.uleb128 0x1
 9282 108c 53       		.byte	0x53
 9283 108d 02       		.uleb128 0x2
 9284 108e 74       		.byte	0x74
 9285 108f 00       		.sleb128 0
 9286 1090 0A       		.uleb128 0xa
 9287 1091 01       		.uleb128 0x1
 9288 1092 52       		.byte	0x52
 9289 1093 01       		.uleb128 0x1
 9290 1094 34       		.byte	0x34
 9291 1095 00       		.byte	0
 9292 1096 00       		.byte	0
 9293 1097 0C       		.uleb128 0xc
 9294 1098 7E0C0000 		.4byte	.LASF96
 9295 109c 01       		.byte	0x1
 9296 109d 1A04     		.2byte	0x41a
 9297 109f 00000000 		.4byte	.LFB74
 9298 10a3 24000000 		.4byte	.LFE74-.LFB74
 9299 10a7 01       		.uleb128 0x1
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 205


 9300 10a8 9C       		.byte	0x9c
 9301 10a9 DD100000 		.4byte	0x10dd
 9302 10ad 10       		.uleb128 0x10
 9303 10ae 6E756D00 		.ascii	"num\000"
 9304 10b2 01       		.byte	0x1
 9305 10b3 1A04     		.2byte	0x41a
 9306 10b5 81000000 		.4byte	0x81
 9307 10b9 F2060000 		.4byte	.LLST46
 9308 10bd 0D       		.uleb128 0xd
 9309 10be 81110000 		.4byte	.LASF34
 9310 10c2 01       		.byte	0x1
 9311 10c3 1A04     		.2byte	0x41a
 9312 10c5 78030000 		.4byte	0x378
 9313 10c9 1E070000 		.4byte	.LLST47
 9314 10cd 09       		.uleb128 0x9
 9315 10ce 1C000000 		.4byte	.LVL178
 9316 10d2 C4290000 		.4byte	0x29c4
 9317 10d6 0A       		.uleb128 0xa
 9318 10d7 01       		.uleb128 0x1
 9319 10d8 52       		.byte	0x52
 9320 10d9 01       		.uleb128 0x1
 9321 10da 34       		.byte	0x34
 9322 10db 00       		.byte	0
 9323 10dc 00       		.byte	0
 9324 10dd 0F       		.uleb128 0xf
 9325 10de 04050000 		.4byte	.LASF97
 9326 10e2 01       		.byte	0x1
 9327 10e3 2504     		.2byte	0x425
 9328 10e5 81000000 		.4byte	0x81
 9329 10e9 00000000 		.4byte	.LFB75
 9330 10ed 38000000 		.4byte	.LFE75-.LFB75
 9331 10f1 01       		.uleb128 0x1
 9332 10f2 9C       		.byte	0x9c
 9333 10f3 23110000 		.4byte	0x1123
 9334 10f7 10       		.uleb128 0x10
 9335 10f8 6E756D00 		.ascii	"num\000"
 9336 10fc 01       		.byte	0x1
 9337 10fd 2504     		.2byte	0x425
 9338 10ff 81000000 		.4byte	0x81
 9339 1103 4A070000 		.4byte	.LLST48
 9340 1107 09       		.uleb128 0x9
 9341 1108 22000000 		.4byte	.LVL182
 9342 110c 1D2A0000 		.4byte	0x2a1d
 9343 1110 0A       		.uleb128 0xa
 9344 1111 01       		.uleb128 0x1
 9345 1112 53       		.byte	0x53
 9346 1113 01       		.uleb128 0x1
 9347 1114 34       		.byte	0x34
 9348 1115 0A       		.uleb128 0xa
 9349 1116 01       		.uleb128 0x1
 9350 1117 52       		.byte	0x52
 9351 1118 01       		.uleb128 0x1
 9352 1119 33       		.byte	0x33
 9353 111a 0A       		.uleb128 0xa
 9354 111b 02       		.uleb128 0x2
 9355 111c 7D       		.byte	0x7d
 9356 111d 00       		.sleb128 0
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 206


 9357 111e 02       		.uleb128 0x2
 9358 111f 74       		.byte	0x74
 9359 1120 00       		.sleb128 0
 9360 1121 00       		.byte	0
 9361 1122 00       		.byte	0
 9362 1123 0C       		.uleb128 0xc
 9363 1124 BD150000 		.4byte	.LASF98
 9364 1128 01       		.byte	0x1
 9365 1129 3004     		.2byte	0x430
 9366 112b 00000000 		.4byte	.LFB76
 9367 112f 2C000000 		.4byte	.LFE76-.LFB76
 9368 1133 01       		.uleb128 0x1
 9369 1134 9C       		.byte	0x9c
 9370 1135 6E110000 		.4byte	0x116e
 9371 1139 10       		.uleb128 0x10
 9372 113a 6E756D00 		.ascii	"num\000"
 9373 113e 01       		.byte	0x1
 9374 113f 3004     		.2byte	0x430
 9375 1141 81000000 		.4byte	0x81
 9376 1145 84070000 		.4byte	.LLST49
 9377 1149 0D       		.uleb128 0xd
 9378 114a C1110000 		.4byte	.LASF99
 9379 114e 01       		.byte	0x1
 9380 114f 3004     		.2byte	0x430
 9381 1151 81000000 		.4byte	0x81
 9382 1155 B0070000 		.4byte	.LLST50
 9383 1159 09       		.uleb128 0x9
 9384 115a 20000000 		.4byte	.LVL188
 9385 115e 432A0000 		.4byte	0x2a43
 9386 1162 0A       		.uleb128 0xa
 9387 1163 01       		.uleb128 0x1
 9388 1164 53       		.byte	0x53
 9389 1165 01       		.uleb128 0x1
 9390 1166 34       		.byte	0x34
 9391 1167 0A       		.uleb128 0xa
 9392 1168 01       		.uleb128 0x1
 9393 1169 52       		.byte	0x52
 9394 116a 01       		.uleb128 0x1
 9395 116b 33       		.byte	0x33
 9396 116c 00       		.byte	0
 9397 116d 00       		.byte	0
 9398 116e 0E       		.uleb128 0xe
 9399 116f 91090000 		.4byte	.LASF100
 9400 1173 01       		.byte	0x1
 9401 1174 4004     		.2byte	0x440
 9402 1176 81000000 		.4byte	0x81
 9403 117a 00000000 		.4byte	.LFB77
 9404 117e 1C000000 		.4byte	.LFE77-.LFB77
 9405 1182 01       		.uleb128 0x1
 9406 1183 9C       		.byte	0x9c
 9407 1184 9F110000 		.4byte	0x119f
 9408 1188 09       		.uleb128 0x9
 9409 1189 10000000 		.4byte	.LVL190
 9410 118d E5290000 		.4byte	0x29e5
 9411 1191 0A       		.uleb128 0xa
 9412 1192 01       		.uleb128 0x1
 9413 1193 52       		.byte	0x52
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 207


 9414 1194 02       		.uleb128 0x2
 9415 1195 74       		.byte	0x74
 9416 1196 00       		.sleb128 0
 9417 1197 0A       		.uleb128 0xa
 9418 1198 01       		.uleb128 0x1
 9419 1199 51       		.byte	0x51
 9420 119a 02       		.uleb128 0x2
 9421 119b 08       		.byte	0x8
 9422 119c 31       		.byte	0x31
 9423 119d 00       		.byte	0
 9424 119e 00       		.byte	0
 9425 119f 0C       		.uleb128 0xc
 9426 11a0 DF120000 		.4byte	.LASF101
 9427 11a4 01       		.byte	0x1
 9428 11a5 4904     		.2byte	0x449
 9429 11a7 00000000 		.4byte	.LFB78
 9430 11ab 14000000 		.4byte	.LFE78-.LFB78
 9431 11af 01       		.uleb128 0x1
 9432 11b0 9C       		.byte	0x9c
 9433 11b1 D6110000 		.4byte	0x11d6
 9434 11b5 0D       		.uleb128 0xd
 9435 11b6 1D0C0000 		.4byte	.LASF16
 9436 11ba 01       		.byte	0x1
 9437 11bb 4904     		.2byte	0x449
 9438 11bd 81000000 		.4byte	0x81
 9439 11c1 DC070000 		.4byte	.LLST51
 9440 11c5 09       		.uleb128 0x9
 9441 11c6 0E000000 		.4byte	.LVL193
 9442 11ca 012A0000 		.4byte	0x2a01
 9443 11ce 0A       		.uleb128 0xa
 9444 11cf 01       		.uleb128 0x1
 9445 11d0 51       		.byte	0x51
 9446 11d1 02       		.uleb128 0x2
 9447 11d2 08       		.byte	0x8
 9448 11d3 31       		.byte	0x31
 9449 11d4 00       		.byte	0
 9450 11d5 00       		.byte	0
 9451 11d6 0E       		.uleb128 0xe
 9452 11d7 77090000 		.4byte	.LASF102
 9453 11db 01       		.byte	0x1
 9454 11dc 5304     		.2byte	0x453
 9455 11de 81000000 		.4byte	0x81
 9456 11e2 00000000 		.4byte	.LFB79
 9457 11e6 1C000000 		.4byte	.LFE79-.LFB79
 9458 11ea 01       		.uleb128 0x1
 9459 11eb 9C       		.byte	0x9c
 9460 11ec 07120000 		.4byte	0x1207
 9461 11f0 09       		.uleb128 0x9
 9462 11f1 10000000 		.4byte	.LVL194
 9463 11f5 E5290000 		.4byte	0x29e5
 9464 11f9 0A       		.uleb128 0xa
 9465 11fa 01       		.uleb128 0x1
 9466 11fb 52       		.byte	0x52
 9467 11fc 02       		.uleb128 0x2
 9468 11fd 74       		.byte	0x74
 9469 11fe 00       		.sleb128 0
 9470 11ff 0A       		.uleb128 0xa
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 208


 9471 1200 01       		.uleb128 0x1
 9472 1201 51       		.byte	0x51
 9473 1202 02       		.uleb128 0x2
 9474 1203 08       		.byte	0x8
 9475 1204 32       		.byte	0x32
 9476 1205 00       		.byte	0
 9477 1206 00       		.byte	0
 9478 1207 0C       		.uleb128 0xc
 9479 1208 9E130000 		.4byte	.LASF103
 9480 120c 01       		.byte	0x1
 9481 120d 5C04     		.2byte	0x45c
 9482 120f 00000000 		.4byte	.LFB80
 9483 1213 14000000 		.4byte	.LFE80-.LFB80
 9484 1217 01       		.uleb128 0x1
 9485 1218 9C       		.byte	0x9c
 9486 1219 3E120000 		.4byte	0x123e
 9487 121d 10       		.uleb128 0x10
 9488 121e 72656700 		.ascii	"reg\000"
 9489 1222 01       		.byte	0x1
 9490 1223 5C04     		.2byte	0x45c
 9491 1225 81000000 		.4byte	0x81
 9492 1229 FD070000 		.4byte	.LLST52
 9493 122d 09       		.uleb128 0x9
 9494 122e 0E000000 		.4byte	.LVL197
 9495 1232 012A0000 		.4byte	0x2a01
 9496 1236 0A       		.uleb128 0xa
 9497 1237 01       		.uleb128 0x1
 9498 1238 51       		.byte	0x51
 9499 1239 02       		.uleb128 0x2
 9500 123a 08       		.byte	0x8
 9501 123b 32       		.byte	0x32
 9502 123c 00       		.byte	0
 9503 123d 00       		.byte	0
 9504 123e 0C       		.uleb128 0xc
 9505 123f 2E130000 		.4byte	.LASF104
 9506 1243 01       		.byte	0x1
 9507 1244 6504     		.2byte	0x465
 9508 1246 00000000 		.4byte	.LFB81
 9509 124a 14000000 		.4byte	.LFE81-.LFB81
 9510 124e 01       		.uleb128 0x1
 9511 124f 9C       		.byte	0x9c
 9512 1250 75120000 		.4byte	0x1275
 9513 1254 0D       		.uleb128 0xd
 9514 1255 0B090000 		.4byte	.LASF105
 9515 1259 01       		.byte	0x1
 9516 125a 6504     		.2byte	0x465
 9517 125c 81000000 		.4byte	0x81
 9518 1260 1E080000 		.4byte	.LLST53
 9519 1264 09       		.uleb128 0x9
 9520 1265 0E000000 		.4byte	.LVL200
 9521 1269 012A0000 		.4byte	0x2a01
 9522 126d 0A       		.uleb128 0xa
 9523 126e 01       		.uleb128 0x1
 9524 126f 51       		.byte	0x51
 9525 1270 02       		.uleb128 0x2
 9526 1271 08       		.byte	0x8
 9527 1272 33       		.byte	0x33
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 209


 9528 1273 00       		.byte	0
 9529 1274 00       		.byte	0
 9530 1275 0E       		.uleb128 0xe
 9531 1276 F10C0000 		.4byte	.LASF106
 9532 127a 01       		.byte	0x1
 9533 127b 6E04     		.2byte	0x46e
 9534 127d 78030000 		.4byte	0x378
 9535 1281 00000000 		.4byte	.LFB82
 9536 1285 24000000 		.4byte	.LFE82-.LFB82
 9537 1289 01       		.uleb128 0x1
 9538 128a 9C       		.byte	0x9c
 9539 128b AB120000 		.4byte	0x12ab
 9540 128f 09       		.uleb128 0x9
 9541 1290 12000000 		.4byte	.LVL201
 9542 1294 9D290000 		.4byte	0x299d
 9543 1298 0A       		.uleb128 0xa
 9544 1299 01       		.uleb128 0x1
 9545 129a 53       		.byte	0x53
 9546 129b 02       		.uleb128 0x2
 9547 129c 74       		.byte	0x74
 9548 129d 00       		.sleb128 0
 9549 129e 0A       		.uleb128 0xa
 9550 129f 01       		.uleb128 0x1
 9551 12a0 52       		.byte	0x52
 9552 12a1 01       		.uleb128 0x1
 9553 12a2 37       		.byte	0x37
 9554 12a3 0A       		.uleb128 0xa
 9555 12a4 01       		.uleb128 0x1
 9556 12a5 51       		.byte	0x51
 9557 12a6 02       		.uleb128 0x2
 9558 12a7 08       		.byte	0x8
 9559 12a8 34       		.byte	0x34
 9560 12a9 00       		.byte	0
 9561 12aa 00       		.byte	0
 9562 12ab 0C       		.uleb128 0xc
 9563 12ac F8100000 		.4byte	.LASF107
 9564 12b0 01       		.byte	0x1
 9565 12b1 7704     		.2byte	0x477
 9566 12b3 00000000 		.4byte	.LFB83
 9567 12b7 18000000 		.4byte	.LFE83-.LFB83
 9568 12bb 01       		.uleb128 0x1
 9569 12bc 9C       		.byte	0x9c
 9570 12bd E7120000 		.4byte	0x12e7
 9571 12c1 0D       		.uleb128 0xd
 9572 12c2 81110000 		.4byte	.LASF34
 9573 12c6 01       		.byte	0x1
 9574 12c7 7704     		.2byte	0x477
 9575 12c9 78030000 		.4byte	0x378
 9576 12cd 3F080000 		.4byte	.LLST54
 9577 12d1 09       		.uleb128 0x9
 9578 12d2 10000000 		.4byte	.LVL204
 9579 12d6 C4290000 		.4byte	0x29c4
 9580 12da 0A       		.uleb128 0xa
 9581 12db 01       		.uleb128 0x1
 9582 12dc 52       		.byte	0x52
 9583 12dd 01       		.uleb128 0x1
 9584 12de 37       		.byte	0x37
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 210


 9585 12df 0A       		.uleb128 0xa
 9586 12e0 01       		.uleb128 0x1
 9587 12e1 51       		.byte	0x51
 9588 12e2 02       		.uleb128 0x2
 9589 12e3 08       		.byte	0x8
 9590 12e4 34       		.byte	0x34
 9591 12e5 00       		.byte	0
 9592 12e6 00       		.byte	0
 9593 12e7 0E       		.uleb128 0xe
 9594 12e8 AA0F0000 		.4byte	.LASF108
 9595 12ec 01       		.byte	0x1
 9596 12ed 8304     		.2byte	0x483
 9597 12ef 78030000 		.4byte	0x378
 9598 12f3 00000000 		.4byte	.LFB84
 9599 12f7 24000000 		.4byte	.LFE84-.LFB84
 9600 12fb 01       		.uleb128 0x1
 9601 12fc 9C       		.byte	0x9c
 9602 12fd 1D130000 		.4byte	0x131d
 9603 1301 09       		.uleb128 0x9
 9604 1302 12000000 		.4byte	.LVL205
 9605 1306 9D290000 		.4byte	0x299d
 9606 130a 0A       		.uleb128 0xa
 9607 130b 01       		.uleb128 0x1
 9608 130c 53       		.byte	0x53
 9609 130d 02       		.uleb128 0x2
 9610 130e 74       		.byte	0x74
 9611 130f 00       		.sleb128 0
 9612 1310 0A       		.uleb128 0xa
 9613 1311 01       		.uleb128 0x1
 9614 1312 52       		.byte	0x52
 9615 1313 01       		.uleb128 0x1
 9616 1314 36       		.byte	0x36
 9617 1315 0A       		.uleb128 0xa
 9618 1316 01       		.uleb128 0x1
 9619 1317 51       		.byte	0x51
 9620 1318 02       		.uleb128 0x2
 9621 1319 08       		.byte	0x8
 9622 131a 34       		.byte	0x34
 9623 131b 00       		.byte	0
 9624 131c 00       		.byte	0
 9625 131d 0C       		.uleb128 0xc
 9626 131e EF0F0000 		.4byte	.LASF109
 9627 1322 01       		.byte	0x1
 9628 1323 8C04     		.2byte	0x48c
 9629 1325 00000000 		.4byte	.LFB85
 9630 1329 18000000 		.4byte	.LFE85-.LFB85
 9631 132d 01       		.uleb128 0x1
 9632 132e 9C       		.byte	0x9c
 9633 132f 59130000 		.4byte	0x1359
 9634 1333 0D       		.uleb128 0xd
 9635 1334 81110000 		.4byte	.LASF34
 9636 1338 01       		.byte	0x1
 9637 1339 8C04     		.2byte	0x48c
 9638 133b 78030000 		.4byte	0x378
 9639 133f 60080000 		.4byte	.LLST55
 9640 1343 09       		.uleb128 0x9
 9641 1344 10000000 		.4byte	.LVL208
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 211


 9642 1348 C4290000 		.4byte	0x29c4
 9643 134c 0A       		.uleb128 0xa
 9644 134d 01       		.uleb128 0x1
 9645 134e 52       		.byte	0x52
 9646 134f 01       		.uleb128 0x1
 9647 1350 36       		.byte	0x36
 9648 1351 0A       		.uleb128 0xa
 9649 1352 01       		.uleb128 0x1
 9650 1353 51       		.byte	0x51
 9651 1354 02       		.uleb128 0x2
 9652 1355 08       		.byte	0x8
 9653 1356 34       		.byte	0x34
 9654 1357 00       		.byte	0
 9655 1358 00       		.byte	0
 9656 1359 0E       		.uleb128 0xe
 9657 135a 0A0D0000 		.4byte	.LASF110
 9658 135e 01       		.byte	0x1
 9659 135f 9804     		.2byte	0x498
 9660 1361 78030000 		.4byte	0x378
 9661 1365 00000000 		.4byte	.LFB86
 9662 1369 24000000 		.4byte	.LFE86-.LFB86
 9663 136d 01       		.uleb128 0x1
 9664 136e 9C       		.byte	0x9c
 9665 136f 8F130000 		.4byte	0x138f
 9666 1373 09       		.uleb128 0x9
 9667 1374 12000000 		.4byte	.LVL209
 9668 1378 9D290000 		.4byte	0x299d
 9669 137c 0A       		.uleb128 0xa
 9670 137d 01       		.uleb128 0x1
 9671 137e 53       		.byte	0x53
 9672 137f 02       		.uleb128 0x2
 9673 1380 74       		.byte	0x74
 9674 1381 00       		.sleb128 0
 9675 1382 0A       		.uleb128 0xa
 9676 1383 01       		.uleb128 0x1
 9677 1384 52       		.byte	0x52
 9678 1385 01       		.uleb128 0x1
 9679 1386 35       		.byte	0x35
 9680 1387 0A       		.uleb128 0xa
 9681 1388 01       		.uleb128 0x1
 9682 1389 51       		.byte	0x51
 9683 138a 02       		.uleb128 0x2
 9684 138b 08       		.byte	0x8
 9685 138c 34       		.byte	0x34
 9686 138d 00       		.byte	0
 9687 138e 00       		.byte	0
 9688 138f 0C       		.uleb128 0xc
 9689 1390 79060000 		.4byte	.LASF111
 9690 1394 01       		.byte	0x1
 9691 1395 A104     		.2byte	0x4a1
 9692 1397 00000000 		.4byte	.LFB87
 9693 139b 18000000 		.4byte	.LFE87-.LFB87
 9694 139f 01       		.uleb128 0x1
 9695 13a0 9C       		.byte	0x9c
 9696 13a1 CB130000 		.4byte	0x13cb
 9697 13a5 0D       		.uleb128 0xd
 9698 13a6 EE110000 		.4byte	.LASF26
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 212


 9699 13aa 01       		.byte	0x1
 9700 13ab A104     		.2byte	0x4a1
 9701 13ad 78030000 		.4byte	0x378
 9702 13b1 81080000 		.4byte	.LLST56
 9703 13b5 09       		.uleb128 0x9
 9704 13b6 10000000 		.4byte	.LVL212
 9705 13ba C4290000 		.4byte	0x29c4
 9706 13be 0A       		.uleb128 0xa
 9707 13bf 01       		.uleb128 0x1
 9708 13c0 52       		.byte	0x52
 9709 13c1 01       		.uleb128 0x1
 9710 13c2 35       		.byte	0x35
 9711 13c3 0A       		.uleb128 0xa
 9712 13c4 01       		.uleb128 0x1
 9713 13c5 51       		.byte	0x51
 9714 13c6 02       		.uleb128 0x2
 9715 13c7 08       		.byte	0x8
 9716 13c8 34       		.byte	0x34
 9717 13c9 00       		.byte	0
 9718 13ca 00       		.byte	0
 9719 13cb 0E       		.uleb128 0xe
 9720 13cc BD140000 		.4byte	.LASF112
 9721 13d0 01       		.byte	0x1
 9722 13d1 B304     		.2byte	0x4b3
 9723 13d3 81000000 		.4byte	0x81
 9724 13d7 00000000 		.4byte	.LFB88
 9725 13db 24000000 		.4byte	.LFE88-.LFB88
 9726 13df 01       		.uleb128 0x1
 9727 13e0 9C       		.byte	0x9c
 9728 13e1 07140000 		.4byte	0x1407
 9729 13e5 09       		.uleb128 0x9
 9730 13e6 16000000 		.4byte	.LVL213
 9731 13ea 1D2A0000 		.4byte	0x2a1d
 9732 13ee 0A       		.uleb128 0xa
 9733 13ef 01       		.uleb128 0x1
 9734 13f0 53       		.byte	0x53
 9735 13f1 01       		.uleb128 0x1
 9736 13f2 35       		.byte	0x35
 9737 13f3 0A       		.uleb128 0xa
 9738 13f4 01       		.uleb128 0x1
 9739 13f5 52       		.byte	0x52
 9740 13f6 01       		.uleb128 0x1
 9741 13f7 34       		.byte	0x34
 9742 13f8 0A       		.uleb128 0xa
 9743 13f9 01       		.uleb128 0x1
 9744 13fa 51       		.byte	0x51
 9745 13fb 02       		.uleb128 0x2
 9746 13fc 08       		.byte	0x8
 9747 13fd 34       		.byte	0x34
 9748 13fe 0A       		.uleb128 0xa
 9749 13ff 02       		.uleb128 0x2
 9750 1400 7D       		.byte	0x7d
 9751 1401 00       		.sleb128 0
 9752 1402 02       		.uleb128 0x2
 9753 1403 74       		.byte	0x74
 9754 1404 00       		.sleb128 0
 9755 1405 00       		.byte	0
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 213


 9756 1406 00       		.byte	0
 9757 1407 0C       		.uleb128 0xc
 9758 1408 94050000 		.4byte	.LASF113
 9759 140c 01       		.byte	0x1
 9760 140d BC04     		.2byte	0x4bc
 9761 140f 00000000 		.4byte	.LFB89
 9762 1413 20000000 		.4byte	.LFE89-.LFB89
 9763 1417 01       		.uleb128 0x1
 9764 1418 9C       		.byte	0x9c
 9765 1419 48140000 		.4byte	0x1448
 9766 141d 0D       		.uleb128 0xd
 9767 141e 410F0000 		.4byte	.LASF114
 9768 1422 01       		.byte	0x1
 9769 1423 BC04     		.2byte	0x4bc
 9770 1425 81000000 		.4byte	0x81
 9771 1429 A2080000 		.4byte	.LLST57
 9772 142d 09       		.uleb128 0x9
 9773 142e 16000000 		.4byte	.LVL216
 9774 1432 432A0000 		.4byte	0x2a43
 9775 1436 0A       		.uleb128 0xa
 9776 1437 01       		.uleb128 0x1
 9777 1438 53       		.byte	0x53
 9778 1439 01       		.uleb128 0x1
 9779 143a 35       		.byte	0x35
 9780 143b 0A       		.uleb128 0xa
 9781 143c 01       		.uleb128 0x1
 9782 143d 52       		.byte	0x52
 9783 143e 01       		.uleb128 0x1
 9784 143f 34       		.byte	0x34
 9785 1440 0A       		.uleb128 0xa
 9786 1441 01       		.uleb128 0x1
 9787 1442 51       		.byte	0x51
 9788 1443 02       		.uleb128 0x2
 9789 1444 08       		.byte	0x8
 9790 1445 34       		.byte	0x34
 9791 1446 00       		.byte	0
 9792 1447 00       		.byte	0
 9793 1448 0E       		.uleb128 0xe
 9794 1449 2A000000 		.4byte	.LASF115
 9795 144d 01       		.byte	0x1
 9796 144e C504     		.2byte	0x4c5
 9797 1450 81000000 		.4byte	0x81
 9798 1454 00000000 		.4byte	.LFB90
 9799 1458 1C000000 		.4byte	.LFE90-.LFB90
 9800 145c 01       		.uleb128 0x1
 9801 145d 9C       		.byte	0x9c
 9802 145e 79140000 		.4byte	0x1479
 9803 1462 09       		.uleb128 0x9
 9804 1463 10000000 		.4byte	.LVL217
 9805 1467 E5290000 		.4byte	0x29e5
 9806 146b 0A       		.uleb128 0xa
 9807 146c 01       		.uleb128 0x1
 9808 146d 52       		.byte	0x52
 9809 146e 02       		.uleb128 0x2
 9810 146f 74       		.byte	0x74
 9811 1470 00       		.sleb128 0
 9812 1471 0A       		.uleb128 0xa
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 214


 9813 1472 01       		.uleb128 0x1
 9814 1473 51       		.byte	0x51
 9815 1474 02       		.uleb128 0x2
 9816 1475 08       		.byte	0x8
 9817 1476 35       		.byte	0x35
 9818 1477 00       		.byte	0
 9819 1478 00       		.byte	0
 9820 1479 0E       		.uleb128 0xe
 9821 147a 06010000 		.4byte	.LASF116
 9822 147e 01       		.byte	0x1
 9823 147f D504     		.2byte	0x4d5
 9824 1481 78030000 		.4byte	0x378
 9825 1485 00000000 		.4byte	.LFB91
 9826 1489 24000000 		.4byte	.LFE91-.LFB91
 9827 148d 01       		.uleb128 0x1
 9828 148e 9C       		.byte	0x9c
 9829 148f AF140000 		.4byte	0x14af
 9830 1493 09       		.uleb128 0x9
 9831 1494 12000000 		.4byte	.LVL218
 9832 1498 9D290000 		.4byte	0x299d
 9833 149c 0A       		.uleb128 0xa
 9834 149d 01       		.uleb128 0x1
 9835 149e 53       		.byte	0x53
 9836 149f 02       		.uleb128 0x2
 9837 14a0 74       		.byte	0x74
 9838 14a1 00       		.sleb128 0
 9839 14a2 0A       		.uleb128 0xa
 9840 14a3 01       		.uleb128 0x1
 9841 14a4 52       		.byte	0x52
 9842 14a5 01       		.uleb128 0x1
 9843 14a6 37       		.byte	0x37
 9844 14a7 0A       		.uleb128 0xa
 9845 14a8 01       		.uleb128 0x1
 9846 14a9 51       		.byte	0x51
 9847 14aa 02       		.uleb128 0x2
 9848 14ab 08       		.byte	0x8
 9849 14ac 36       		.byte	0x36
 9850 14ad 00       		.byte	0
 9851 14ae 00       		.byte	0
 9852 14af 0E       		.uleb128 0xe
 9853 14b0 050C0000 		.4byte	.LASF117
 9854 14b4 01       		.byte	0x1
 9855 14b5 E104     		.2byte	0x4e1
 9856 14b7 78030000 		.4byte	0x378
 9857 14bb 00000000 		.4byte	.LFB92
 9858 14bf 24000000 		.4byte	.LFE92-.LFB92
 9859 14c3 01       		.uleb128 0x1
 9860 14c4 9C       		.byte	0x9c
 9861 14c5 E5140000 		.4byte	0x14e5
 9862 14c9 09       		.uleb128 0x9
 9863 14ca 12000000 		.4byte	.LVL219
 9864 14ce 9D290000 		.4byte	0x299d
 9865 14d2 0A       		.uleb128 0xa
 9866 14d3 01       		.uleb128 0x1
 9867 14d4 53       		.byte	0x53
 9868 14d5 02       		.uleb128 0x2
 9869 14d6 74       		.byte	0x74
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 215


 9870 14d7 00       		.sleb128 0
 9871 14d8 0A       		.uleb128 0xa
 9872 14d9 01       		.uleb128 0x1
 9873 14da 52       		.byte	0x52
 9874 14db 01       		.uleb128 0x1
 9875 14dc 36       		.byte	0x36
 9876 14dd 0A       		.uleb128 0xa
 9877 14de 01       		.uleb128 0x1
 9878 14df 51       		.byte	0x51
 9879 14e0 02       		.uleb128 0x2
 9880 14e1 08       		.byte	0x8
 9881 14e2 36       		.byte	0x36
 9882 14e3 00       		.byte	0
 9883 14e4 00       		.byte	0
 9884 14e5 0E       		.uleb128 0xe
 9885 14e6 A6110000 		.4byte	.LASF118
 9886 14ea 01       		.byte	0x1
 9887 14eb EC04     		.2byte	0x4ec
 9888 14ed 78030000 		.4byte	0x378
 9889 14f1 00000000 		.4byte	.LFB93
 9890 14f5 24000000 		.4byte	.LFE93-.LFB93
 9891 14f9 01       		.uleb128 0x1
 9892 14fa 9C       		.byte	0x9c
 9893 14fb 1B150000 		.4byte	0x151b
 9894 14ff 09       		.uleb128 0x9
 9895 1500 12000000 		.4byte	.LVL220
 9896 1504 9D290000 		.4byte	0x299d
 9897 1508 0A       		.uleb128 0xa
 9898 1509 01       		.uleb128 0x1
 9899 150a 53       		.byte	0x53
 9900 150b 02       		.uleb128 0x2
 9901 150c 74       		.byte	0x74
 9902 150d 00       		.sleb128 0
 9903 150e 0A       		.uleb128 0xa
 9904 150f 01       		.uleb128 0x1
 9905 1510 52       		.byte	0x52
 9906 1511 01       		.uleb128 0x1
 9907 1512 35       		.byte	0x35
 9908 1513 0A       		.uleb128 0xa
 9909 1514 01       		.uleb128 0x1
 9910 1515 51       		.byte	0x51
 9911 1516 02       		.uleb128 0x2
 9912 1517 08       		.byte	0x8
 9913 1518 36       		.byte	0x36
 9914 1519 00       		.byte	0
 9915 151a 00       		.byte	0
 9916 151b 0E       		.uleb128 0xe
 9917 151c 61090000 		.4byte	.LASF119
 9918 1520 01       		.byte	0x1
 9919 1521 F704     		.2byte	0x4f7
 9920 1523 78030000 		.4byte	0x378
 9921 1527 00000000 		.4byte	.LFB94
 9922 152b 24000000 		.4byte	.LFE94-.LFB94
 9923 152f 01       		.uleb128 0x1
 9924 1530 9C       		.byte	0x9c
 9925 1531 51150000 		.4byte	0x1551
 9926 1535 09       		.uleb128 0x9
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 216


 9927 1536 12000000 		.4byte	.LVL221
 9928 153a 9D290000 		.4byte	0x299d
 9929 153e 0A       		.uleb128 0xa
 9930 153f 01       		.uleb128 0x1
 9931 1540 53       		.byte	0x53
 9932 1541 02       		.uleb128 0x2
 9933 1542 74       		.byte	0x74
 9934 1543 00       		.sleb128 0
 9935 1544 0A       		.uleb128 0xa
 9936 1545 01       		.uleb128 0x1
 9937 1546 52       		.byte	0x52
 9938 1547 01       		.uleb128 0x1
 9939 1548 34       		.byte	0x34
 9940 1549 0A       		.uleb128 0xa
 9941 154a 01       		.uleb128 0x1
 9942 154b 51       		.byte	0x51
 9943 154c 02       		.uleb128 0x2
 9944 154d 08       		.byte	0x8
 9945 154e 36       		.byte	0x36
 9946 154f 00       		.byte	0
 9947 1550 00       		.byte	0
 9948 1551 0E       		.uleb128 0xe
 9949 1552 E2020000 		.4byte	.LASF120
 9950 1556 01       		.byte	0x1
 9951 1557 0205     		.2byte	0x502
 9952 1559 78030000 		.4byte	0x378
 9953 155d 00000000 		.4byte	.LFB95
 9954 1561 24000000 		.4byte	.LFE95-.LFB95
 9955 1565 01       		.uleb128 0x1
 9956 1566 9C       		.byte	0x9c
 9957 1567 87150000 		.4byte	0x1587
 9958 156b 09       		.uleb128 0x9
 9959 156c 12000000 		.4byte	.LVL222
 9960 1570 9D290000 		.4byte	0x299d
 9961 1574 0A       		.uleb128 0xa
 9962 1575 01       		.uleb128 0x1
 9963 1576 53       		.byte	0x53
 9964 1577 02       		.uleb128 0x2
 9965 1578 74       		.byte	0x74
 9966 1579 00       		.sleb128 0
 9967 157a 0A       		.uleb128 0xa
 9968 157b 01       		.uleb128 0x1
 9969 157c 52       		.byte	0x52
 9970 157d 01       		.uleb128 0x1
 9971 157e 33       		.byte	0x33
 9972 157f 0A       		.uleb128 0xa
 9973 1580 01       		.uleb128 0x1
 9974 1581 51       		.byte	0x51
 9975 1582 02       		.uleb128 0x2
 9976 1583 08       		.byte	0x8
 9977 1584 36       		.byte	0x36
 9978 1585 00       		.byte	0
 9979 1586 00       		.byte	0
 9980 1587 0E       		.uleb128 0xe
 9981 1588 8D0B0000 		.4byte	.LASF121
 9982 158c 01       		.byte	0x1
 9983 158d 0D05     		.2byte	0x50d
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 217


 9984 158f 78030000 		.4byte	0x378
 9985 1593 00000000 		.4byte	.LFB96
 9986 1597 24000000 		.4byte	.LFE96-.LFB96
 9987 159b 01       		.uleb128 0x1
 9988 159c 9C       		.byte	0x9c
 9989 159d BD150000 		.4byte	0x15bd
 9990 15a1 09       		.uleb128 0x9
 9991 15a2 12000000 		.4byte	.LVL223
 9992 15a6 9D290000 		.4byte	0x299d
 9993 15aa 0A       		.uleb128 0xa
 9994 15ab 01       		.uleb128 0x1
 9995 15ac 53       		.byte	0x53
 9996 15ad 02       		.uleb128 0x2
 9997 15ae 74       		.byte	0x74
 9998 15af 00       		.sleb128 0
 9999 15b0 0A       		.uleb128 0xa
 10000 15b1 01       		.uleb128 0x1
 10001 15b2 52       		.byte	0x52
 10002 15b3 01       		.uleb128 0x1
 10003 15b4 32       		.byte	0x32
 10004 15b5 0A       		.uleb128 0xa
 10005 15b6 01       		.uleb128 0x1
 10006 15b7 51       		.byte	0x51
 10007 15b8 02       		.uleb128 0x2
 10008 15b9 08       		.byte	0x8
 10009 15ba 36       		.byte	0x36
 10010 15bb 00       		.byte	0
 10011 15bc 00       		.byte	0
 10012 15bd 0E       		.uleb128 0xe
 10013 15be 2D140000 		.4byte	.LASF122
 10014 15c2 01       		.byte	0x1
 10015 15c3 1805     		.2byte	0x518
 10016 15c5 78030000 		.4byte	0x378
 10017 15c9 00000000 		.4byte	.LFB97
 10018 15cd 24000000 		.4byte	.LFE97-.LFB97
 10019 15d1 01       		.uleb128 0x1
 10020 15d2 9C       		.byte	0x9c
 10021 15d3 F3150000 		.4byte	0x15f3
 10022 15d7 09       		.uleb128 0x9
 10023 15d8 12000000 		.4byte	.LVL224
 10024 15dc 9D290000 		.4byte	0x299d
 10025 15e0 0A       		.uleb128 0xa
 10026 15e1 01       		.uleb128 0x1
 10027 15e2 53       		.byte	0x53
 10028 15e3 02       		.uleb128 0x2
 10029 15e4 74       		.byte	0x74
 10030 15e5 00       		.sleb128 0
 10031 15e6 0A       		.uleb128 0xa
 10032 15e7 01       		.uleb128 0x1
 10033 15e8 52       		.byte	0x52
 10034 15e9 01       		.uleb128 0x1
 10035 15ea 31       		.byte	0x31
 10036 15eb 0A       		.uleb128 0xa
 10037 15ec 01       		.uleb128 0x1
 10038 15ed 51       		.byte	0x51
 10039 15ee 02       		.uleb128 0x2
 10040 15ef 08       		.byte	0x8
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 218


 10041 15f0 36       		.byte	0x36
 10042 15f1 00       		.byte	0
 10043 15f2 00       		.byte	0
 10044 15f3 0E       		.uleb128 0xe
 10045 15f4 CD050000 		.4byte	.LASF123
 10046 15f8 01       		.byte	0x1
 10047 15f9 2305     		.2byte	0x523
 10048 15fb 78030000 		.4byte	0x378
 10049 15ff 00000000 		.4byte	.LFB98
 10050 1603 24000000 		.4byte	.LFE98-.LFB98
 10051 1607 01       		.uleb128 0x1
 10052 1608 9C       		.byte	0x9c
 10053 1609 29160000 		.4byte	0x1629
 10054 160d 09       		.uleb128 0x9
 10055 160e 12000000 		.4byte	.LVL225
 10056 1612 9D290000 		.4byte	0x299d
 10057 1616 0A       		.uleb128 0xa
 10058 1617 01       		.uleb128 0x1
 10059 1618 53       		.byte	0x53
 10060 1619 02       		.uleb128 0x2
 10061 161a 74       		.byte	0x74
 10062 161b 00       		.sleb128 0
 10063 161c 0A       		.uleb128 0xa
 10064 161d 01       		.uleb128 0x1
 10065 161e 52       		.byte	0x52
 10066 161f 01       		.uleb128 0x1
 10067 1620 30       		.byte	0x30
 10068 1621 0A       		.uleb128 0xa
 10069 1622 01       		.uleb128 0x1
 10070 1623 51       		.byte	0x51
 10071 1624 02       		.uleb128 0x2
 10072 1625 08       		.byte	0x8
 10073 1626 36       		.byte	0x36
 10074 1627 00       		.byte	0
 10075 1628 00       		.byte	0
 10076 1629 0E       		.uleb128 0xe
 10077 162a EB040000 		.4byte	.LASF124
 10078 162e 01       		.byte	0x1
 10079 162f 3005     		.2byte	0x530
 10080 1631 78030000 		.4byte	0x378
 10081 1635 00000000 		.4byte	.LFB99
 10082 1639 24000000 		.4byte	.LFE99-.LFB99
 10083 163d 01       		.uleb128 0x1
 10084 163e 9C       		.byte	0x9c
 10085 163f 5F160000 		.4byte	0x165f
 10086 1643 09       		.uleb128 0x9
 10087 1644 12000000 		.4byte	.LVL226
 10088 1648 9D290000 		.4byte	0x299d
 10089 164c 0A       		.uleb128 0xa
 10090 164d 01       		.uleb128 0x1
 10091 164e 53       		.byte	0x53
 10092 164f 02       		.uleb128 0x2
 10093 1650 74       		.byte	0x74
 10094 1651 00       		.sleb128 0
 10095 1652 0A       		.uleb128 0xa
 10096 1653 01       		.uleb128 0x1
 10097 1654 52       		.byte	0x52
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 219


 10098 1655 01       		.uleb128 0x1
 10099 1656 37       		.byte	0x37
 10100 1657 0A       		.uleb128 0xa
 10101 1658 01       		.uleb128 0x1
 10102 1659 51       		.byte	0x51
 10103 165a 02       		.uleb128 0x2
 10104 165b 08       		.byte	0x8
 10105 165c 37       		.byte	0x37
 10106 165d 00       		.byte	0
 10107 165e 00       		.byte	0
 10108 165f 0C       		.uleb128 0xc
 10109 1660 34120000 		.4byte	.LASF125
 10110 1664 01       		.byte	0x1
 10111 1665 3A05     		.2byte	0x53a
 10112 1667 00000000 		.4byte	.LFB100
 10113 166b 18000000 		.4byte	.LFE100-.LFB100
 10114 166f 01       		.uleb128 0x1
 10115 1670 9C       		.byte	0x9c
 10116 1671 9B160000 		.4byte	0x169b
 10117 1675 0D       		.uleb128 0xd
 10118 1676 EE110000 		.4byte	.LASF26
 10119 167a 01       		.byte	0x1
 10120 167b 3A05     		.2byte	0x53a
 10121 167d 78030000 		.4byte	0x378
 10122 1681 C3080000 		.4byte	.LLST58
 10123 1685 09       		.uleb128 0x9
 10124 1686 10000000 		.4byte	.LVL229
 10125 168a C4290000 		.4byte	0x29c4
 10126 168e 0A       		.uleb128 0xa
 10127 168f 01       		.uleb128 0x1
 10128 1690 52       		.byte	0x52
 10129 1691 01       		.uleb128 0x1
 10130 1692 37       		.byte	0x37
 10131 1693 0A       		.uleb128 0xa
 10132 1694 01       		.uleb128 0x1
 10133 1695 51       		.byte	0x51
 10134 1696 02       		.uleb128 0x2
 10135 1697 08       		.byte	0x8
 10136 1698 37       		.byte	0x37
 10137 1699 00       		.byte	0
 10138 169a 00       		.byte	0
 10139 169b 0E       		.uleb128 0xe
 10140 169c 44150000 		.4byte	.LASF126
 10141 16a0 01       		.byte	0x1
 10142 16a1 4305     		.2byte	0x543
 10143 16a3 78030000 		.4byte	0x378
 10144 16a7 00000000 		.4byte	.LFB101
 10145 16ab 24000000 		.4byte	.LFE101-.LFB101
 10146 16af 01       		.uleb128 0x1
 10147 16b0 9C       		.byte	0x9c
 10148 16b1 D1160000 		.4byte	0x16d1
 10149 16b5 09       		.uleb128 0x9
 10150 16b6 12000000 		.4byte	.LVL230
 10151 16ba 9D290000 		.4byte	0x299d
 10152 16be 0A       		.uleb128 0xa
 10153 16bf 01       		.uleb128 0x1
 10154 16c0 53       		.byte	0x53
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 220


 10155 16c1 02       		.uleb128 0x2
 10156 16c2 74       		.byte	0x74
 10157 16c3 00       		.sleb128 0
 10158 16c4 0A       		.uleb128 0xa
 10159 16c5 01       		.uleb128 0x1
 10160 16c6 52       		.byte	0x52
 10161 16c7 01       		.uleb128 0x1
 10162 16c8 36       		.byte	0x36
 10163 16c9 0A       		.uleb128 0xa
 10164 16ca 01       		.uleb128 0x1
 10165 16cb 51       		.byte	0x51
 10166 16cc 02       		.uleb128 0x2
 10167 16cd 08       		.byte	0x8
 10168 16ce 37       		.byte	0x37
 10169 16cf 00       		.byte	0
 10170 16d0 00       		.byte	0
 10171 16d1 0C       		.uleb128 0xc
 10172 16d2 EB0B0000 		.4byte	.LASF127
 10173 16d6 01       		.byte	0x1
 10174 16d7 4D05     		.2byte	0x54d
 10175 16d9 00000000 		.4byte	.LFB102
 10176 16dd 18000000 		.4byte	.LFE102-.LFB102
 10177 16e1 01       		.uleb128 0x1
 10178 16e2 9C       		.byte	0x9c
 10179 16e3 0D170000 		.4byte	0x170d
 10180 16e7 0D       		.uleb128 0xd
 10181 16e8 870B0000 		.4byte	.LASF128
 10182 16ec 01       		.byte	0x1
 10183 16ed 4D05     		.2byte	0x54d
 10184 16ef 78030000 		.4byte	0x378
 10185 16f3 E4080000 		.4byte	.LLST59
 10186 16f7 09       		.uleb128 0x9
 10187 16f8 10000000 		.4byte	.LVL233
 10188 16fc C4290000 		.4byte	0x29c4
 10189 1700 0A       		.uleb128 0xa
 10190 1701 01       		.uleb128 0x1
 10191 1702 52       		.byte	0x52
 10192 1703 01       		.uleb128 0x1
 10193 1704 36       		.byte	0x36
 10194 1705 0A       		.uleb128 0xa
 10195 1706 01       		.uleb128 0x1
 10196 1707 51       		.byte	0x51
 10197 1708 02       		.uleb128 0x2
 10198 1709 08       		.byte	0x8
 10199 170a 37       		.byte	0x37
 10200 170b 00       		.byte	0
 10201 170c 00       		.byte	0
 10202 170d 0E       		.uleb128 0xe
 10203 170e 7C120000 		.4byte	.LASF129
 10204 1712 01       		.byte	0x1
 10205 1713 5605     		.2byte	0x556
 10206 1715 78030000 		.4byte	0x378
 10207 1719 00000000 		.4byte	.LFB103
 10208 171d 24000000 		.4byte	.LFE103-.LFB103
 10209 1721 01       		.uleb128 0x1
 10210 1722 9C       		.byte	0x9c
 10211 1723 43170000 		.4byte	0x1743
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 221


 10212 1727 09       		.uleb128 0x9
 10213 1728 12000000 		.4byte	.LVL234
 10214 172c 9D290000 		.4byte	0x299d
 10215 1730 0A       		.uleb128 0xa
 10216 1731 01       		.uleb128 0x1
 10217 1732 53       		.byte	0x53
 10218 1733 02       		.uleb128 0x2
 10219 1734 74       		.byte	0x74
 10220 1735 00       		.sleb128 0
 10221 1736 0A       		.uleb128 0xa
 10222 1737 01       		.uleb128 0x1
 10223 1738 52       		.byte	0x52
 10224 1739 01       		.uleb128 0x1
 10225 173a 35       		.byte	0x35
 10226 173b 0A       		.uleb128 0xa
 10227 173c 01       		.uleb128 0x1
 10228 173d 51       		.byte	0x51
 10229 173e 02       		.uleb128 0x2
 10230 173f 08       		.byte	0x8
 10231 1740 37       		.byte	0x37
 10232 1741 00       		.byte	0
 10233 1742 00       		.byte	0
 10234 1743 0C       		.uleb128 0xc
 10235 1744 83150000 		.4byte	.LASF130
 10236 1748 01       		.byte	0x1
 10237 1749 6005     		.2byte	0x560
 10238 174b 00000000 		.4byte	.LFB104
 10239 174f 18000000 		.4byte	.LFE104-.LFB104
 10240 1753 01       		.uleb128 0x1
 10241 1754 9C       		.byte	0x9c
 10242 1755 7F170000 		.4byte	0x177f
 10243 1759 0D       		.uleb128 0xd
 10244 175a 67160000 		.4byte	.LASF131
 10245 175e 01       		.byte	0x1
 10246 175f 6005     		.2byte	0x560
 10247 1761 78030000 		.4byte	0x378
 10248 1765 05090000 		.4byte	.LLST60
 10249 1769 09       		.uleb128 0x9
 10250 176a 10000000 		.4byte	.LVL237
 10251 176e C4290000 		.4byte	0x29c4
 10252 1772 0A       		.uleb128 0xa
 10253 1773 01       		.uleb128 0x1
 10254 1774 52       		.byte	0x52
 10255 1775 01       		.uleb128 0x1
 10256 1776 35       		.byte	0x35
 10257 1777 0A       		.uleb128 0xa
 10258 1778 01       		.uleb128 0x1
 10259 1779 51       		.byte	0x51
 10260 177a 02       		.uleb128 0x2
 10261 177b 08       		.byte	0x8
 10262 177c 37       		.byte	0x37
 10263 177d 00       		.byte	0
 10264 177e 00       		.byte	0
 10265 177f 0E       		.uleb128 0xe
 10266 1780 A2160000 		.4byte	.LASF132
 10267 1784 01       		.byte	0x1
 10268 1785 6905     		.2byte	0x569
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 222


 10269 1787 78030000 		.4byte	0x378
 10270 178b 00000000 		.4byte	.LFB105
 10271 178f 24000000 		.4byte	.LFE105-.LFB105
 10272 1793 01       		.uleb128 0x1
 10273 1794 9C       		.byte	0x9c
 10274 1795 B5170000 		.4byte	0x17b5
 10275 1799 09       		.uleb128 0x9
 10276 179a 12000000 		.4byte	.LVL238
 10277 179e 9D290000 		.4byte	0x299d
 10278 17a2 0A       		.uleb128 0xa
 10279 17a3 01       		.uleb128 0x1
 10280 17a4 53       		.byte	0x53
 10281 17a5 02       		.uleb128 0x2
 10282 17a6 74       		.byte	0x74
 10283 17a7 00       		.sleb128 0
 10284 17a8 0A       		.uleb128 0xa
 10285 17a9 01       		.uleb128 0x1
 10286 17aa 52       		.byte	0x52
 10287 17ab 01       		.uleb128 0x1
 10288 17ac 34       		.byte	0x34
 10289 17ad 0A       		.uleb128 0xa
 10290 17ae 01       		.uleb128 0x1
 10291 17af 51       		.byte	0x51
 10292 17b0 02       		.uleb128 0x2
 10293 17b1 08       		.byte	0x8
 10294 17b2 37       		.byte	0x37
 10295 17b3 00       		.byte	0
 10296 17b4 00       		.byte	0
 10297 17b5 0C       		.uleb128 0xc
 10298 17b6 E8030000 		.4byte	.LASF133
 10299 17ba 01       		.byte	0x1
 10300 17bb 7305     		.2byte	0x573
 10301 17bd 00000000 		.4byte	.LFB106
 10302 17c1 18000000 		.4byte	.LFE106-.LFB106
 10303 17c5 01       		.uleb128 0x1
 10304 17c6 9C       		.byte	0x9c
 10305 17c7 F1170000 		.4byte	0x17f1
 10306 17cb 0D       		.uleb128 0xd
 10307 17cc F1150000 		.4byte	.LASF134
 10308 17d0 01       		.byte	0x1
 10309 17d1 7305     		.2byte	0x573
 10310 17d3 78030000 		.4byte	0x378
 10311 17d7 26090000 		.4byte	.LLST61
 10312 17db 09       		.uleb128 0x9
 10313 17dc 10000000 		.4byte	.LVL241
 10314 17e0 C4290000 		.4byte	0x29c4
 10315 17e4 0A       		.uleb128 0xa
 10316 17e5 01       		.uleb128 0x1
 10317 17e6 52       		.byte	0x52
 10318 17e7 01       		.uleb128 0x1
 10319 17e8 34       		.byte	0x34
 10320 17e9 0A       		.uleb128 0xa
 10321 17ea 01       		.uleb128 0x1
 10322 17eb 51       		.byte	0x51
 10323 17ec 02       		.uleb128 0x2
 10324 17ed 08       		.byte	0x8
 10325 17ee 37       		.byte	0x37
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 223


 10326 17ef 00       		.byte	0
 10327 17f0 00       		.byte	0
 10328 17f1 0E       		.uleb128 0xe
 10329 17f2 AF000000 		.4byte	.LASF135
 10330 17f6 01       		.byte	0x1
 10331 17f7 7C05     		.2byte	0x57c
 10332 17f9 78030000 		.4byte	0x378
 10333 17fd 00000000 		.4byte	.LFB107
 10334 1801 24000000 		.4byte	.LFE107-.LFB107
 10335 1805 01       		.uleb128 0x1
 10336 1806 9C       		.byte	0x9c
 10337 1807 27180000 		.4byte	0x1827
 10338 180b 09       		.uleb128 0x9
 10339 180c 12000000 		.4byte	.LVL242
 10340 1810 9D290000 		.4byte	0x299d
 10341 1814 0A       		.uleb128 0xa
 10342 1815 01       		.uleb128 0x1
 10343 1816 53       		.byte	0x53
 10344 1817 02       		.uleb128 0x2
 10345 1818 74       		.byte	0x74
 10346 1819 00       		.sleb128 0
 10347 181a 0A       		.uleb128 0xa
 10348 181b 01       		.uleb128 0x1
 10349 181c 52       		.byte	0x52
 10350 181d 01       		.uleb128 0x1
 10351 181e 33       		.byte	0x33
 10352 181f 0A       		.uleb128 0xa
 10353 1820 01       		.uleb128 0x1
 10354 1821 51       		.byte	0x51
 10355 1822 02       		.uleb128 0x2
 10356 1823 08       		.byte	0x8
 10357 1824 37       		.byte	0x37
 10358 1825 00       		.byte	0
 10359 1826 00       		.byte	0
 10360 1827 0C       		.uleb128 0xc
 10361 1828 90000000 		.4byte	.LASF136
 10362 182c 01       		.byte	0x1
 10363 182d 8605     		.2byte	0x586
 10364 182f 00000000 		.4byte	.LFB108
 10365 1833 18000000 		.4byte	.LFE108-.LFB108
 10366 1837 01       		.uleb128 0x1
 10367 1838 9C       		.byte	0x9c
 10368 1839 63180000 		.4byte	0x1863
 10369 183d 0D       		.uleb128 0xd
 10370 183e 05090000 		.4byte	.LASF17
 10371 1842 01       		.byte	0x1
 10372 1843 8605     		.2byte	0x586
 10373 1845 78030000 		.4byte	0x378
 10374 1849 47090000 		.4byte	.LLST62
 10375 184d 09       		.uleb128 0x9
 10376 184e 10000000 		.4byte	.LVL245
 10377 1852 C4290000 		.4byte	0x29c4
 10378 1856 0A       		.uleb128 0xa
 10379 1857 01       		.uleb128 0x1
 10380 1858 52       		.byte	0x52
 10381 1859 01       		.uleb128 0x1
 10382 185a 33       		.byte	0x33
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 224


 10383 185b 0A       		.uleb128 0xa
 10384 185c 01       		.uleb128 0x1
 10385 185d 51       		.byte	0x51
 10386 185e 02       		.uleb128 0x2
 10387 185f 08       		.byte	0x8
 10388 1860 37       		.byte	0x37
 10389 1861 00       		.byte	0
 10390 1862 00       		.byte	0
 10391 1863 0E       		.uleb128 0xe
 10392 1864 42080000 		.4byte	.LASF137
 10393 1868 01       		.byte	0x1
 10394 1869 8F05     		.2byte	0x58f
 10395 186b 78030000 		.4byte	0x378
 10396 186f 00000000 		.4byte	.LFB109
 10397 1873 24000000 		.4byte	.LFE109-.LFB109
 10398 1877 01       		.uleb128 0x1
 10399 1878 9C       		.byte	0x9c
 10400 1879 99180000 		.4byte	0x1899
 10401 187d 09       		.uleb128 0x9
 10402 187e 12000000 		.4byte	.LVL246
 10403 1882 9D290000 		.4byte	0x299d
 10404 1886 0A       		.uleb128 0xa
 10405 1887 01       		.uleb128 0x1
 10406 1888 53       		.byte	0x53
 10407 1889 02       		.uleb128 0x2
 10408 188a 74       		.byte	0x74
 10409 188b 00       		.sleb128 0
 10410 188c 0A       		.uleb128 0xa
 10411 188d 01       		.uleb128 0x1
 10412 188e 52       		.byte	0x52
 10413 188f 01       		.uleb128 0x1
 10414 1890 32       		.byte	0x32
 10415 1891 0A       		.uleb128 0xa
 10416 1892 01       		.uleb128 0x1
 10417 1893 51       		.byte	0x51
 10418 1894 02       		.uleb128 0x2
 10419 1895 08       		.byte	0x8
 10420 1896 37       		.byte	0x37
 10421 1897 00       		.byte	0
 10422 1898 00       		.byte	0
 10423 1899 0C       		.uleb128 0xc
 10424 189a DA140000 		.4byte	.LASF138
 10425 189e 01       		.byte	0x1
 10426 189f 9905     		.2byte	0x599
 10427 18a1 00000000 		.4byte	.LFB110
 10428 18a5 18000000 		.4byte	.LFE110-.LFB110
 10429 18a9 01       		.uleb128 0x1
 10430 18aa 9C       		.byte	0x9c
 10431 18ab D5180000 		.4byte	0x18d5
 10432 18af 0D       		.uleb128 0xd
 10433 18b0 81110000 		.4byte	.LASF34
 10434 18b4 01       		.byte	0x1
 10435 18b5 9905     		.2byte	0x599
 10436 18b7 78030000 		.4byte	0x378
 10437 18bb 68090000 		.4byte	.LLST63
 10438 18bf 09       		.uleb128 0x9
 10439 18c0 10000000 		.4byte	.LVL249
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 225


 10440 18c4 C4290000 		.4byte	0x29c4
 10441 18c8 0A       		.uleb128 0xa
 10442 18c9 01       		.uleb128 0x1
 10443 18ca 52       		.byte	0x52
 10444 18cb 01       		.uleb128 0x1
 10445 18cc 32       		.byte	0x32
 10446 18cd 0A       		.uleb128 0xa
 10447 18ce 01       		.uleb128 0x1
 10448 18cf 51       		.byte	0x51
 10449 18d0 02       		.uleb128 0x2
 10450 18d1 08       		.byte	0x8
 10451 18d2 37       		.byte	0x37
 10452 18d3 00       		.byte	0
 10453 18d4 00       		.byte	0
 10454 18d5 0E       		.uleb128 0xe
 10455 18d6 96120000 		.4byte	.LASF139
 10456 18da 01       		.byte	0x1
 10457 18db A705     		.2byte	0x5a7
 10458 18dd 78030000 		.4byte	0x378
 10459 18e1 00000000 		.4byte	.LFB111
 10460 18e5 24000000 		.4byte	.LFE111-.LFB111
 10461 18e9 01       		.uleb128 0x1
 10462 18ea 9C       		.byte	0x9c
 10463 18eb 0B190000 		.4byte	0x190b
 10464 18ef 09       		.uleb128 0x9
 10465 18f0 12000000 		.4byte	.LVL250
 10466 18f4 9D290000 		.4byte	0x299d
 10467 18f8 0A       		.uleb128 0xa
 10468 18f9 01       		.uleb128 0x1
 10469 18fa 53       		.byte	0x53
 10470 18fb 02       		.uleb128 0x2
 10471 18fc 74       		.byte	0x74
 10472 18fd 00       		.sleb128 0
 10473 18fe 0A       		.uleb128 0xa
 10474 18ff 01       		.uleb128 0x1
 10475 1900 52       		.byte	0x52
 10476 1901 01       		.uleb128 0x1
 10477 1902 31       		.byte	0x31
 10478 1903 0A       		.uleb128 0xa
 10479 1904 01       		.uleb128 0x1
 10480 1905 51       		.byte	0x51
 10481 1906 02       		.uleb128 0x2
 10482 1907 08       		.byte	0x8
 10483 1908 37       		.byte	0x37
 10484 1909 00       		.byte	0
 10485 190a 00       		.byte	0
 10486 190b 0C       		.uleb128 0xc
 10487 190c 43010000 		.4byte	.LASF140
 10488 1910 01       		.byte	0x1
 10489 1911 B605     		.2byte	0x5b6
 10490 1913 00000000 		.4byte	.LFB112
 10491 1917 18000000 		.4byte	.LFE112-.LFB112
 10492 191b 01       		.uleb128 0x1
 10493 191c 9C       		.byte	0x9c
 10494 191d 47190000 		.4byte	0x1947
 10495 1921 0D       		.uleb128 0xd
 10496 1922 81110000 		.4byte	.LASF34
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 226


 10497 1926 01       		.byte	0x1
 10498 1927 B605     		.2byte	0x5b6
 10499 1929 78030000 		.4byte	0x378
 10500 192d 89090000 		.4byte	.LLST64
 10501 1931 09       		.uleb128 0x9
 10502 1932 10000000 		.4byte	.LVL253
 10503 1936 C4290000 		.4byte	0x29c4
 10504 193a 0A       		.uleb128 0xa
 10505 193b 01       		.uleb128 0x1
 10506 193c 52       		.byte	0x52
 10507 193d 01       		.uleb128 0x1
 10508 193e 31       		.byte	0x31
 10509 193f 0A       		.uleb128 0xa
 10510 1940 01       		.uleb128 0x1
 10511 1941 51       		.byte	0x51
 10512 1942 02       		.uleb128 0x2
 10513 1943 08       		.byte	0x8
 10514 1944 37       		.byte	0x37
 10515 1945 00       		.byte	0
 10516 1946 00       		.byte	0
 10517 1947 0E       		.uleb128 0xe
 10518 1948 A2070000 		.4byte	.LASF141
 10519 194c 01       		.byte	0x1
 10520 194d C205     		.2byte	0x5c2
 10521 194f 78030000 		.4byte	0x378
 10522 1953 00000000 		.4byte	.LFB113
 10523 1957 24000000 		.4byte	.LFE113-.LFB113
 10524 195b 01       		.uleb128 0x1
 10525 195c 9C       		.byte	0x9c
 10526 195d 7D190000 		.4byte	0x197d
 10527 1961 09       		.uleb128 0x9
 10528 1962 12000000 		.4byte	.LVL254
 10529 1966 9D290000 		.4byte	0x299d
 10530 196a 0A       		.uleb128 0xa
 10531 196b 01       		.uleb128 0x1
 10532 196c 53       		.byte	0x53
 10533 196d 02       		.uleb128 0x2
 10534 196e 74       		.byte	0x74
 10535 196f 00       		.sleb128 0
 10536 1970 0A       		.uleb128 0xa
 10537 1971 01       		.uleb128 0x1
 10538 1972 52       		.byte	0x52
 10539 1973 01       		.uleb128 0x1
 10540 1974 30       		.byte	0x30
 10541 1975 0A       		.uleb128 0xa
 10542 1976 01       		.uleb128 0x1
 10543 1977 51       		.byte	0x51
 10544 1978 02       		.uleb128 0x2
 10545 1979 08       		.byte	0x8
 10546 197a 37       		.byte	0x37
 10547 197b 00       		.byte	0
 10548 197c 00       		.byte	0
 10549 197d 0C       		.uleb128 0xc
 10550 197e 8C0F0000 		.4byte	.LASF142
 10551 1982 01       		.byte	0x1
 10552 1983 CF05     		.2byte	0x5cf
 10553 1985 00000000 		.4byte	.LFB114
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 227


 10554 1989 18000000 		.4byte	.LFE114-.LFB114
 10555 198d 01       		.uleb128 0x1
 10556 198e 9C       		.byte	0x9c
 10557 198f B9190000 		.4byte	0x19b9
 10558 1993 0D       		.uleb128 0xd
 10559 1994 81110000 		.4byte	.LASF34
 10560 1998 01       		.byte	0x1
 10561 1999 CF05     		.2byte	0x5cf
 10562 199b 78030000 		.4byte	0x378
 10563 199f AA090000 		.4byte	.LLST65
 10564 19a3 09       		.uleb128 0x9
 10565 19a4 10000000 		.4byte	.LVL257
 10566 19a8 C4290000 		.4byte	0x29c4
 10567 19ac 0A       		.uleb128 0xa
 10568 19ad 01       		.uleb128 0x1
 10569 19ae 52       		.byte	0x52
 10570 19af 01       		.uleb128 0x1
 10571 19b0 30       		.byte	0x30
 10572 19b1 0A       		.uleb128 0xa
 10573 19b2 01       		.uleb128 0x1
 10574 19b3 51       		.byte	0x51
 10575 19b4 02       		.uleb128 0x2
 10576 19b5 08       		.byte	0x8
 10577 19b6 37       		.byte	0x37
 10578 19b7 00       		.byte	0
 10579 19b8 00       		.byte	0
 10580 19b9 0E       		.uleb128 0xe
 10581 19ba 4B090000 		.4byte	.LASF143
 10582 19be 01       		.byte	0x1
 10583 19bf DC05     		.2byte	0x5dc
 10584 19c1 81000000 		.4byte	0x81
 10585 19c5 00000000 		.4byte	.LFB115
 10586 19c9 1C000000 		.4byte	.LFE115-.LFB115
 10587 19cd 01       		.uleb128 0x1
 10588 19ce 9C       		.byte	0x9c
 10589 19cf EA190000 		.4byte	0x19ea
 10590 19d3 09       		.uleb128 0x9
 10591 19d4 10000000 		.4byte	.LVL258
 10592 19d8 E5290000 		.4byte	0x29e5
 10593 19dc 0A       		.uleb128 0xa
 10594 19dd 01       		.uleb128 0x1
 10595 19de 52       		.byte	0x52
 10596 19df 02       		.uleb128 0x2
 10597 19e0 74       		.byte	0x74
 10598 19e1 00       		.sleb128 0
 10599 19e2 0A       		.uleb128 0xa
 10600 19e3 01       		.uleb128 0x1
 10601 19e4 51       		.byte	0x51
 10602 19e5 02       		.uleb128 0x2
 10603 19e6 08       		.byte	0x8
 10604 19e7 38       		.byte	0x38
 10605 19e8 00       		.byte	0
 10606 19e9 00       		.byte	0
 10607 19ea 0C       		.uleb128 0xc
 10608 19eb 57140000 		.4byte	.LASF144
 10609 19ef 01       		.byte	0x1
 10610 19f0 E805     		.2byte	0x5e8
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 228


 10611 19f2 00000000 		.4byte	.LFB116
 10612 19f6 14000000 		.4byte	.LFE116-.LFB116
 10613 19fa 01       		.uleb128 0x1
 10614 19fb 9C       		.byte	0x9c
 10615 19fc 211A0000 		.4byte	0x1a21
 10616 1a00 0D       		.uleb128 0xd
 10617 1a01 81110000 		.4byte	.LASF34
 10618 1a05 01       		.byte	0x1
 10619 1a06 E805     		.2byte	0x5e8
 10620 1a08 81000000 		.4byte	0x81
 10621 1a0c CB090000 		.4byte	.LLST66
 10622 1a10 09       		.uleb128 0x9
 10623 1a11 0E000000 		.4byte	.LVL261
 10624 1a15 012A0000 		.4byte	0x2a01
 10625 1a19 0A       		.uleb128 0xa
 10626 1a1a 01       		.uleb128 0x1
 10627 1a1b 51       		.byte	0x51
 10628 1a1c 02       		.uleb128 0x2
 10629 1a1d 08       		.byte	0x8
 10630 1a1e 38       		.byte	0x38
 10631 1a1f 00       		.byte	0
 10632 1a20 00       		.byte	0
 10633 1a21 0E       		.uleb128 0xe
 10634 1a22 B8130000 		.4byte	.LASF145
 10635 1a26 01       		.byte	0x1
 10636 1a27 F105     		.2byte	0x5f1
 10637 1a29 78030000 		.4byte	0x378
 10638 1a2d 00000000 		.4byte	.LFB117
 10639 1a31 24000000 		.4byte	.LFE117-.LFB117
 10640 1a35 01       		.uleb128 0x1
 10641 1a36 9C       		.byte	0x9c
 10642 1a37 571A0000 		.4byte	0x1a57
 10643 1a3b 09       		.uleb128 0x9
 10644 1a3c 12000000 		.4byte	.LVL262
 10645 1a40 9D290000 		.4byte	0x299d
 10646 1a44 0A       		.uleb128 0xa
 10647 1a45 01       		.uleb128 0x1
 10648 1a46 53       		.byte	0x53
 10649 1a47 02       		.uleb128 0x2
 10650 1a48 74       		.byte	0x74
 10651 1a49 00       		.sleb128 0
 10652 1a4a 0A       		.uleb128 0xa
 10653 1a4b 01       		.uleb128 0x1
 10654 1a4c 52       		.byte	0x52
 10655 1a4d 01       		.uleb128 0x1
 10656 1a4e 37       		.byte	0x37
 10657 1a4f 0A       		.uleb128 0xa
 10658 1a50 01       		.uleb128 0x1
 10659 1a51 51       		.byte	0x51
 10660 1a52 02       		.uleb128 0x2
 10661 1a53 08       		.byte	0x8
 10662 1a54 38       		.byte	0x38
 10663 1a55 00       		.byte	0
 10664 1a56 00       		.byte	0
 10665 1a57 0C       		.uleb128 0xc
 10666 1a58 D30C0000 		.4byte	.LASF146
 10667 1a5c 01       		.byte	0x1
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 229


 10668 1a5d FB05     		.2byte	0x5fb
 10669 1a5f 00000000 		.4byte	.LFB118
 10670 1a63 18000000 		.4byte	.LFE118-.LFB118
 10671 1a67 01       		.uleb128 0x1
 10672 1a68 9C       		.byte	0x9c
 10673 1a69 931A0000 		.4byte	0x1a93
 10674 1a6d 0D       		.uleb128 0xd
 10675 1a6e 81110000 		.4byte	.LASF34
 10676 1a72 01       		.byte	0x1
 10677 1a73 FB05     		.2byte	0x5fb
 10678 1a75 78030000 		.4byte	0x378
 10679 1a79 EC090000 		.4byte	.LLST67
 10680 1a7d 09       		.uleb128 0x9
 10681 1a7e 10000000 		.4byte	.LVL265
 10682 1a82 C4290000 		.4byte	0x29c4
 10683 1a86 0A       		.uleb128 0xa
 10684 1a87 01       		.uleb128 0x1
 10685 1a88 52       		.byte	0x52
 10686 1a89 01       		.uleb128 0x1
 10687 1a8a 37       		.byte	0x37
 10688 1a8b 0A       		.uleb128 0xa
 10689 1a8c 01       		.uleb128 0x1
 10690 1a8d 51       		.byte	0x51
 10691 1a8e 02       		.uleb128 0x2
 10692 1a8f 08       		.byte	0x8
 10693 1a90 38       		.byte	0x38
 10694 1a91 00       		.byte	0
 10695 1a92 00       		.byte	0
 10696 1a93 0E       		.uleb128 0xe
 10697 1a94 86160000 		.4byte	.LASF147
 10698 1a98 01       		.byte	0x1
 10699 1a99 0406     		.2byte	0x604
 10700 1a9b 78030000 		.4byte	0x378
 10701 1a9f 00000000 		.4byte	.LFB119
 10702 1aa3 24000000 		.4byte	.LFE119-.LFB119
 10703 1aa7 01       		.uleb128 0x1
 10704 1aa8 9C       		.byte	0x9c
 10705 1aa9 C91A0000 		.4byte	0x1ac9
 10706 1aad 09       		.uleb128 0x9
 10707 1aae 12000000 		.4byte	.LVL266
 10708 1ab2 9D290000 		.4byte	0x299d
 10709 1ab6 0A       		.uleb128 0xa
 10710 1ab7 01       		.uleb128 0x1
 10711 1ab8 53       		.byte	0x53
 10712 1ab9 02       		.uleb128 0x2
 10713 1aba 74       		.byte	0x74
 10714 1abb 00       		.sleb128 0
 10715 1abc 0A       		.uleb128 0xa
 10716 1abd 01       		.uleb128 0x1
 10717 1abe 52       		.byte	0x52
 10718 1abf 01       		.uleb128 0x1
 10719 1ac0 36       		.byte	0x36
 10720 1ac1 0A       		.uleb128 0xa
 10721 1ac2 01       		.uleb128 0x1
 10722 1ac3 51       		.byte	0x51
 10723 1ac4 02       		.uleb128 0x2
 10724 1ac5 08       		.byte	0x8
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 230


 10725 1ac6 38       		.byte	0x38
 10726 1ac7 00       		.byte	0
 10727 1ac8 00       		.byte	0
 10728 1ac9 0C       		.uleb128 0xc
 10729 1aca 24100000 		.4byte	.LASF148
 10730 1ace 01       		.byte	0x1
 10731 1acf 0E06     		.2byte	0x60e
 10732 1ad1 00000000 		.4byte	.LFB120
 10733 1ad5 18000000 		.4byte	.LFE120-.LFB120
 10734 1ad9 01       		.uleb128 0x1
 10735 1ada 9C       		.byte	0x9c
 10736 1adb 051B0000 		.4byte	0x1b05
 10737 1adf 0D       		.uleb128 0xd
 10738 1ae0 81110000 		.4byte	.LASF34
 10739 1ae4 01       		.byte	0x1
 10740 1ae5 0E06     		.2byte	0x60e
 10741 1ae7 78030000 		.4byte	0x378
 10742 1aeb 0D0A0000 		.4byte	.LLST68
 10743 1aef 09       		.uleb128 0x9
 10744 1af0 10000000 		.4byte	.LVL269
 10745 1af4 C4290000 		.4byte	0x29c4
 10746 1af8 0A       		.uleb128 0xa
 10747 1af9 01       		.uleb128 0x1
 10748 1afa 52       		.byte	0x52
 10749 1afb 01       		.uleb128 0x1
 10750 1afc 36       		.byte	0x36
 10751 1afd 0A       		.uleb128 0xa
 10752 1afe 01       		.uleb128 0x1
 10753 1aff 51       		.byte	0x51
 10754 1b00 02       		.uleb128 0x2
 10755 1b01 08       		.byte	0x8
 10756 1b02 38       		.byte	0x38
 10757 1b03 00       		.byte	0
 10758 1b04 00       		.byte	0
 10759 1b05 0E       		.uleb128 0xe
 10760 1b06 24150000 		.4byte	.LASF149
 10761 1b0a 01       		.byte	0x1
 10762 1b0b 1706     		.2byte	0x617
 10763 1b0d 78030000 		.4byte	0x378
 10764 1b11 00000000 		.4byte	.LFB121
 10765 1b15 24000000 		.4byte	.LFE121-.LFB121
 10766 1b19 01       		.uleb128 0x1
 10767 1b1a 9C       		.byte	0x9c
 10768 1b1b 3B1B0000 		.4byte	0x1b3b
 10769 1b1f 09       		.uleb128 0x9
 10770 1b20 12000000 		.4byte	.LVL270
 10771 1b24 9D290000 		.4byte	0x299d
 10772 1b28 0A       		.uleb128 0xa
 10773 1b29 01       		.uleb128 0x1
 10774 1b2a 53       		.byte	0x53
 10775 1b2b 02       		.uleb128 0x2
 10776 1b2c 74       		.byte	0x74
 10777 1b2d 00       		.sleb128 0
 10778 1b2e 0A       		.uleb128 0xa
 10779 1b2f 01       		.uleb128 0x1
 10780 1b30 52       		.byte	0x52
 10781 1b31 01       		.uleb128 0x1
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 231


 10782 1b32 35       		.byte	0x35
 10783 1b33 0A       		.uleb128 0xa
 10784 1b34 01       		.uleb128 0x1
 10785 1b35 51       		.byte	0x51
 10786 1b36 02       		.uleb128 0x2
 10787 1b37 08       		.byte	0x8
 10788 1b38 38       		.byte	0x38
 10789 1b39 00       		.byte	0
 10790 1b3a 00       		.byte	0
 10791 1b3b 0C       		.uleb128 0xc
 10792 1b3c C60E0000 		.4byte	.LASF150
 10793 1b40 01       		.byte	0x1
 10794 1b41 2106     		.2byte	0x621
 10795 1b43 00000000 		.4byte	.LFB122
 10796 1b47 18000000 		.4byte	.LFE122-.LFB122
 10797 1b4b 01       		.uleb128 0x1
 10798 1b4c 9C       		.byte	0x9c
 10799 1b4d 771B0000 		.4byte	0x1b77
 10800 1b51 0D       		.uleb128 0xd
 10801 1b52 81110000 		.4byte	.LASF34
 10802 1b56 01       		.byte	0x1
 10803 1b57 2106     		.2byte	0x621
 10804 1b59 78030000 		.4byte	0x378
 10805 1b5d 2E0A0000 		.4byte	.LLST69
 10806 1b61 09       		.uleb128 0x9
 10807 1b62 10000000 		.4byte	.LVL273
 10808 1b66 C4290000 		.4byte	0x29c4
 10809 1b6a 0A       		.uleb128 0xa
 10810 1b6b 01       		.uleb128 0x1
 10811 1b6c 52       		.byte	0x52
 10812 1b6d 01       		.uleb128 0x1
 10813 1b6e 35       		.byte	0x35
 10814 1b6f 0A       		.uleb128 0xa
 10815 1b70 01       		.uleb128 0x1
 10816 1b71 51       		.byte	0x51
 10817 1b72 02       		.uleb128 0x2
 10818 1b73 08       		.byte	0x8
 10819 1b74 38       		.byte	0x38
 10820 1b75 00       		.byte	0
 10821 1b76 00       		.byte	0
 10822 1b77 0E       		.uleb128 0xe
 10823 1b78 65020000 		.4byte	.LASF151
 10824 1b7c 01       		.byte	0x1
 10825 1b7d 2A06     		.2byte	0x62a
 10826 1b7f 78030000 		.4byte	0x378
 10827 1b83 00000000 		.4byte	.LFB123
 10828 1b87 24000000 		.4byte	.LFE123-.LFB123
 10829 1b8b 01       		.uleb128 0x1
 10830 1b8c 9C       		.byte	0x9c
 10831 1b8d AD1B0000 		.4byte	0x1bad
 10832 1b91 09       		.uleb128 0x9
 10833 1b92 12000000 		.4byte	.LVL274
 10834 1b96 9D290000 		.4byte	0x299d
 10835 1b9a 0A       		.uleb128 0xa
 10836 1b9b 01       		.uleb128 0x1
 10837 1b9c 53       		.byte	0x53
 10838 1b9d 02       		.uleb128 0x2
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 232


 10839 1b9e 74       		.byte	0x74
 10840 1b9f 00       		.sleb128 0
 10841 1ba0 0A       		.uleb128 0xa
 10842 1ba1 01       		.uleb128 0x1
 10843 1ba2 52       		.byte	0x52
 10844 1ba3 01       		.uleb128 0x1
 10845 1ba4 34       		.byte	0x34
 10846 1ba5 0A       		.uleb128 0xa
 10847 1ba6 01       		.uleb128 0x1
 10848 1ba7 51       		.byte	0x51
 10849 1ba8 02       		.uleb128 0x2
 10850 1ba9 08       		.byte	0x8
 10851 1baa 38       		.byte	0x38
 10852 1bab 00       		.byte	0
 10853 1bac 00       		.byte	0
 10854 1bad 0C       		.uleb128 0xc
 10855 1bae 620D0000 		.4byte	.LASF152
 10856 1bb2 01       		.byte	0x1
 10857 1bb3 3406     		.2byte	0x634
 10858 1bb5 00000000 		.4byte	.LFB124
 10859 1bb9 18000000 		.4byte	.LFE124-.LFB124
 10860 1bbd 01       		.uleb128 0x1
 10861 1bbe 9C       		.byte	0x9c
 10862 1bbf E91B0000 		.4byte	0x1be9
 10863 1bc3 0D       		.uleb128 0xd
 10864 1bc4 81110000 		.4byte	.LASF34
 10865 1bc8 01       		.byte	0x1
 10866 1bc9 3406     		.2byte	0x634
 10867 1bcb 78030000 		.4byte	0x378
 10868 1bcf 4F0A0000 		.4byte	.LLST70
 10869 1bd3 09       		.uleb128 0x9
 10870 1bd4 10000000 		.4byte	.LVL277
 10871 1bd8 C4290000 		.4byte	0x29c4
 10872 1bdc 0A       		.uleb128 0xa
 10873 1bdd 01       		.uleb128 0x1
 10874 1bde 52       		.byte	0x52
 10875 1bdf 01       		.uleb128 0x1
 10876 1be0 34       		.byte	0x34
 10877 1be1 0A       		.uleb128 0xa
 10878 1be2 01       		.uleb128 0x1
 10879 1be3 51       		.byte	0x51
 10880 1be4 02       		.uleb128 0x2
 10881 1be5 08       		.byte	0x8
 10882 1be6 38       		.byte	0x38
 10883 1be7 00       		.byte	0
 10884 1be8 00       		.byte	0
 10885 1be9 0E       		.uleb128 0xe
 10886 1bea 430D0000 		.4byte	.LASF153
 10887 1bee 01       		.byte	0x1
 10888 1bef 3E06     		.2byte	0x63e
 10889 1bf1 78030000 		.4byte	0x378
 10890 1bf5 00000000 		.4byte	.LFB125
 10891 1bf9 24000000 		.4byte	.LFE125-.LFB125
 10892 1bfd 01       		.uleb128 0x1
 10893 1bfe 9C       		.byte	0x9c
 10894 1bff 1F1C0000 		.4byte	0x1c1f
 10895 1c03 09       		.uleb128 0x9
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 233


 10896 1c04 12000000 		.4byte	.LVL278
 10897 1c08 9D290000 		.4byte	0x299d
 10898 1c0c 0A       		.uleb128 0xa
 10899 1c0d 01       		.uleb128 0x1
 10900 1c0e 53       		.byte	0x53
 10901 1c0f 02       		.uleb128 0x2
 10902 1c10 74       		.byte	0x74
 10903 1c11 00       		.sleb128 0
 10904 1c12 0A       		.uleb128 0xa
 10905 1c13 01       		.uleb128 0x1
 10906 1c14 52       		.byte	0x52
 10907 1c15 01       		.uleb128 0x1
 10908 1c16 33       		.byte	0x33
 10909 1c17 0A       		.uleb128 0xa
 10910 1c18 01       		.uleb128 0x1
 10911 1c19 51       		.byte	0x51
 10912 1c1a 02       		.uleb128 0x2
 10913 1c1b 08       		.byte	0x8
 10914 1c1c 38       		.byte	0x38
 10915 1c1d 00       		.byte	0
 10916 1c1e 00       		.byte	0
 10917 1c1f 0C       		.uleb128 0xc
 10918 1c20 C00A0000 		.4byte	.LASF154
 10919 1c24 01       		.byte	0x1
 10920 1c25 4806     		.2byte	0x648
 10921 1c27 00000000 		.4byte	.LFB126
 10922 1c2b 18000000 		.4byte	.LFE126-.LFB126
 10923 1c2f 01       		.uleb128 0x1
 10924 1c30 9C       		.byte	0x9c
 10925 1c31 5B1C0000 		.4byte	0x1c5b
 10926 1c35 0D       		.uleb128 0xd
 10927 1c36 81110000 		.4byte	.LASF34
 10928 1c3a 01       		.byte	0x1
 10929 1c3b 4806     		.2byte	0x648
 10930 1c3d 78030000 		.4byte	0x378
 10931 1c41 700A0000 		.4byte	.LLST71
 10932 1c45 09       		.uleb128 0x9
 10933 1c46 10000000 		.4byte	.LVL281
 10934 1c4a C4290000 		.4byte	0x29c4
 10935 1c4e 0A       		.uleb128 0xa
 10936 1c4f 01       		.uleb128 0x1
 10937 1c50 52       		.byte	0x52
 10938 1c51 01       		.uleb128 0x1
 10939 1c52 33       		.byte	0x33
 10940 1c53 0A       		.uleb128 0xa
 10941 1c54 01       		.uleb128 0x1
 10942 1c55 51       		.byte	0x51
 10943 1c56 02       		.uleb128 0x2
 10944 1c57 08       		.byte	0x8
 10945 1c58 38       		.byte	0x38
 10946 1c59 00       		.byte	0
 10947 1c5a 00       		.byte	0
 10948 1c5b 0E       		.uleb128 0xe
 10949 1c5c 2F060000 		.4byte	.LASF155
 10950 1c60 01       		.byte	0x1
 10951 1c61 5206     		.2byte	0x652
 10952 1c63 78030000 		.4byte	0x378
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 234


 10953 1c67 00000000 		.4byte	.LFB127
 10954 1c6b 24000000 		.4byte	.LFE127-.LFB127
 10955 1c6f 01       		.uleb128 0x1
 10956 1c70 9C       		.byte	0x9c
 10957 1c71 911C0000 		.4byte	0x1c91
 10958 1c75 09       		.uleb128 0x9
 10959 1c76 12000000 		.4byte	.LVL282
 10960 1c7a 9D290000 		.4byte	0x299d
 10961 1c7e 0A       		.uleb128 0xa
 10962 1c7f 01       		.uleb128 0x1
 10963 1c80 53       		.byte	0x53
 10964 1c81 02       		.uleb128 0x2
 10965 1c82 74       		.byte	0x74
 10966 1c83 00       		.sleb128 0
 10967 1c84 0A       		.uleb128 0xa
 10968 1c85 01       		.uleb128 0x1
 10969 1c86 52       		.byte	0x52
 10970 1c87 01       		.uleb128 0x1
 10971 1c88 30       		.byte	0x30
 10972 1c89 0A       		.uleb128 0xa
 10973 1c8a 01       		.uleb128 0x1
 10974 1c8b 51       		.byte	0x51
 10975 1c8c 02       		.uleb128 0x2
 10976 1c8d 08       		.byte	0x8
 10977 1c8e 38       		.byte	0x38
 10978 1c8f 00       		.byte	0
 10979 1c90 00       		.byte	0
 10980 1c91 0C       		.uleb128 0xc
 10981 1c92 E0070000 		.4byte	.LASF156
 10982 1c96 01       		.byte	0x1
 10983 1c97 5C06     		.2byte	0x65c
 10984 1c99 00000000 		.4byte	.LFB128
 10985 1c9d 18000000 		.4byte	.LFE128-.LFB128
 10986 1ca1 01       		.uleb128 0x1
 10987 1ca2 9C       		.byte	0x9c
 10988 1ca3 CD1C0000 		.4byte	0x1ccd
 10989 1ca7 0D       		.uleb128 0xd
 10990 1ca8 81110000 		.4byte	.LASF34
 10991 1cac 01       		.byte	0x1
 10992 1cad 5C06     		.2byte	0x65c
 10993 1caf 78030000 		.4byte	0x378
 10994 1cb3 910A0000 		.4byte	.LLST72
 10995 1cb7 09       		.uleb128 0x9
 10996 1cb8 10000000 		.4byte	.LVL285
 10997 1cbc C4290000 		.4byte	0x29c4
 10998 1cc0 0A       		.uleb128 0xa
 10999 1cc1 01       		.uleb128 0x1
 11000 1cc2 52       		.byte	0x52
 11001 1cc3 01       		.uleb128 0x1
 11002 1cc4 30       		.byte	0x30
 11003 1cc5 0A       		.uleb128 0xa
 11004 1cc6 01       		.uleb128 0x1
 11005 1cc7 51       		.byte	0x51
 11006 1cc8 02       		.uleb128 0x2
 11007 1cc9 08       		.byte	0x8
 11008 1cca 38       		.byte	0x38
 11009 1ccb 00       		.byte	0
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 235


 11010 1ccc 00       		.byte	0
 11011 1ccd 0E       		.uleb128 0xe
 11012 1cce 67120000 		.4byte	.LASF157
 11013 1cd2 01       		.byte	0x1
 11014 1cd3 6906     		.2byte	0x669
 11015 1cd5 81000000 		.4byte	0x81
 11016 1cd9 00000000 		.4byte	.LFB129
 11017 1cdd 1C000000 		.4byte	.LFE129-.LFB129
 11018 1ce1 01       		.uleb128 0x1
 11019 1ce2 9C       		.byte	0x9c
 11020 1ce3 FE1C0000 		.4byte	0x1cfe
 11021 1ce7 09       		.uleb128 0x9
 11022 1ce8 10000000 		.4byte	.LVL286
 11023 1cec E5290000 		.4byte	0x29e5
 11024 1cf0 0A       		.uleb128 0xa
 11025 1cf1 01       		.uleb128 0x1
 11026 1cf2 52       		.byte	0x52
 11027 1cf3 02       		.uleb128 0x2
 11028 1cf4 74       		.byte	0x74
 11029 1cf5 00       		.sleb128 0
 11030 1cf6 0A       		.uleb128 0xa
 11031 1cf7 01       		.uleb128 0x1
 11032 1cf8 51       		.byte	0x51
 11033 1cf9 02       		.uleb128 0x2
 11034 1cfa 08       		.byte	0x8
 11035 1cfb 3A       		.byte	0x3a
 11036 1cfc 00       		.byte	0
 11037 1cfd 00       		.byte	0
 11038 1cfe 0E       		.uleb128 0xe
 11039 1cff B4090000 		.4byte	.LASF158
 11040 1d03 01       		.byte	0x1
 11041 1d04 7406     		.2byte	0x674
 11042 1d06 78030000 		.4byte	0x378
 11043 1d0a 00000000 		.4byte	.LFB130
 11044 1d0e 24000000 		.4byte	.LFE130-.LFB130
 11045 1d12 01       		.uleb128 0x1
 11046 1d13 9C       		.byte	0x9c
 11047 1d14 341D0000 		.4byte	0x1d34
 11048 1d18 09       		.uleb128 0x9
 11049 1d19 12000000 		.4byte	.LVL287
 11050 1d1d 9D290000 		.4byte	0x299d
 11051 1d21 0A       		.uleb128 0xa
 11052 1d22 01       		.uleb128 0x1
 11053 1d23 53       		.byte	0x53
 11054 1d24 02       		.uleb128 0x2
 11055 1d25 74       		.byte	0x74
 11056 1d26 00       		.sleb128 0
 11057 1d27 0A       		.uleb128 0xa
 11058 1d28 01       		.uleb128 0x1
 11059 1d29 52       		.byte	0x52
 11060 1d2a 01       		.uleb128 0x1
 11061 1d2b 37       		.byte	0x37
 11062 1d2c 0A       		.uleb128 0xa
 11063 1d2d 01       		.uleb128 0x1
 11064 1d2e 51       		.byte	0x51
 11065 1d2f 02       		.uleb128 0x2
 11066 1d30 08       		.byte	0x8
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 236


 11067 1d31 3A       		.byte	0x3a
 11068 1d32 00       		.byte	0
 11069 1d33 00       		.byte	0
 11070 1d34 0C       		.uleb128 0xc
 11071 1d35 11100000 		.4byte	.LASF159
 11072 1d39 01       		.byte	0x1
 11073 1d3a 8606     		.2byte	0x686
 11074 1d3c 00000000 		.4byte	.LFB131
 11075 1d40 6C000000 		.4byte	.LFE131-.LFB131
 11076 1d44 01       		.uleb128 0x1
 11077 1d45 9C       		.byte	0x9c
 11078 1d46 C01D0000 		.4byte	0x1dc0
 11079 1d4a 10       		.uleb128 0x10
 11080 1d4b 617800   		.ascii	"ax\000"
 11081 1d4e 01       		.byte	0x1
 11082 1d4f 8606     		.2byte	0x686
 11083 1d51 C01D0000 		.4byte	0x1dc0
 11084 1d55 B20A0000 		.4byte	.LLST73
 11085 1d59 10       		.uleb128 0x10
 11086 1d5a 617900   		.ascii	"ay\000"
 11087 1d5d 01       		.byte	0x1
 11088 1d5e 8606     		.2byte	0x686
 11089 1d60 C01D0000 		.4byte	0x1dc0
 11090 1d64 DE0A0000 		.4byte	.LLST74
 11091 1d68 10       		.uleb128 0x10
 11092 1d69 617A00   		.ascii	"az\000"
 11093 1d6c 01       		.byte	0x1
 11094 1d6d 8606     		.2byte	0x686
 11095 1d6f C01D0000 		.4byte	0x1dc0
 11096 1d73 0A0B0000 		.4byte	.LLST75
 11097 1d77 10       		.uleb128 0x10
 11098 1d78 677800   		.ascii	"gx\000"
 11099 1d7b 01       		.byte	0x1
 11100 1d7c 8606     		.2byte	0x686
 11101 1d7e C01D0000 		.4byte	0x1dc0
 11102 1d82 360B0000 		.4byte	.LLST76
 11103 1d86 10       		.uleb128 0x10
 11104 1d87 677900   		.ascii	"gy\000"
 11105 1d8a 01       		.byte	0x1
 11106 1d8b 8606     		.2byte	0x686
 11107 1d8d C01D0000 		.4byte	0x1dc0
 11108 1d91 620B0000 		.4byte	.LLST77
 11109 1d95 10       		.uleb128 0x10
 11110 1d96 677A00   		.ascii	"gz\000"
 11111 1d99 01       		.byte	0x1
 11112 1d9a 8606     		.2byte	0x686
 11113 1d9c C01D0000 		.4byte	0x1dc0
 11114 1da0 820B0000 		.4byte	.LLST78
 11115 1da4 09       		.uleb128 0x9
 11116 1da5 1C000000 		.4byte	.LVL293
 11117 1da9 692A0000 		.4byte	0x2a69
 11118 1dad 0A       		.uleb128 0xa
 11119 1dae 01       		.uleb128 0x1
 11120 1daf 53       		.byte	0x53
 11121 1db0 02       		.uleb128 0x2
 11122 1db1 74       		.byte	0x74
 11123 1db2 00       		.sleb128 0
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 237


 11124 1db3 0A       		.uleb128 0xa
 11125 1db4 01       		.uleb128 0x1
 11126 1db5 52       		.byte	0x52
 11127 1db6 01       		.uleb128 0x1
 11128 1db7 3E       		.byte	0x3e
 11129 1db8 0A       		.uleb128 0xa
 11130 1db9 01       		.uleb128 0x1
 11131 1dba 51       		.byte	0x51
 11132 1dbb 02       		.uleb128 0x2
 11133 1dbc 08       		.byte	0x8
 11134 1dbd 3B       		.byte	0x3b
 11135 1dbe 00       		.byte	0
 11136 1dbf 00       		.byte	0
 11137 1dc0 12       		.uleb128 0x12
 11138 1dc1 04       		.byte	0x4
 11139 1dc2 8C000000 		.4byte	0x8c
 11140 1dc6 0E       		.uleb128 0xe
 11141 1dc7 C4020000 		.4byte	.LASF160
 11142 1dcb 01       		.byte	0x1
 11143 1dcc 9A06     		.2byte	0x69a
 11144 1dce 78030000 		.4byte	0x378
 11145 1dd2 00000000 		.4byte	.LFB132
 11146 1dd6 24000000 		.4byte	.LFE132-.LFB132
 11147 1dda 01       		.uleb128 0x1
 11148 1ddb 9C       		.byte	0x9c
 11149 1ddc FC1D0000 		.4byte	0x1dfc
 11150 1de0 09       		.uleb128 0x9
 11151 1de1 12000000 		.4byte	.LVL295
 11152 1de5 9D290000 		.4byte	0x299d
 11153 1de9 0A       		.uleb128 0xa
 11154 1dea 01       		.uleb128 0x1
 11155 1deb 53       		.byte	0x53
 11156 1dec 02       		.uleb128 0x2
 11157 1ded 74       		.byte	0x74
 11158 1dee 00       		.sleb128 0
 11159 1def 0A       		.uleb128 0xa
 11160 1df0 01       		.uleb128 0x1
 11161 1df1 52       		.byte	0x52
 11162 1df2 01       		.uleb128 0x1
 11163 1df3 37       		.byte	0x37
 11164 1df4 0A       		.uleb128 0xa
 11165 1df5 01       		.uleb128 0x1
 11166 1df6 51       		.byte	0x51
 11167 1df7 02       		.uleb128 0x2
 11168 1df8 08       		.byte	0x8
 11169 1df9 61       		.byte	0x61
 11170 1dfa 00       		.byte	0
 11171 1dfb 00       		.byte	0
 11172 1dfc 0E       		.uleb128 0xe
 11173 1dfd 2B110000 		.4byte	.LASF161
 11174 1e01 01       		.byte	0x1
 11175 1e02 A306     		.2byte	0x6a3
 11176 1e04 78030000 		.4byte	0x378
 11177 1e08 00000000 		.4byte	.LFB133
 11178 1e0c 24000000 		.4byte	.LFE133-.LFB133
 11179 1e10 01       		.uleb128 0x1
 11180 1e11 9C       		.byte	0x9c
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 238


 11181 1e12 321E0000 		.4byte	0x1e32
 11182 1e16 09       		.uleb128 0x9
 11183 1e17 12000000 		.4byte	.LVL296
 11184 1e1b 9D290000 		.4byte	0x299d
 11185 1e1f 0A       		.uleb128 0xa
 11186 1e20 01       		.uleb128 0x1
 11187 1e21 53       		.byte	0x53
 11188 1e22 02       		.uleb128 0x2
 11189 1e23 74       		.byte	0x74
 11190 1e24 00       		.sleb128 0
 11191 1e25 0A       		.uleb128 0xa
 11192 1e26 01       		.uleb128 0x1
 11193 1e27 52       		.byte	0x52
 11194 1e28 01       		.uleb128 0x1
 11195 1e29 36       		.byte	0x36
 11196 1e2a 0A       		.uleb128 0xa
 11197 1e2b 01       		.uleb128 0x1
 11198 1e2c 51       		.byte	0x51
 11199 1e2d 02       		.uleb128 0x2
 11200 1e2e 08       		.byte	0x8
 11201 1e2f 61       		.byte	0x61
 11202 1e30 00       		.byte	0
 11203 1e31 00       		.byte	0
 11204 1e32 0E       		.uleb128 0xe
 11205 1e33 DE160000 		.4byte	.LASF162
 11206 1e37 01       		.byte	0x1
 11207 1e38 AC06     		.2byte	0x6ac
 11208 1e3a 78030000 		.4byte	0x378
 11209 1e3e 00000000 		.4byte	.LFB134
 11210 1e42 24000000 		.4byte	.LFE134-.LFB134
 11211 1e46 01       		.uleb128 0x1
 11212 1e47 9C       		.byte	0x9c
 11213 1e48 681E0000 		.4byte	0x1e68
 11214 1e4c 09       		.uleb128 0x9
 11215 1e4d 12000000 		.4byte	.LVL297
 11216 1e51 9D290000 		.4byte	0x299d
 11217 1e55 0A       		.uleb128 0xa
 11218 1e56 01       		.uleb128 0x1
 11219 1e57 53       		.byte	0x53
 11220 1e58 02       		.uleb128 0x2
 11221 1e59 74       		.byte	0x74
 11222 1e5a 00       		.sleb128 0
 11223 1e5b 0A       		.uleb128 0xa
 11224 1e5c 01       		.uleb128 0x1
 11225 1e5d 52       		.byte	0x52
 11226 1e5e 01       		.uleb128 0x1
 11227 1e5f 35       		.byte	0x35
 11228 1e60 0A       		.uleb128 0xa
 11229 1e61 01       		.uleb128 0x1
 11230 1e62 51       		.byte	0x51
 11231 1e63 02       		.uleb128 0x2
 11232 1e64 08       		.byte	0x8
 11233 1e65 61       		.byte	0x61
 11234 1e66 00       		.byte	0
 11235 1e67 00       		.byte	0
 11236 1e68 0E       		.uleb128 0xe
 11237 1e69 80140000 		.4byte	.LASF163
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 239


 11238 1e6d 01       		.byte	0x1
 11239 1e6e B506     		.2byte	0x6b5
 11240 1e70 78030000 		.4byte	0x378
 11241 1e74 00000000 		.4byte	.LFB135
 11242 1e78 24000000 		.4byte	.LFE135-.LFB135
 11243 1e7c 01       		.uleb128 0x1
 11244 1e7d 9C       		.byte	0x9c
 11245 1e7e 9E1E0000 		.4byte	0x1e9e
 11246 1e82 09       		.uleb128 0x9
 11247 1e83 12000000 		.4byte	.LVL298
 11248 1e87 9D290000 		.4byte	0x299d
 11249 1e8b 0A       		.uleb128 0xa
 11250 1e8c 01       		.uleb128 0x1
 11251 1e8d 53       		.byte	0x53
 11252 1e8e 02       		.uleb128 0x2
 11253 1e8f 74       		.byte	0x74
 11254 1e90 00       		.sleb128 0
 11255 1e91 0A       		.uleb128 0xa
 11256 1e92 01       		.uleb128 0x1
 11257 1e93 52       		.byte	0x52
 11258 1e94 01       		.uleb128 0x1
 11259 1e95 34       		.byte	0x34
 11260 1e96 0A       		.uleb128 0xa
 11261 1e97 01       		.uleb128 0x1
 11262 1e98 51       		.byte	0x51
 11263 1e99 02       		.uleb128 0x2
 11264 1e9a 08       		.byte	0x8
 11265 1e9b 61       		.byte	0x61
 11266 1e9c 00       		.byte	0
 11267 1e9d 00       		.byte	0
 11268 1e9e 0E       		.uleb128 0xe
 11269 1e9f 0C000000 		.4byte	.LASF164
 11270 1ea3 01       		.byte	0x1
 11271 1ea4 BE06     		.2byte	0x6be
 11272 1ea6 78030000 		.4byte	0x378
 11273 1eaa 00000000 		.4byte	.LFB136
 11274 1eae 24000000 		.4byte	.LFE136-.LFB136
 11275 1eb2 01       		.uleb128 0x1
 11276 1eb3 9C       		.byte	0x9c
 11277 1eb4 D41E0000 		.4byte	0x1ed4
 11278 1eb8 09       		.uleb128 0x9
 11279 1eb9 12000000 		.4byte	.LVL299
 11280 1ebd 9D290000 		.4byte	0x299d
 11281 1ec1 0A       		.uleb128 0xa
 11282 1ec2 01       		.uleb128 0x1
 11283 1ec3 53       		.byte	0x53
 11284 1ec4 02       		.uleb128 0x2
 11285 1ec5 74       		.byte	0x74
 11286 1ec6 00       		.sleb128 0
 11287 1ec7 0A       		.uleb128 0xa
 11288 1ec8 01       		.uleb128 0x1
 11289 1ec9 52       		.byte	0x52
 11290 1eca 01       		.uleb128 0x1
 11291 1ecb 33       		.byte	0x33
 11292 1ecc 0A       		.uleb128 0xa
 11293 1ecd 01       		.uleb128 0x1
 11294 1ece 51       		.byte	0x51
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 240


 11295 1ecf 02       		.uleb128 0x2
 11296 1ed0 08       		.byte	0x8
 11297 1ed1 61       		.byte	0x61
 11298 1ed2 00       		.byte	0
 11299 1ed3 00       		.byte	0
 11300 1ed4 0E       		.uleb128 0xe
 11301 1ed5 A6020000 		.4byte	.LASF165
 11302 1ed9 01       		.byte	0x1
 11303 1eda C706     		.2byte	0x6c7
 11304 1edc 78030000 		.4byte	0x378
 11305 1ee0 00000000 		.4byte	.LFB137
 11306 1ee4 24000000 		.4byte	.LFE137-.LFB137
 11307 1ee8 01       		.uleb128 0x1
 11308 1ee9 9C       		.byte	0x9c
 11309 1eea 0A1F0000 		.4byte	0x1f0a
 11310 1eee 09       		.uleb128 0x9
 11311 1eef 12000000 		.4byte	.LVL300
 11312 1ef3 9D290000 		.4byte	0x299d
 11313 1ef7 0A       		.uleb128 0xa
 11314 1ef8 01       		.uleb128 0x1
 11315 1ef9 53       		.byte	0x53
 11316 1efa 02       		.uleb128 0x2
 11317 1efb 74       		.byte	0x74
 11318 1efc 00       		.sleb128 0
 11319 1efd 0A       		.uleb128 0xa
 11320 1efe 01       		.uleb128 0x1
 11321 1eff 52       		.byte	0x52
 11322 1f00 01       		.uleb128 0x1
 11323 1f01 32       		.byte	0x32
 11324 1f02 0A       		.uleb128 0xa
 11325 1f03 01       		.uleb128 0x1
 11326 1f04 51       		.byte	0x51
 11327 1f05 02       		.uleb128 0x2
 11328 1f06 08       		.byte	0x8
 11329 1f07 61       		.byte	0x61
 11330 1f08 00       		.byte	0
 11331 1f09 00       		.byte	0
 11332 1f0a 0E       		.uleb128 0xe
 11333 1f0b 310A0000 		.4byte	.LASF166
 11334 1f0f 01       		.byte	0x1
 11335 1f10 D006     		.2byte	0x6d0
 11336 1f12 78030000 		.4byte	0x378
 11337 1f16 00000000 		.4byte	.LFB138
 11338 1f1a 24000000 		.4byte	.LFE138-.LFB138
 11339 1f1e 01       		.uleb128 0x1
 11340 1f1f 9C       		.byte	0x9c
 11341 1f20 401F0000 		.4byte	0x1f40
 11342 1f24 09       		.uleb128 0x9
 11343 1f25 12000000 		.4byte	.LVL301
 11344 1f29 9D290000 		.4byte	0x299d
 11345 1f2d 0A       		.uleb128 0xa
 11346 1f2e 01       		.uleb128 0x1
 11347 1f2f 53       		.byte	0x53
 11348 1f30 02       		.uleb128 0x2
 11349 1f31 74       		.byte	0x74
 11350 1f32 00       		.sleb128 0
 11351 1f33 0A       		.uleb128 0xa
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 241


 11352 1f34 01       		.uleb128 0x1
 11353 1f35 52       		.byte	0x52
 11354 1f36 01       		.uleb128 0x1
 11355 1f37 30       		.byte	0x30
 11356 1f38 0A       		.uleb128 0xa
 11357 1f39 01       		.uleb128 0x1
 11358 1f3a 51       		.byte	0x51
 11359 1f3b 02       		.uleb128 0x2
 11360 1f3c 08       		.byte	0x8
 11361 1f3d 61       		.byte	0x61
 11362 1f3e 00       		.byte	0
 11363 1f3f 00       		.byte	0
 11364 1f40 0C       		.uleb128 0xc
 11365 1f41 13130000 		.4byte	.LASF167
 11366 1f45 01       		.byte	0x1
 11367 1f46 DF06     		.2byte	0x6df
 11368 1f48 00000000 		.4byte	.LFB139
 11369 1f4c 20000000 		.4byte	.LFE139-.LFB139
 11370 1f50 01       		.uleb128 0x1
 11371 1f51 9C       		.byte	0x9c
 11372 1f52 801F0000 		.4byte	0x1f80
 11373 1f56 10       		.uleb128 0x10
 11374 1f57 6E756D00 		.ascii	"num\000"
 11375 1f5b 01       		.byte	0x1
 11376 1f5c DF06     		.2byte	0x6df
 11377 1f5e 81000000 		.4byte	0x81
 11378 1f62 A20B0000 		.4byte	.LLST79
 11379 1f66 0D       		.uleb128 0xd
 11380 1f67 0B090000 		.4byte	.LASF105
 11381 1f6b 01       		.byte	0x1
 11382 1f6c DF06     		.2byte	0x6df
 11383 1f6e 81000000 		.4byte	0x81
 11384 1f72 CE0B0000 		.4byte	.LLST80
 11385 1f76 11       		.uleb128 0x11
 11386 1f77 16000000 		.4byte	.LVL305
 11387 1f7b 012A0000 		.4byte	0x2a01
 11388 1f7f 00       		.byte	0
 11389 1f80 0E       		.uleb128 0xe
 11390 1f81 69010000 		.4byte	.LASF168
 11391 1f85 01       		.byte	0x1
 11392 1f86 EE06     		.2byte	0x6ee
 11393 1f88 78030000 		.4byte	0x378
 11394 1f8c 00000000 		.4byte	.LFB140
 11395 1f90 24000000 		.4byte	.LFE140-.LFB140
 11396 1f94 01       		.uleb128 0x1
 11397 1f95 9C       		.byte	0x9c
 11398 1f96 B61F0000 		.4byte	0x1fb6
 11399 1f9a 09       		.uleb128 0x9
 11400 1f9b 12000000 		.4byte	.LVL307
 11401 1f9f 9D290000 		.4byte	0x299d
 11402 1fa3 0A       		.uleb128 0xa
 11403 1fa4 01       		.uleb128 0x1
 11404 1fa5 53       		.byte	0x53
 11405 1fa6 02       		.uleb128 0x2
 11406 1fa7 74       		.byte	0x74
 11407 1fa8 00       		.sleb128 0
 11408 1fa9 0A       		.uleb128 0xa
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 242


 11409 1faa 01       		.uleb128 0x1
 11410 1fab 52       		.byte	0x52
 11411 1fac 01       		.uleb128 0x1
 11412 1fad 37       		.byte	0x37
 11413 1fae 0A       		.uleb128 0xa
 11414 1faf 01       		.uleb128 0x1
 11415 1fb0 51       		.byte	0x51
 11416 1fb1 02       		.uleb128 0x2
 11417 1fb2 08       		.byte	0x8
 11418 1fb3 67       		.byte	0x67
 11419 1fb4 00       		.byte	0
 11420 1fb5 00       		.byte	0
 11421 1fb6 0C       		.uleb128 0xc
 11422 1fb7 FC0D0000 		.4byte	.LASF169
 11423 1fbb 01       		.byte	0x1
 11424 1fbc F806     		.2byte	0x6f8
 11425 1fbe 00000000 		.4byte	.LFB141
 11426 1fc2 18000000 		.4byte	.LFE141-.LFB141
 11427 1fc6 01       		.uleb128 0x1
 11428 1fc7 9C       		.byte	0x9c
 11429 1fc8 F21F0000 		.4byte	0x1ff2
 11430 1fcc 0D       		.uleb128 0xd
 11431 1fcd 81110000 		.4byte	.LASF34
 11432 1fd1 01       		.byte	0x1
 11433 1fd2 F806     		.2byte	0x6f8
 11434 1fd4 78030000 		.4byte	0x378
 11435 1fd8 FA0B0000 		.4byte	.LLST81
 11436 1fdc 09       		.uleb128 0x9
 11437 1fdd 10000000 		.4byte	.LVL310
 11438 1fe1 C4290000 		.4byte	0x29c4
 11439 1fe5 0A       		.uleb128 0xa
 11440 1fe6 01       		.uleb128 0x1
 11441 1fe7 52       		.byte	0x52
 11442 1fe8 01       		.uleb128 0x1
 11443 1fe9 37       		.byte	0x37
 11444 1fea 0A       		.uleb128 0xa
 11445 1feb 01       		.uleb128 0x1
 11446 1fec 51       		.byte	0x51
 11447 1fed 02       		.uleb128 0x2
 11448 1fee 08       		.byte	0x8
 11449 1fef 67       		.byte	0x67
 11450 1ff0 00       		.byte	0
 11451 1ff1 00       		.byte	0
 11452 1ff2 0F       		.uleb128 0xf
 11453 1ff3 250C0000 		.4byte	.LASF170
 11454 1ff7 01       		.byte	0x1
 11455 1ff8 0D07     		.2byte	0x70d
 11456 1ffa 78030000 		.4byte	0x378
 11457 1ffe 00000000 		.4byte	.LFB142
 11458 2002 2C000000 		.4byte	.LFE142-.LFB142
 11459 2006 01       		.uleb128 0x1
 11460 2007 9C       		.byte	0x9c
 11461 2008 33200000 		.4byte	0x2033
 11462 200c 10       		.uleb128 0x10
 11463 200d 6E756D00 		.ascii	"num\000"
 11464 2011 01       		.byte	0x1
 11465 2012 0D07     		.2byte	0x70d
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 243


 11466 2014 81000000 		.4byte	0x81
 11467 2018 1B0C0000 		.4byte	.LLST82
 11468 201c 09       		.uleb128 0x9
 11469 201d 16000000 		.4byte	.LVL313
 11470 2021 9D290000 		.4byte	0x299d
 11471 2025 0A       		.uleb128 0xa
 11472 2026 01       		.uleb128 0x1
 11473 2027 53       		.byte	0x53
 11474 2028 02       		.uleb128 0x2
 11475 2029 74       		.byte	0x74
 11476 202a 00       		.sleb128 0
 11477 202b 0A       		.uleb128 0xa
 11478 202c 01       		.uleb128 0x1
 11479 202d 51       		.byte	0x51
 11480 202e 02       		.uleb128 0x2
 11481 202f 08       		.byte	0x8
 11482 2030 67       		.byte	0x67
 11483 2031 00       		.byte	0
 11484 2032 00       		.byte	0
 11485 2033 0C       		.uleb128 0xc
 11486 2034 8F010000 		.4byte	.LASF171
 11487 2038 01       		.byte	0x1
 11488 2039 1907     		.2byte	0x719
 11489 203b 00000000 		.4byte	.LFB143
 11490 203f 18000000 		.4byte	.LFE143-.LFB143
 11491 2043 01       		.uleb128 0x1
 11492 2044 9C       		.byte	0x9c
 11493 2045 7A200000 		.4byte	0x207a
 11494 2049 10       		.uleb128 0x10
 11495 204a 6E756D00 		.ascii	"num\000"
 11496 204e 01       		.byte	0x1
 11497 204f 1907     		.2byte	0x719
 11498 2051 81000000 		.4byte	0x81
 11499 2055 550C0000 		.4byte	.LLST83
 11500 2059 0D       		.uleb128 0xd
 11501 205a 81110000 		.4byte	.LASF34
 11502 205e 01       		.byte	0x1
 11503 205f 1907     		.2byte	0x719
 11504 2061 78030000 		.4byte	0x378
 11505 2065 760C0000 		.4byte	.LLST84
 11506 2069 09       		.uleb128 0x9
 11507 206a 10000000 		.4byte	.LVL319
 11508 206e C4290000 		.4byte	0x29c4
 11509 2072 0A       		.uleb128 0xa
 11510 2073 01       		.uleb128 0x1
 11511 2074 51       		.byte	0x51
 11512 2075 02       		.uleb128 0x2
 11513 2076 08       		.byte	0x8
 11514 2077 67       		.byte	0x67
 11515 2078 00       		.byte	0
 11516 2079 00       		.byte	0
 11517 207a 13       		.uleb128 0x13
 11518 207b FC160000 		.4byte	.LASF172
 11519 207f 01       		.byte	0x1
 11520 2080 2507     		.2byte	0x725
 11521 2082 00000000 		.4byte	.LFB144
 11522 2086 18000000 		.4byte	.LFE144-.LFB144
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 244


 11523 208a 01       		.uleb128 0x1
 11524 208b 9C       		.byte	0x9c
 11525 208c AB200000 		.4byte	0x20ab
 11526 2090 09       		.uleb128 0x9
 11527 2091 10000000 		.4byte	.LVL320
 11528 2095 C4290000 		.4byte	0x29c4
 11529 2099 0A       		.uleb128 0xa
 11530 209a 01       		.uleb128 0x1
 11531 209b 53       		.byte	0x53
 11532 209c 01       		.uleb128 0x1
 11533 209d 31       		.byte	0x31
 11534 209e 0A       		.uleb128 0xa
 11535 209f 01       		.uleb128 0x1
 11536 20a0 52       		.byte	0x52
 11537 20a1 01       		.uleb128 0x1
 11538 20a2 32       		.byte	0x32
 11539 20a3 0A       		.uleb128 0xa
 11540 20a4 01       		.uleb128 0x1
 11541 20a5 51       		.byte	0x51
 11542 20a6 02       		.uleb128 0x2
 11543 20a7 08       		.byte	0x8
 11544 20a8 68       		.byte	0x68
 11545 20a9 00       		.byte	0
 11546 20aa 00       		.byte	0
 11547 20ab 13       		.uleb128 0x13
 11548 20ac 9E100000 		.4byte	.LASF173
 11549 20b0 01       		.byte	0x1
 11550 20b1 2E07     		.2byte	0x72e
 11551 20b3 00000000 		.4byte	.LFB145
 11552 20b7 18000000 		.4byte	.LFE145-.LFB145
 11553 20bb 01       		.uleb128 0x1
 11554 20bc 9C       		.byte	0x9c
 11555 20bd DC200000 		.4byte	0x20dc
 11556 20c1 09       		.uleb128 0x9
 11557 20c2 10000000 		.4byte	.LVL321
 11558 20c6 C4290000 		.4byte	0x29c4
 11559 20ca 0A       		.uleb128 0xa
 11560 20cb 01       		.uleb128 0x1
 11561 20cc 53       		.byte	0x53
 11562 20cd 01       		.uleb128 0x1
 11563 20ce 31       		.byte	0x31
 11564 20cf 0A       		.uleb128 0xa
 11565 20d0 01       		.uleb128 0x1
 11566 20d1 52       		.byte	0x52
 11567 20d2 01       		.uleb128 0x1
 11568 20d3 31       		.byte	0x31
 11569 20d4 0A       		.uleb128 0xa
 11570 20d5 01       		.uleb128 0x1
 11571 20d6 51       		.byte	0x51
 11572 20d7 02       		.uleb128 0x2
 11573 20d8 08       		.byte	0x8
 11574 20d9 68       		.byte	0x68
 11575 20da 00       		.byte	0
 11576 20db 00       		.byte	0
 11577 20dc 13       		.uleb128 0x13
 11578 20dd 510B0000 		.4byte	.LASF174
 11579 20e1 01       		.byte	0x1
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 245


 11580 20e2 3707     		.2byte	0x737
 11581 20e4 00000000 		.4byte	.LFB146
 11582 20e8 18000000 		.4byte	.LFE146-.LFB146
 11583 20ec 01       		.uleb128 0x1
 11584 20ed 9C       		.byte	0x9c
 11585 20ee 0D210000 		.4byte	0x210d
 11586 20f2 09       		.uleb128 0x9
 11587 20f3 10000000 		.4byte	.LVL322
 11588 20f7 C4290000 		.4byte	0x29c4
 11589 20fb 0A       		.uleb128 0xa
 11590 20fc 01       		.uleb128 0x1
 11591 20fd 53       		.byte	0x53
 11592 20fe 01       		.uleb128 0x1
 11593 20ff 31       		.byte	0x31
 11594 2100 0A       		.uleb128 0xa
 11595 2101 01       		.uleb128 0x1
 11596 2102 52       		.byte	0x52
 11597 2103 01       		.uleb128 0x1
 11598 2104 30       		.byte	0x30
 11599 2105 0A       		.uleb128 0xa
 11600 2106 01       		.uleb128 0x1
 11601 2107 51       		.byte	0x51
 11602 2108 02       		.uleb128 0x2
 11603 2109 08       		.byte	0x8
 11604 210a 68       		.byte	0x68
 11605 210b 00       		.byte	0
 11606 210c 00       		.byte	0
 11607 210d 0E       		.uleb128 0xe
 11608 210e F8020000 		.4byte	.LASF175
 11609 2112 01       		.byte	0x1
 11610 2113 4B07     		.2byte	0x74b
 11611 2115 81000000 		.4byte	0x81
 11612 2119 00000000 		.4byte	.LFB147
 11613 211d 24000000 		.4byte	.LFE147-.LFB147
 11614 2121 01       		.uleb128 0x1
 11615 2122 9C       		.byte	0x9c
 11616 2123 49210000 		.4byte	0x2149
 11617 2127 09       		.uleb128 0x9
 11618 2128 16000000 		.4byte	.LVL323
 11619 212c 1D2A0000 		.4byte	0x2a1d
 11620 2130 0A       		.uleb128 0xa
 11621 2131 01       		.uleb128 0x1
 11622 2132 53       		.byte	0x53
 11623 2133 01       		.uleb128 0x1
 11624 2134 32       		.byte	0x32
 11625 2135 0A       		.uleb128 0xa
 11626 2136 01       		.uleb128 0x1
 11627 2137 52       		.byte	0x52
 11628 2138 01       		.uleb128 0x1
 11629 2139 35       		.byte	0x35
 11630 213a 0A       		.uleb128 0xa
 11631 213b 01       		.uleb128 0x1
 11632 213c 51       		.byte	0x51
 11633 213d 02       		.uleb128 0x2
 11634 213e 08       		.byte	0x8
 11635 213f 69       		.byte	0x69
 11636 2140 0A       		.uleb128 0xa
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 246


 11637 2141 02       		.uleb128 0x2
 11638 2142 7D       		.byte	0x7d
 11639 2143 00       		.sleb128 0
 11640 2144 02       		.uleb128 0x2
 11641 2145 74       		.byte	0x74
 11642 2146 00       		.sleb128 0
 11643 2147 00       		.byte	0
 11644 2148 00       		.byte	0
 11645 2149 0C       		.uleb128 0xc
 11646 214a D70D0000 		.4byte	.LASF176
 11647 214e 01       		.byte	0x1
 11648 214f 5507     		.2byte	0x755
 11649 2151 00000000 		.4byte	.LFB148
 11650 2155 20000000 		.4byte	.LFE148-.LFB148
 11651 2159 01       		.uleb128 0x1
 11652 215a 9C       		.byte	0x9c
 11653 215b 8A210000 		.4byte	0x218a
 11654 215f 0D       		.uleb128 0xd
 11655 2160 410F0000 		.4byte	.LASF114
 11656 2164 01       		.byte	0x1
 11657 2165 5507     		.2byte	0x755
 11658 2167 81000000 		.4byte	0x81
 11659 216b 970C0000 		.4byte	.LLST85
 11660 216f 09       		.uleb128 0x9
 11661 2170 16000000 		.4byte	.LVL326
 11662 2174 432A0000 		.4byte	0x2a43
 11663 2178 0A       		.uleb128 0xa
 11664 2179 01       		.uleb128 0x1
 11665 217a 53       		.byte	0x53
 11666 217b 01       		.uleb128 0x1
 11667 217c 32       		.byte	0x32
 11668 217d 0A       		.uleb128 0xa
 11669 217e 01       		.uleb128 0x1
 11670 217f 52       		.byte	0x52
 11671 2180 01       		.uleb128 0x1
 11672 2181 35       		.byte	0x35
 11673 2182 0A       		.uleb128 0xa
 11674 2183 01       		.uleb128 0x1
 11675 2184 51       		.byte	0x51
 11676 2185 02       		.uleb128 0x2
 11677 2186 08       		.byte	0x8
 11678 2187 69       		.byte	0x69
 11679 2188 00       		.byte	0
 11680 2189 00       		.byte	0
 11681 218a 0E       		.uleb128 0xe
 11682 218b 7D080000 		.4byte	.LASF177
 11683 218f 01       		.byte	0x1
 11684 2190 7207     		.2byte	0x772
 11685 2192 81000000 		.4byte	0x81
 11686 2196 00000000 		.4byte	.LFB149
 11687 219a 24000000 		.4byte	.LFE149-.LFB149
 11688 219e 01       		.uleb128 0x1
 11689 219f 9C       		.byte	0x9c
 11690 21a0 C6210000 		.4byte	0x21c6
 11691 21a4 09       		.uleb128 0x9
 11692 21a5 16000000 		.4byte	.LVL327
 11693 21a9 1D2A0000 		.4byte	0x2a1d
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 247


 11694 21ad 0A       		.uleb128 0xa
 11695 21ae 01       		.uleb128 0x1
 11696 21af 53       		.byte	0x53
 11697 21b0 01       		.uleb128 0x1
 11698 21b1 32       		.byte	0x32
 11699 21b2 0A       		.uleb128 0xa
 11700 21b3 01       		.uleb128 0x1
 11701 21b4 52       		.byte	0x52
 11702 21b5 01       		.uleb128 0x1
 11703 21b6 33       		.byte	0x33
 11704 21b7 0A       		.uleb128 0xa
 11705 21b8 01       		.uleb128 0x1
 11706 21b9 51       		.byte	0x51
 11707 21ba 02       		.uleb128 0x2
 11708 21bb 08       		.byte	0x8
 11709 21bc 69       		.byte	0x69
 11710 21bd 0A       		.uleb128 0xa
 11711 21be 02       		.uleb128 0x2
 11712 21bf 7D       		.byte	0x7d
 11713 21c0 00       		.sleb128 0
 11714 21c1 02       		.uleb128 0x2
 11715 21c2 74       		.byte	0x74
 11716 21c3 00       		.sleb128 0
 11717 21c4 00       		.byte	0
 11718 21c5 00       		.byte	0
 11719 21c6 0C       		.uleb128 0xc
 11720 21c7 B2120000 		.4byte	.LASF178
 11721 21cb 01       		.byte	0x1
 11722 21cc 7C07     		.2byte	0x77c
 11723 21ce 00000000 		.4byte	.LFB150
 11724 21d2 20000000 		.4byte	.LFE150-.LFB150
 11725 21d6 01       		.uleb128 0x1
 11726 21d7 9C       		.byte	0x9c
 11727 21d8 07220000 		.4byte	0x2207
 11728 21dc 0D       		.uleb128 0xd
 11729 21dd C2080000 		.4byte	.LASF179
 11730 21e1 01       		.byte	0x1
 11731 21e2 7C07     		.2byte	0x77c
 11732 21e4 81000000 		.4byte	0x81
 11733 21e8 B80C0000 		.4byte	.LLST86
 11734 21ec 09       		.uleb128 0x9
 11735 21ed 16000000 		.4byte	.LVL330
 11736 21f1 432A0000 		.4byte	0x2a43
 11737 21f5 0A       		.uleb128 0xa
 11738 21f6 01       		.uleb128 0x1
 11739 21f7 53       		.byte	0x53
 11740 21f8 01       		.uleb128 0x1
 11741 21f9 32       		.byte	0x32
 11742 21fa 0A       		.uleb128 0xa
 11743 21fb 01       		.uleb128 0x1
 11744 21fc 52       		.byte	0x52
 11745 21fd 01       		.uleb128 0x1
 11746 21fe 33       		.byte	0x33
 11747 21ff 0A       		.uleb128 0xa
 11748 2200 01       		.uleb128 0x1
 11749 2201 51       		.byte	0x51
 11750 2202 02       		.uleb128 0x2
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 248


 11751 2203 08       		.byte	0x8
 11752 2204 69       		.byte	0x69
 11753 2205 00       		.byte	0
 11754 2206 00       		.byte	0
 11755 2207 0E       		.uleb128 0xe
 11756 2208 9B0E0000 		.4byte	.LASF180
 11757 220c 01       		.byte	0x1
 11758 220d 9607     		.2byte	0x796
 11759 220f 81000000 		.4byte	0x81
 11760 2213 00000000 		.4byte	.LFB151
 11761 2217 24000000 		.4byte	.LFE151-.LFB151
 11762 221b 01       		.uleb128 0x1
 11763 221c 9C       		.byte	0x9c
 11764 221d 43220000 		.4byte	0x2243
 11765 2221 09       		.uleb128 0x9
 11766 2222 16000000 		.4byte	.LVL331
 11767 2226 1D2A0000 		.4byte	0x2a1d
 11768 222a 0A       		.uleb128 0xa
 11769 222b 01       		.uleb128 0x1
 11770 222c 53       		.byte	0x53
 11771 222d 01       		.uleb128 0x1
 11772 222e 32       		.byte	0x32
 11773 222f 0A       		.uleb128 0xa
 11774 2230 01       		.uleb128 0x1
 11775 2231 52       		.byte	0x52
 11776 2232 01       		.uleb128 0x1
 11777 2233 31       		.byte	0x31
 11778 2234 0A       		.uleb128 0xa
 11779 2235 01       		.uleb128 0x1
 11780 2236 51       		.byte	0x51
 11781 2237 02       		.uleb128 0x2
 11782 2238 08       		.byte	0x8
 11783 2239 69       		.byte	0x69
 11784 223a 0A       		.uleb128 0xa
 11785 223b 02       		.uleb128 0x2
 11786 223c 7D       		.byte	0x7d
 11787 223d 00       		.sleb128 0
 11788 223e 02       		.uleb128 0x2
 11789 223f 74       		.byte	0x74
 11790 2240 00       		.sleb128 0
 11791 2241 00       		.byte	0
 11792 2242 00       		.byte	0
 11793 2243 0C       		.uleb128 0xc
 11794 2244 4E060000 		.4byte	.LASF181
 11795 2248 01       		.byte	0x1
 11796 2249 A007     		.2byte	0x7a0
 11797 224b 00000000 		.4byte	.LFB152
 11798 224f 20000000 		.4byte	.LFE152-.LFB152
 11799 2253 01       		.uleb128 0x1
 11800 2254 9C       		.byte	0x9c
 11801 2255 84220000 		.4byte	0x2284
 11802 2259 0D       		.uleb128 0xd
 11803 225a C2080000 		.4byte	.LASF179
 11804 225e 01       		.byte	0x1
 11805 225f A007     		.2byte	0x7a0
 11806 2261 81000000 		.4byte	0x81
 11807 2265 D90C0000 		.4byte	.LLST87
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 249


 11808 2269 09       		.uleb128 0x9
 11809 226a 16000000 		.4byte	.LVL334
 11810 226e 432A0000 		.4byte	0x2a43
 11811 2272 0A       		.uleb128 0xa
 11812 2273 01       		.uleb128 0x1
 11813 2274 53       		.byte	0x53
 11814 2275 01       		.uleb128 0x1
 11815 2276 32       		.byte	0x32
 11816 2277 0A       		.uleb128 0xa
 11817 2278 01       		.uleb128 0x1
 11818 2279 52       		.byte	0x52
 11819 227a 01       		.uleb128 0x1
 11820 227b 31       		.byte	0x31
 11821 227c 0A       		.uleb128 0xa
 11822 227d 01       		.uleb128 0x1
 11823 227e 51       		.byte	0x51
 11824 227f 02       		.uleb128 0x2
 11825 2280 08       		.byte	0x8
 11826 2281 69       		.byte	0x69
 11827 2282 00       		.byte	0
 11828 2283 00       		.byte	0
 11829 2284 13       		.uleb128 0x13
 11830 2285 9E0C0000 		.4byte	.LASF182
 11831 2289 01       		.byte	0x1
 11832 228a AA07     		.2byte	0x7aa
 11833 228c 00000000 		.4byte	.LFB153
 11834 2290 18000000 		.4byte	.LFE153-.LFB153
 11835 2294 01       		.uleb128 0x1
 11836 2295 9C       		.byte	0x9c
 11837 2296 B5220000 		.4byte	0x22b5
 11838 229a 09       		.uleb128 0x9
 11839 229b 10000000 		.4byte	.LVL335
 11840 229f C4290000 		.4byte	0x29c4
 11841 22a3 0A       		.uleb128 0xa
 11842 22a4 01       		.uleb128 0x1
 11843 22a5 53       		.byte	0x53
 11844 22a6 01       		.uleb128 0x1
 11845 22a7 31       		.byte	0x31
 11846 22a8 0A       		.uleb128 0xa
 11847 22a9 01       		.uleb128 0x1
 11848 22aa 52       		.byte	0x52
 11849 22ab 01       		.uleb128 0x1
 11850 22ac 31       		.byte	0x31
 11851 22ad 0A       		.uleb128 0xa
 11852 22ae 01       		.uleb128 0x1
 11853 22af 51       		.byte	0x51
 11854 22b0 02       		.uleb128 0x2
 11855 22b1 08       		.byte	0x8
 11856 22b2 6A       		.byte	0x6a
 11857 22b3 00       		.byte	0
 11858 22b4 00       		.byte	0
 11859 22b5 13       		.uleb128 0x13
 11860 22b6 53110000 		.4byte	.LASF183
 11861 22ba 01       		.byte	0x1
 11862 22bb B907     		.2byte	0x7b9
 11863 22bd 00000000 		.4byte	.LFB154
 11864 22c1 18000000 		.4byte	.LFE154-.LFB154
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 250


 11865 22c5 01       		.uleb128 0x1
 11866 22c6 9C       		.byte	0x9c
 11867 22c7 E6220000 		.4byte	0x22e6
 11868 22cb 09       		.uleb128 0x9
 11869 22cc 10000000 		.4byte	.LVL336
 11870 22d0 C4290000 		.4byte	0x29c4
 11871 22d4 0A       		.uleb128 0xa
 11872 22d5 01       		.uleb128 0x1
 11873 22d6 53       		.byte	0x53
 11874 22d7 01       		.uleb128 0x1
 11875 22d8 31       		.byte	0x31
 11876 22d9 0A       		.uleb128 0xa
 11877 22da 01       		.uleb128 0x1
 11878 22db 52       		.byte	0x52
 11879 22dc 01       		.uleb128 0x1
 11880 22dd 30       		.byte	0x30
 11881 22de 0A       		.uleb128 0xa
 11882 22df 01       		.uleb128 0x1
 11883 22e0 51       		.byte	0x51
 11884 22e1 02       		.uleb128 0x2
 11885 22e2 08       		.byte	0x8
 11886 22e3 6A       		.byte	0x6a
 11887 22e4 00       		.byte	0
 11888 22e5 00       		.byte	0
 11889 22e6 13       		.uleb128 0x13
 11890 22e7 90130000 		.4byte	.LASF184
 11891 22eb 01       		.byte	0x1
 11892 22ec C407     		.2byte	0x7c4
 11893 22ee 00000000 		.4byte	.LFB155
 11894 22f2 18000000 		.4byte	.LFE155-.LFB155
 11895 22f6 01       		.uleb128 0x1
 11896 22f7 9C       		.byte	0x9c
 11897 22f8 17230000 		.4byte	0x2317
 11898 22fc 09       		.uleb128 0x9
 11899 22fd 10000000 		.4byte	.LVL337
 11900 2301 C4290000 		.4byte	0x29c4
 11901 2305 0A       		.uleb128 0xa
 11902 2306 01       		.uleb128 0x1
 11903 2307 53       		.byte	0x53
 11904 2308 01       		.uleb128 0x1
 11905 2309 31       		.byte	0x31
 11906 230a 0A       		.uleb128 0xa
 11907 230b 01       		.uleb128 0x1
 11908 230c 52       		.byte	0x52
 11909 230d 01       		.uleb128 0x1
 11910 230e 37       		.byte	0x37
 11911 230f 0A       		.uleb128 0xa
 11912 2310 01       		.uleb128 0x1
 11913 2311 51       		.byte	0x51
 11914 2312 02       		.uleb128 0x2
 11915 2313 08       		.byte	0x8
 11916 2314 6B       		.byte	0x6b
 11917 2315 00       		.byte	0
 11918 2316 00       		.byte	0
 11919 2317 0E       		.uleb128 0xe
 11920 2318 AA080000 		.4byte	.LASF185
 11921 231c 01       		.byte	0x1
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 251


 11922 231d D307     		.2byte	0x7d3
 11923 231f 78030000 		.4byte	0x378
 11924 2323 00000000 		.4byte	.LFB156
 11925 2327 24000000 		.4byte	.LFE156-.LFB156
 11926 232b 01       		.uleb128 0x1
 11927 232c 9C       		.byte	0x9c
 11928 232d 4D230000 		.4byte	0x234d
 11929 2331 09       		.uleb128 0x9
 11930 2332 12000000 		.4byte	.LVL338
 11931 2336 9D290000 		.4byte	0x299d
 11932 233a 0A       		.uleb128 0xa
 11933 233b 01       		.uleb128 0x1
 11934 233c 53       		.byte	0x53
 11935 233d 02       		.uleb128 0x2
 11936 233e 74       		.byte	0x74
 11937 233f 00       		.sleb128 0
 11938 2340 0A       		.uleb128 0xa
 11939 2341 01       		.uleb128 0x1
 11940 2342 52       		.byte	0x52
 11941 2343 01       		.uleb128 0x1
 11942 2344 36       		.byte	0x36
 11943 2345 0A       		.uleb128 0xa
 11944 2346 01       		.uleb128 0x1
 11945 2347 51       		.byte	0x51
 11946 2348 02       		.uleb128 0x2
 11947 2349 08       		.byte	0x8
 11948 234a 6B       		.byte	0x6b
 11949 234b 00       		.byte	0
 11950 234c 00       		.byte	0
 11951 234d 0C       		.uleb128 0xc
 11952 234e 1D030000 		.4byte	.LASF186
 11953 2352 01       		.byte	0x1
 11954 2353 DD07     		.2byte	0x7dd
 11955 2355 00000000 		.4byte	.LFB157
 11956 2359 18000000 		.4byte	.LFE157-.LFB157
 11957 235d 01       		.uleb128 0x1
 11958 235e 9C       		.byte	0x9c
 11959 235f 89230000 		.4byte	0x2389
 11960 2363 0D       		.uleb128 0xd
 11961 2364 81110000 		.4byte	.LASF34
 11962 2368 01       		.byte	0x1
 11963 2369 DD07     		.2byte	0x7dd
 11964 236b 78030000 		.4byte	0x378
 11965 236f FA0C0000 		.4byte	.LLST88
 11966 2373 09       		.uleb128 0x9
 11967 2374 10000000 		.4byte	.LVL341
 11968 2378 C4290000 		.4byte	0x29c4
 11969 237c 0A       		.uleb128 0xa
 11970 237d 01       		.uleb128 0x1
 11971 237e 52       		.byte	0x52
 11972 237f 01       		.uleb128 0x1
 11973 2380 36       		.byte	0x36
 11974 2381 0A       		.uleb128 0xa
 11975 2382 01       		.uleb128 0x1
 11976 2383 51       		.byte	0x51
 11977 2384 02       		.uleb128 0x2
 11978 2385 08       		.byte	0x8
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 252


 11979 2386 6B       		.byte	0x6b
 11980 2387 00       		.byte	0
 11981 2388 00       		.byte	0
 11982 2389 0E       		.uleb128 0xe
 11983 238a CF0B0000 		.4byte	.LASF187
 11984 238e 01       		.byte	0x1
 11985 238f E807     		.2byte	0x7e8
 11986 2391 78030000 		.4byte	0x378
 11987 2395 00000000 		.4byte	.LFB158
 11988 2399 24000000 		.4byte	.LFE158-.LFB158
 11989 239d 01       		.uleb128 0x1
 11990 239e 9C       		.byte	0x9c
 11991 239f BF230000 		.4byte	0x23bf
 11992 23a3 09       		.uleb128 0x9
 11993 23a4 12000000 		.4byte	.LVL342
 11994 23a8 9D290000 		.4byte	0x299d
 11995 23ac 0A       		.uleb128 0xa
 11996 23ad 01       		.uleb128 0x1
 11997 23ae 53       		.byte	0x53
 11998 23af 02       		.uleb128 0x2
 11999 23b0 74       		.byte	0x74
 12000 23b1 00       		.sleb128 0
 12001 23b2 0A       		.uleb128 0xa
 12002 23b3 01       		.uleb128 0x1
 12003 23b4 52       		.byte	0x52
 12004 23b5 01       		.uleb128 0x1
 12005 23b6 35       		.byte	0x35
 12006 23b7 0A       		.uleb128 0xa
 12007 23b8 01       		.uleb128 0x1
 12008 23b9 51       		.byte	0x51
 12009 23ba 02       		.uleb128 0x2
 12010 23bb 08       		.byte	0x8
 12011 23bc 6B       		.byte	0x6b
 12012 23bd 00       		.byte	0
 12013 23be 00       		.byte	0
 12014 23bf 0C       		.uleb128 0xc
 12015 23c0 1F050000 		.4byte	.LASF188
 12016 23c4 01       		.byte	0x1
 12017 23c5 F207     		.2byte	0x7f2
 12018 23c7 00000000 		.4byte	.LFB159
 12019 23cb 18000000 		.4byte	.LFE159-.LFB159
 12020 23cf 01       		.uleb128 0x1
 12021 23d0 9C       		.byte	0x9c
 12022 23d1 FB230000 		.4byte	0x23fb
 12023 23d5 0D       		.uleb128 0xd
 12024 23d6 81110000 		.4byte	.LASF34
 12025 23da 01       		.byte	0x1
 12026 23db F207     		.2byte	0x7f2
 12027 23dd 78030000 		.4byte	0x378
 12028 23e1 1B0D0000 		.4byte	.LLST89
 12029 23e5 09       		.uleb128 0x9
 12030 23e6 10000000 		.4byte	.LVL345
 12031 23ea C4290000 		.4byte	0x29c4
 12032 23ee 0A       		.uleb128 0xa
 12033 23ef 01       		.uleb128 0x1
 12034 23f0 52       		.byte	0x52
 12035 23f1 01       		.uleb128 0x1
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 253


 12036 23f2 35       		.byte	0x35
 12037 23f3 0A       		.uleb128 0xa
 12038 23f4 01       		.uleb128 0x1
 12039 23f5 51       		.byte	0x51
 12040 23f6 02       		.uleb128 0x2
 12041 23f7 08       		.byte	0x8
 12042 23f8 6B       		.byte	0x6b
 12043 23f9 00       		.byte	0
 12044 23fa 00       		.byte	0
 12045 23fb 0E       		.uleb128 0xe
 12046 23fc ED090000 		.4byte	.LASF189
 12047 2400 01       		.byte	0x1
 12048 2401 0008     		.2byte	0x800
 12049 2403 78030000 		.4byte	0x378
 12050 2407 00000000 		.4byte	.LFB160
 12051 240b 24000000 		.4byte	.LFE160-.LFB160
 12052 240f 01       		.uleb128 0x1
 12053 2410 9C       		.byte	0x9c
 12054 2411 31240000 		.4byte	0x2431
 12055 2415 09       		.uleb128 0x9
 12056 2416 12000000 		.4byte	.LVL346
 12057 241a 9D290000 		.4byte	0x299d
 12058 241e 0A       		.uleb128 0xa
 12059 241f 01       		.uleb128 0x1
 12060 2420 53       		.byte	0x53
 12061 2421 02       		.uleb128 0x2
 12062 2422 74       		.byte	0x74
 12063 2423 00       		.sleb128 0
 12064 2424 0A       		.uleb128 0xa
 12065 2425 01       		.uleb128 0x1
 12066 2426 52       		.byte	0x52
 12067 2427 01       		.uleb128 0x1
 12068 2428 33       		.byte	0x33
 12069 2429 0A       		.uleb128 0xa
 12070 242a 01       		.uleb128 0x1
 12071 242b 51       		.byte	0x51
 12072 242c 02       		.uleb128 0x2
 12073 242d 08       		.byte	0x8
 12074 242e 6B       		.byte	0x6b
 12075 242f 00       		.byte	0
 12076 2430 00       		.byte	0
 12077 2431 0C       		.uleb128 0xc
 12078 2432 DF0A0000 		.4byte	.LASF190
 12079 2436 01       		.byte	0x1
 12080 2437 0E08     		.2byte	0x80e
 12081 2439 00000000 		.4byte	.LFB161
 12082 243d 18000000 		.4byte	.LFE161-.LFB161
 12083 2441 01       		.uleb128 0x1
 12084 2442 9C       		.byte	0x9c
 12085 2443 6D240000 		.4byte	0x246d
 12086 2447 0D       		.uleb128 0xd
 12087 2448 81110000 		.4byte	.LASF34
 12088 244c 01       		.byte	0x1
 12089 244d 0E08     		.2byte	0x80e
 12090 244f 78030000 		.4byte	0x378
 12091 2453 3C0D0000 		.4byte	.LLST90
 12092 2457 09       		.uleb128 0x9
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 254


 12093 2458 12000000 		.4byte	.LVL349
 12094 245c C4290000 		.4byte	0x29c4
 12095 2460 0A       		.uleb128 0xa
 12096 2461 01       		.uleb128 0x1
 12097 2462 52       		.byte	0x52
 12098 2463 01       		.uleb128 0x1
 12099 2464 33       		.byte	0x33
 12100 2465 0A       		.uleb128 0xa
 12101 2466 01       		.uleb128 0x1
 12102 2467 51       		.byte	0x51
 12103 2468 02       		.uleb128 0x2
 12104 2469 08       		.byte	0x8
 12105 246a 6B       		.byte	0x6b
 12106 246b 00       		.byte	0
 12107 246c 00       		.byte	0
 12108 246d 0E       		.uleb128 0xe
 12109 246e 2D0B0000 		.4byte	.LASF191
 12110 2472 01       		.byte	0x1
 12111 2473 1808     		.2byte	0x818
 12112 2475 81000000 		.4byte	0x81
 12113 2479 00000000 		.4byte	.LFB162
 12114 247d 24000000 		.4byte	.LFE162-.LFB162
 12115 2481 01       		.uleb128 0x1
 12116 2482 9C       		.byte	0x9c
 12117 2483 A9240000 		.4byte	0x24a9
 12118 2487 09       		.uleb128 0x9
 12119 2488 16000000 		.4byte	.LVL350
 12120 248c 1D2A0000 		.4byte	0x2a1d
 12121 2490 0A       		.uleb128 0xa
 12122 2491 01       		.uleb128 0x1
 12123 2492 53       		.byte	0x53
 12124 2493 01       		.uleb128 0x1
 12125 2494 33       		.byte	0x33
 12126 2495 0A       		.uleb128 0xa
 12127 2496 01       		.uleb128 0x1
 12128 2497 52       		.byte	0x52
 12129 2498 01       		.uleb128 0x1
 12130 2499 32       		.byte	0x32
 12131 249a 0A       		.uleb128 0xa
 12132 249b 01       		.uleb128 0x1
 12133 249c 51       		.byte	0x51
 12134 249d 02       		.uleb128 0x2
 12135 249e 08       		.byte	0x8
 12136 249f 6B       		.byte	0x6b
 12137 24a0 0A       		.uleb128 0xa
 12138 24a1 02       		.uleb128 0x2
 12139 24a2 7D       		.byte	0x7d
 12140 24a3 00       		.sleb128 0
 12141 24a4 02       		.uleb128 0x2
 12142 24a5 74       		.byte	0x74
 12143 24a6 00       		.sleb128 0
 12144 24a7 00       		.byte	0
 12145 24a8 00       		.byte	0
 12146 24a9 0C       		.uleb128 0xc
 12147 24aa 76030000 		.4byte	.LASF192
 12148 24ae 01       		.byte	0x1
 12149 24af 3A08     		.2byte	0x83a
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 255


 12150 24b1 00000000 		.4byte	.LFB163
 12151 24b5 20000000 		.4byte	.LFE163-.LFB163
 12152 24b9 01       		.uleb128 0x1
 12153 24ba 9C       		.byte	0x9c
 12154 24bb EA240000 		.4byte	0x24ea
 12155 24bf 0D       		.uleb128 0xd
 12156 24c0 A30B0000 		.4byte	.LASF193
 12157 24c4 01       		.byte	0x1
 12158 24c5 3A08     		.2byte	0x83a
 12159 24c7 81000000 		.4byte	0x81
 12160 24cb 5D0D0000 		.4byte	.LLST91
 12161 24cf 09       		.uleb128 0x9
 12162 24d0 16000000 		.4byte	.LVL353
 12163 24d4 432A0000 		.4byte	0x2a43
 12164 24d8 0A       		.uleb128 0xa
 12165 24d9 01       		.uleb128 0x1
 12166 24da 53       		.byte	0x53
 12167 24db 01       		.uleb128 0x1
 12168 24dc 33       		.byte	0x33
 12169 24dd 0A       		.uleb128 0xa
 12170 24de 01       		.uleb128 0x1
 12171 24df 52       		.byte	0x52
 12172 24e0 01       		.uleb128 0x1
 12173 24e1 32       		.byte	0x32
 12174 24e2 0A       		.uleb128 0xa
 12175 24e3 01       		.uleb128 0x1
 12176 24e4 51       		.byte	0x51
 12177 24e5 02       		.uleb128 0x2
 12178 24e6 08       		.byte	0x8
 12179 24e7 6B       		.byte	0x6b
 12180 24e8 00       		.byte	0
 12181 24e9 00       		.byte	0
 12182 24ea 14       		.uleb128 0x14
 12183 24eb 6D140000 		.4byte	.LASF194
 12184 24ef 01       		.byte	0x1
 12185 24f0 43       		.byte	0x43
 12186 24f1 00000000 		.4byte	.LFB2
 12187 24f5 2C000000 		.4byte	.LFE2-.LFB2
 12188 24f9 01       		.uleb128 0x1
 12189 24fa 9C       		.byte	0x9c
 12190 24fb 61250000 		.4byte	0x2561
 12191 24ff 15       		.uleb128 0x15
 12192 2500 08000000 		.4byte	.LVL354
 12193 2504 A9240000 		.4byte	0x24a9
 12194 2508 12250000 		.4byte	0x2512
 12195 250c 0A       		.uleb128 0xa
 12196 250d 01       		.uleb128 0x1
 12197 250e 50       		.byte	0x50
 12198 250f 01       		.uleb128 0x1
 12199 2510 31       		.byte	0x31
 12200 2511 00       		.byte	0
 12201 2512 15       		.uleb128 0x15
 12202 2513 14000000 		.4byte	.LVL355
 12203 2517 012A0000 		.4byte	0x2a01
 12204 251b 2B250000 		.4byte	0x252b
 12205 251f 0A       		.uleb128 0xa
 12206 2520 01       		.uleb128 0x1
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 256


 12207 2521 52       		.byte	0x52
 12208 2522 01       		.uleb128 0x1
 12209 2523 32       		.byte	0x32
 12210 2524 0A       		.uleb128 0xa
 12211 2525 01       		.uleb128 0x1
 12212 2526 51       		.byte	0x51
 12213 2527 02       		.uleb128 0x2
 12214 2528 08       		.byte	0x8
 12215 2529 37       		.byte	0x37
 12216 252a 00       		.byte	0
 12217 252b 15       		.uleb128 0x15
 12218 252c 1A000000 		.4byte	.LVL356
 12219 2530 03030000 		.4byte	0x303
 12220 2534 3E250000 		.4byte	0x253e
 12221 2538 0A       		.uleb128 0xa
 12222 2539 01       		.uleb128 0x1
 12223 253a 50       		.byte	0x50
 12224 253b 01       		.uleb128 0x1
 12225 253c 30       		.byte	0x30
 12226 253d 00       		.byte	0
 12227 253e 15       		.uleb128 0x15
 12228 253f 20000000 		.4byte	.LVL357
 12229 2543 D5040000 		.4byte	0x4d5
 12230 2547 51250000 		.4byte	0x2551
 12231 254b 0A       		.uleb128 0xa
 12232 254c 01       		.uleb128 0x1
 12233 254d 50       		.byte	0x50
 12234 254e 01       		.uleb128 0x1
 12235 254f 30       		.byte	0x30
 12236 2550 00       		.byte	0
 12237 2551 09       		.uleb128 0x9
 12238 2552 26000000 		.4byte	.LVL358
 12239 2556 4D230000 		.4byte	0x234d
 12240 255a 0A       		.uleb128 0xa
 12241 255b 01       		.uleb128 0x1
 12242 255c 50       		.byte	0x50
 12243 255d 01       		.uleb128 0x1
 12244 255e 30       		.byte	0x30
 12245 255f 00       		.byte	0
 12246 2560 00       		.byte	0
 12247 2561 0E       		.uleb128 0xe
 12248 2562 6E0B0000 		.4byte	.LASF195
 12249 2566 01       		.byte	0x1
 12250 2567 5708     		.2byte	0x857
 12251 2569 81000000 		.4byte	0x81
 12252 256d 00000000 		.4byte	.LFB164
 12253 2571 24000000 		.4byte	.LFE164-.LFB164
 12254 2575 01       		.uleb128 0x1
 12255 2576 9C       		.byte	0x9c
 12256 2577 9D250000 		.4byte	0x259d
 12257 257b 09       		.uleb128 0x9
 12258 257c 16000000 		.4byte	.LVL359
 12259 2580 1D2A0000 		.4byte	0x2a1d
 12260 2584 0A       		.uleb128 0xa
 12261 2585 01       		.uleb128 0x1
 12262 2586 53       		.byte	0x53
 12263 2587 01       		.uleb128 0x1
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 257


 12264 2588 32       		.byte	0x32
 12265 2589 0A       		.uleb128 0xa
 12266 258a 01       		.uleb128 0x1
 12267 258b 52       		.byte	0x52
 12268 258c 01       		.uleb128 0x1
 12269 258d 37       		.byte	0x37
 12270 258e 0A       		.uleb128 0xa
 12271 258f 01       		.uleb128 0x1
 12272 2590 51       		.byte	0x51
 12273 2591 02       		.uleb128 0x2
 12274 2592 08       		.byte	0x8
 12275 2593 6C       		.byte	0x6c
 12276 2594 0A       		.uleb128 0xa
 12277 2595 02       		.uleb128 0x2
 12278 2596 7D       		.byte	0x7d
 12279 2597 00       		.sleb128 0
 12280 2598 02       		.uleb128 0x2
 12281 2599 74       		.byte	0x74
 12282 259a 00       		.sleb128 0
 12283 259b 00       		.byte	0
 12284 259c 00       		.byte	0
 12285 259d 0C       		.uleb128 0xc
 12286 259e 6D160000 		.4byte	.LASF196
 12287 25a2 01       		.byte	0x1
 12288 25a3 5F08     		.2byte	0x85f
 12289 25a5 00000000 		.4byte	.LFB165
 12290 25a9 20000000 		.4byte	.LFE165-.LFB165
 12291 25ad 01       		.uleb128 0x1
 12292 25ae 9C       		.byte	0x9c
 12293 25af DE250000 		.4byte	0x25de
 12294 25b3 0D       		.uleb128 0xd
 12295 25b4 AA090000 		.4byte	.LASF197
 12296 25b8 01       		.byte	0x1
 12297 25b9 5F08     		.2byte	0x85f
 12298 25bb 81000000 		.4byte	0x81
 12299 25bf 7E0D0000 		.4byte	.LLST92
 12300 25c3 09       		.uleb128 0x9
 12301 25c4 16000000 		.4byte	.LVL362
 12302 25c8 432A0000 		.4byte	0x2a43
 12303 25cc 0A       		.uleb128 0xa
 12304 25cd 01       		.uleb128 0x1
 12305 25ce 53       		.byte	0x53
 12306 25cf 01       		.uleb128 0x1
 12307 25d0 32       		.byte	0x32
 12308 25d1 0A       		.uleb128 0xa
 12309 25d2 01       		.uleb128 0x1
 12310 25d3 52       		.byte	0x52
 12311 25d4 01       		.uleb128 0x1
 12312 25d5 37       		.byte	0x37
 12313 25d6 0A       		.uleb128 0xa
 12314 25d7 01       		.uleb128 0x1
 12315 25d8 51       		.byte	0x51
 12316 25d9 02       		.uleb128 0x2
 12317 25da 08       		.byte	0x8
 12318 25db 6C       		.byte	0x6c
 12319 25dc 00       		.byte	0
 12320 25dd 00       		.byte	0
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 258


 12321 25de 0E       		.uleb128 0xe
 12322 25df 92030000 		.4byte	.LASF198
 12323 25e3 01       		.byte	0x1
 12324 25e4 6908     		.2byte	0x869
 12325 25e6 78030000 		.4byte	0x378
 12326 25ea 00000000 		.4byte	.LFB166
 12327 25ee 24000000 		.4byte	.LFE166-.LFB166
 12328 25f2 01       		.uleb128 0x1
 12329 25f3 9C       		.byte	0x9c
 12330 25f4 14260000 		.4byte	0x2614
 12331 25f8 09       		.uleb128 0x9
 12332 25f9 12000000 		.4byte	.LVL363
 12333 25fd 9D290000 		.4byte	0x299d
 12334 2601 0A       		.uleb128 0xa
 12335 2602 01       		.uleb128 0x1
 12336 2603 53       		.byte	0x53
 12337 2604 02       		.uleb128 0x2
 12338 2605 74       		.byte	0x74
 12339 2606 00       		.sleb128 0
 12340 2607 0A       		.uleb128 0xa
 12341 2608 01       		.uleb128 0x1
 12342 2609 52       		.byte	0x52
 12343 260a 01       		.uleb128 0x1
 12344 260b 35       		.byte	0x35
 12345 260c 0A       		.uleb128 0xa
 12346 260d 01       		.uleb128 0x1
 12347 260e 51       		.byte	0x51
 12348 260f 02       		.uleb128 0x2
 12349 2610 08       		.byte	0x8
 12350 2611 6C       		.byte	0x6c
 12351 2612 00       		.byte	0
 12352 2613 00       		.byte	0
 12353 2614 0C       		.uleb128 0xc
 12354 2615 A00A0000 		.4byte	.LASF199
 12355 2619 01       		.byte	0x1
 12356 261a 7308     		.2byte	0x873
 12357 261c 00000000 		.4byte	.LFB167
 12358 2620 18000000 		.4byte	.LFE167-.LFB167
 12359 2624 01       		.uleb128 0x1
 12360 2625 9C       		.byte	0x9c
 12361 2626 50260000 		.4byte	0x2650
 12362 262a 0D       		.uleb128 0xd
 12363 262b 81110000 		.4byte	.LASF34
 12364 262f 01       		.byte	0x1
 12365 2630 7308     		.2byte	0x873
 12366 2632 78030000 		.4byte	0x378
 12367 2636 9F0D0000 		.4byte	.LLST93
 12368 263a 09       		.uleb128 0x9
 12369 263b 10000000 		.4byte	.LVL366
 12370 263f C4290000 		.4byte	0x29c4
 12371 2643 0A       		.uleb128 0xa
 12372 2644 01       		.uleb128 0x1
 12373 2645 52       		.byte	0x52
 12374 2646 01       		.uleb128 0x1
 12375 2647 35       		.byte	0x35
 12376 2648 0A       		.uleb128 0xa
 12377 2649 01       		.uleb128 0x1
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 259


 12378 264a 51       		.byte	0x51
 12379 264b 02       		.uleb128 0x2
 12380 264c 08       		.byte	0x8
 12381 264d 6C       		.byte	0x6c
 12382 264e 00       		.byte	0
 12383 264f 00       		.byte	0
 12384 2650 0E       		.uleb128 0xe
 12385 2651 0D140000 		.4byte	.LASF200
 12386 2655 01       		.byte	0x1
 12387 2656 7C08     		.2byte	0x87c
 12388 2658 78030000 		.4byte	0x378
 12389 265c 00000000 		.4byte	.LFB168
 12390 2660 24000000 		.4byte	.LFE168-.LFB168
 12391 2664 01       		.uleb128 0x1
 12392 2665 9C       		.byte	0x9c
 12393 2666 86260000 		.4byte	0x2686
 12394 266a 09       		.uleb128 0x9
 12395 266b 12000000 		.4byte	.LVL367
 12396 266f 9D290000 		.4byte	0x299d
 12397 2673 0A       		.uleb128 0xa
 12398 2674 01       		.uleb128 0x1
 12399 2675 53       		.byte	0x53
 12400 2676 02       		.uleb128 0x2
 12401 2677 74       		.byte	0x74
 12402 2678 00       		.sleb128 0
 12403 2679 0A       		.uleb128 0xa
 12404 267a 01       		.uleb128 0x1
 12405 267b 52       		.byte	0x52
 12406 267c 01       		.uleb128 0x1
 12407 267d 34       		.byte	0x34
 12408 267e 0A       		.uleb128 0xa
 12409 267f 01       		.uleb128 0x1
 12410 2680 51       		.byte	0x51
 12411 2681 02       		.uleb128 0x2
 12412 2682 08       		.byte	0x8
 12413 2683 6C       		.byte	0x6c
 12414 2684 00       		.byte	0
 12415 2685 00       		.byte	0
 12416 2686 0C       		.uleb128 0xc
 12417 2687 17170000 		.4byte	.LASF201
 12418 268b 01       		.byte	0x1
 12419 268c 8608     		.2byte	0x886
 12420 268e 00000000 		.4byte	.LFB169
 12421 2692 18000000 		.4byte	.LFE169-.LFB169
 12422 2696 01       		.uleb128 0x1
 12423 2697 9C       		.byte	0x9c
 12424 2698 C2260000 		.4byte	0x26c2
 12425 269c 0D       		.uleb128 0xd
 12426 269d 81110000 		.4byte	.LASF34
 12427 26a1 01       		.byte	0x1
 12428 26a2 8608     		.2byte	0x886
 12429 26a4 78030000 		.4byte	0x378
 12430 26a8 C00D0000 		.4byte	.LLST94
 12431 26ac 09       		.uleb128 0x9
 12432 26ad 10000000 		.4byte	.LVL370
 12433 26b1 C4290000 		.4byte	0x29c4
 12434 26b5 0A       		.uleb128 0xa
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 260


 12435 26b6 01       		.uleb128 0x1
 12436 26b7 52       		.byte	0x52
 12437 26b8 01       		.uleb128 0x1
 12438 26b9 34       		.byte	0x34
 12439 26ba 0A       		.uleb128 0xa
 12440 26bb 01       		.uleb128 0x1
 12441 26bc 51       		.byte	0x51
 12442 26bd 02       		.uleb128 0x2
 12443 26be 08       		.byte	0x8
 12444 26bf 6C       		.byte	0x6c
 12445 26c0 00       		.byte	0
 12446 26c1 00       		.byte	0
 12447 26c2 0E       		.uleb128 0xe
 12448 26c3 C0070000 		.4byte	.LASF202
 12449 26c7 01       		.byte	0x1
 12450 26c8 8F08     		.2byte	0x88f
 12451 26ca 78030000 		.4byte	0x378
 12452 26ce 00000000 		.4byte	.LFB170
 12453 26d2 24000000 		.4byte	.LFE170-.LFB170
 12454 26d6 01       		.uleb128 0x1
 12455 26d7 9C       		.byte	0x9c
 12456 26d8 F8260000 		.4byte	0x26f8
 12457 26dc 09       		.uleb128 0x9
 12458 26dd 12000000 		.4byte	.LVL371
 12459 26e1 9D290000 		.4byte	0x299d
 12460 26e5 0A       		.uleb128 0xa
 12461 26e6 01       		.uleb128 0x1
 12462 26e7 53       		.byte	0x53
 12463 26e8 02       		.uleb128 0x2
 12464 26e9 74       		.byte	0x74
 12465 26ea 00       		.sleb128 0
 12466 26eb 0A       		.uleb128 0xa
 12467 26ec 01       		.uleb128 0x1
 12468 26ed 52       		.byte	0x52
 12469 26ee 01       		.uleb128 0x1
 12470 26ef 33       		.byte	0x33
 12471 26f0 0A       		.uleb128 0xa
 12472 26f1 01       		.uleb128 0x1
 12473 26f2 51       		.byte	0x51
 12474 26f3 02       		.uleb128 0x2
 12475 26f4 08       		.byte	0x8
 12476 26f5 6C       		.byte	0x6c
 12477 26f6 00       		.byte	0
 12478 26f7 00       		.byte	0
 12479 26f8 0C       		.uleb128 0xc
 12480 26f9 F7050000 		.4byte	.LASF203
 12481 26fd 01       		.byte	0x1
 12482 26fe 9908     		.2byte	0x899
 12483 2700 00000000 		.4byte	.LFB171
 12484 2704 18000000 		.4byte	.LFE171-.LFB171
 12485 2708 01       		.uleb128 0x1
 12486 2709 9C       		.byte	0x9c
 12487 270a 34270000 		.4byte	0x2734
 12488 270e 0D       		.uleb128 0xd
 12489 270f 81110000 		.4byte	.LASF34
 12490 2713 01       		.byte	0x1
 12491 2714 9908     		.2byte	0x899
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 261


 12492 2716 78030000 		.4byte	0x378
 12493 271a E10D0000 		.4byte	.LLST95
 12494 271e 09       		.uleb128 0x9
 12495 271f 10000000 		.4byte	.LVL374
 12496 2723 C4290000 		.4byte	0x29c4
 12497 2727 0A       		.uleb128 0xa
 12498 2728 01       		.uleb128 0x1
 12499 2729 52       		.byte	0x52
 12500 272a 01       		.uleb128 0x1
 12501 272b 33       		.byte	0x33
 12502 272c 0A       		.uleb128 0xa
 12503 272d 01       		.uleb128 0x1
 12504 272e 51       		.byte	0x51
 12505 272f 02       		.uleb128 0x2
 12506 2730 08       		.byte	0x8
 12507 2731 6C       		.byte	0x6c
 12508 2732 00       		.byte	0
 12509 2733 00       		.byte	0
 12510 2734 0E       		.uleb128 0xe
 12511 2735 35030000 		.4byte	.LASF204
 12512 2739 01       		.byte	0x1
 12513 273a A208     		.2byte	0x8a2
 12514 273c 78030000 		.4byte	0x378
 12515 2740 00000000 		.4byte	.LFB172
 12516 2744 24000000 		.4byte	.LFE172-.LFB172
 12517 2748 01       		.uleb128 0x1
 12518 2749 9C       		.byte	0x9c
 12519 274a 6A270000 		.4byte	0x276a
 12520 274e 09       		.uleb128 0x9
 12521 274f 12000000 		.4byte	.LVL375
 12522 2753 9D290000 		.4byte	0x299d
 12523 2757 0A       		.uleb128 0xa
 12524 2758 01       		.uleb128 0x1
 12525 2759 53       		.byte	0x53
 12526 275a 02       		.uleb128 0x2
 12527 275b 74       		.byte	0x74
 12528 275c 00       		.sleb128 0
 12529 275d 0A       		.uleb128 0xa
 12530 275e 01       		.uleb128 0x1
 12531 275f 52       		.byte	0x52
 12532 2760 01       		.uleb128 0x1
 12533 2761 32       		.byte	0x32
 12534 2762 0A       		.uleb128 0xa
 12535 2763 01       		.uleb128 0x1
 12536 2764 51       		.byte	0x51
 12537 2765 02       		.uleb128 0x2
 12538 2766 08       		.byte	0x8
 12539 2767 6C       		.byte	0x6c
 12540 2768 00       		.byte	0
 12541 2769 00       		.byte	0
 12542 276a 0C       		.uleb128 0xc
 12543 276b 04020000 		.4byte	.LASF205
 12544 276f 01       		.byte	0x1
 12545 2770 AC08     		.2byte	0x8ac
 12546 2772 00000000 		.4byte	.LFB173
 12547 2776 18000000 		.4byte	.LFE173-.LFB173
 12548 277a 01       		.uleb128 0x1
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 262


 12549 277b 9C       		.byte	0x9c
 12550 277c A6270000 		.4byte	0x27a6
 12551 2780 0D       		.uleb128 0xd
 12552 2781 81110000 		.4byte	.LASF34
 12553 2785 01       		.byte	0x1
 12554 2786 AC08     		.2byte	0x8ac
 12555 2788 78030000 		.4byte	0x378
 12556 278c 020E0000 		.4byte	.LLST96
 12557 2790 09       		.uleb128 0x9
 12558 2791 10000000 		.4byte	.LVL378
 12559 2795 C4290000 		.4byte	0x29c4
 12560 2799 0A       		.uleb128 0xa
 12561 279a 01       		.uleb128 0x1
 12562 279b 52       		.byte	0x52
 12563 279c 01       		.uleb128 0x1
 12564 279d 32       		.byte	0x32
 12565 279e 0A       		.uleb128 0xa
 12566 279f 01       		.uleb128 0x1
 12567 27a0 51       		.byte	0x51
 12568 27a1 02       		.uleb128 0x2
 12569 27a2 08       		.byte	0x8
 12570 27a3 6C       		.byte	0x6c
 12571 27a4 00       		.byte	0
 12572 27a5 00       		.byte	0
 12573 27a6 0E       		.uleb128 0xe
 12574 27a7 8A0D0000 		.4byte	.LASF206
 12575 27ab 01       		.byte	0x1
 12576 27ac B508     		.2byte	0x8b5
 12577 27ae 78030000 		.4byte	0x378
 12578 27b2 00000000 		.4byte	.LFB174
 12579 27b6 24000000 		.4byte	.LFE174-.LFB174
 12580 27ba 01       		.uleb128 0x1
 12581 27bb 9C       		.byte	0x9c
 12582 27bc DC270000 		.4byte	0x27dc
 12583 27c0 09       		.uleb128 0x9
 12584 27c1 12000000 		.4byte	.LVL379
 12585 27c5 9D290000 		.4byte	0x299d
 12586 27c9 0A       		.uleb128 0xa
 12587 27ca 01       		.uleb128 0x1
 12588 27cb 53       		.byte	0x53
 12589 27cc 02       		.uleb128 0x2
 12590 27cd 74       		.byte	0x74
 12591 27ce 00       		.sleb128 0
 12592 27cf 0A       		.uleb128 0xa
 12593 27d0 01       		.uleb128 0x1
 12594 27d1 52       		.byte	0x52
 12595 27d2 01       		.uleb128 0x1
 12596 27d3 31       		.byte	0x31
 12597 27d4 0A       		.uleb128 0xa
 12598 27d5 01       		.uleb128 0x1
 12599 27d6 51       		.byte	0x51
 12600 27d7 02       		.uleb128 0x2
 12601 27d8 08       		.byte	0x8
 12602 27d9 6C       		.byte	0x6c
 12603 27da 00       		.byte	0
 12604 27db 00       		.byte	0
 12605 27dc 0C       		.uleb128 0xc
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 263


 12606 27dd C9030000 		.4byte	.LASF207
 12607 27e1 01       		.byte	0x1
 12608 27e2 BF08     		.2byte	0x8bf
 12609 27e4 00000000 		.4byte	.LFB175
 12610 27e8 18000000 		.4byte	.LFE175-.LFB175
 12611 27ec 01       		.uleb128 0x1
 12612 27ed 9C       		.byte	0x9c
 12613 27ee 18280000 		.4byte	0x2818
 12614 27f2 0D       		.uleb128 0xd
 12615 27f3 81110000 		.4byte	.LASF34
 12616 27f7 01       		.byte	0x1
 12617 27f8 BF08     		.2byte	0x8bf
 12618 27fa 78030000 		.4byte	0x378
 12619 27fe 230E0000 		.4byte	.LLST97
 12620 2802 09       		.uleb128 0x9
 12621 2803 10000000 		.4byte	.LVL382
 12622 2807 C4290000 		.4byte	0x29c4
 12623 280b 0A       		.uleb128 0xa
 12624 280c 01       		.uleb128 0x1
 12625 280d 52       		.byte	0x52
 12626 280e 01       		.uleb128 0x1
 12627 280f 31       		.byte	0x31
 12628 2810 0A       		.uleb128 0xa
 12629 2811 01       		.uleb128 0x1
 12630 2812 51       		.byte	0x51
 12631 2813 02       		.uleb128 0x2
 12632 2814 08       		.byte	0x8
 12633 2815 6C       		.byte	0x6c
 12634 2816 00       		.byte	0
 12635 2817 00       		.byte	0
 12636 2818 0E       		.uleb128 0xe
 12637 2819 13160000 		.4byte	.LASF208
 12638 281d 01       		.byte	0x1
 12639 281e C808     		.2byte	0x8c8
 12640 2820 78030000 		.4byte	0x378
 12641 2824 00000000 		.4byte	.LFB176
 12642 2828 24000000 		.4byte	.LFE176-.LFB176
 12643 282c 01       		.uleb128 0x1
 12644 282d 9C       		.byte	0x9c
 12645 282e 4E280000 		.4byte	0x284e
 12646 2832 09       		.uleb128 0x9
 12647 2833 12000000 		.4byte	.LVL383
 12648 2837 9D290000 		.4byte	0x299d
 12649 283b 0A       		.uleb128 0xa
 12650 283c 01       		.uleb128 0x1
 12651 283d 53       		.byte	0x53
 12652 283e 02       		.uleb128 0x2
 12653 283f 74       		.byte	0x74
 12654 2840 00       		.sleb128 0
 12655 2841 0A       		.uleb128 0xa
 12656 2842 01       		.uleb128 0x1
 12657 2843 52       		.byte	0x52
 12658 2844 01       		.uleb128 0x1
 12659 2845 30       		.byte	0x30
 12660 2846 0A       		.uleb128 0xa
 12661 2847 01       		.uleb128 0x1
 12662 2848 51       		.byte	0x51
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 264


 12663 2849 02       		.uleb128 0x2
 12664 284a 08       		.byte	0x8
 12665 284b 6C       		.byte	0x6c
 12666 284c 00       		.byte	0
 12667 284d 00       		.byte	0
 12668 284e 0C       		.uleb128 0xc
 12669 284f 6D0F0000 		.4byte	.LASF209
 12670 2853 01       		.byte	0x1
 12671 2854 D208     		.2byte	0x8d2
 12672 2856 00000000 		.4byte	.LFB177
 12673 285a 18000000 		.4byte	.LFE177-.LFB177
 12674 285e 01       		.uleb128 0x1
 12675 285f 9C       		.byte	0x9c
 12676 2860 8A280000 		.4byte	0x288a
 12677 2864 0D       		.uleb128 0xd
 12678 2865 81110000 		.4byte	.LASF34
 12679 2869 01       		.byte	0x1
 12680 286a D208     		.2byte	0x8d2
 12681 286c 78030000 		.4byte	0x378
 12682 2870 440E0000 		.4byte	.LLST98
 12683 2874 09       		.uleb128 0x9
 12684 2875 10000000 		.4byte	.LVL386
 12685 2879 C4290000 		.4byte	0x29c4
 12686 287d 0A       		.uleb128 0xa
 12687 287e 01       		.uleb128 0x1
 12688 287f 52       		.byte	0x52
 12689 2880 01       		.uleb128 0x1
 12690 2881 30       		.byte	0x30
 12691 2882 0A       		.uleb128 0xa
 12692 2883 01       		.uleb128 0x1
 12693 2884 51       		.byte	0x51
 12694 2885 02       		.uleb128 0x2
 12695 2886 08       		.byte	0x8
 12696 2887 6C       		.byte	0x6c
 12697 2888 00       		.byte	0
 12698 2889 00       		.byte	0
 12699 288a 0C       		.uleb128 0xc
 12700 288b 17060000 		.4byte	.LASF210
 12701 288f 01       		.byte	0x1
 12702 2890 D608     		.2byte	0x8d6
 12703 2892 00000000 		.4byte	.LFB178
 12704 2896 10000000 		.4byte	.LFE178-.LFB178
 12705 289a 01       		.uleb128 0x1
 12706 289b 9C       		.byte	0x9c
 12707 289c C3280000 		.4byte	0x28c3
 12708 28a0 15       		.uleb128 0x15
 12709 28a1 08000000 		.4byte	.LVL387
 12710 28a5 4D020000 		.4byte	0x24d
 12711 28a9 B3280000 		.4byte	0x28b3
 12712 28ad 0A       		.uleb128 0xa
 12713 28ae 01       		.uleb128 0x1
 12714 28af 50       		.byte	0x50
 12715 28b0 01       		.uleb128 0x1
 12716 28b1 36       		.byte	0x36
 12717 28b2 00       		.byte	0
 12718 28b3 09       		.uleb128 0x9
 12719 28b4 0E000000 		.4byte	.LVL388
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 265


 12720 28b8 8B020000 		.4byte	0x28b
 12721 28bc 0A       		.uleb128 0xa
 12722 28bd 01       		.uleb128 0x1
 12723 28be 50       		.byte	0x50
 12724 28bf 01       		.uleb128 0x1
 12725 28c0 36       		.byte	0x36
 12726 28c1 00       		.byte	0
 12727 28c2 00       		.byte	0
 12728 28c3 0E       		.uleb128 0xe
 12729 28c4 2E080000 		.4byte	.LASF211
 12730 28c8 01       		.byte	0x1
 12731 28c9 E908     		.2byte	0x8e9
 12732 28cb 81000000 		.4byte	0x81
 12733 28cf 00000000 		.4byte	.LFB179
 12734 28d3 24000000 		.4byte	.LFE179-.LFB179
 12735 28d7 01       		.uleb128 0x1
 12736 28d8 9C       		.byte	0x9c
 12737 28d9 FF280000 		.4byte	0x28ff
 12738 28dd 09       		.uleb128 0x9
 12739 28de 16000000 		.4byte	.LVL389
 12740 28e2 1D2A0000 		.4byte	0x2a1d
 12741 28e6 0A       		.uleb128 0xa
 12742 28e7 01       		.uleb128 0x1
 12743 28e8 53       		.byte	0x53
 12744 28e9 01       		.uleb128 0x1
 12745 28ea 36       		.byte	0x36
 12746 28eb 0A       		.uleb128 0xa
 12747 28ec 01       		.uleb128 0x1
 12748 28ed 52       		.byte	0x52
 12749 28ee 01       		.uleb128 0x1
 12750 28ef 36       		.byte	0x36
 12751 28f0 0A       		.uleb128 0xa
 12752 28f1 01       		.uleb128 0x1
 12753 28f2 51       		.byte	0x51
 12754 28f3 02       		.uleb128 0x2
 12755 28f4 08       		.byte	0x8
 12756 28f5 75       		.byte	0x75
 12757 28f6 0A       		.uleb128 0xa
 12758 28f7 02       		.uleb128 0x2
 12759 28f8 7D       		.byte	0x7d
 12760 28f9 00       		.sleb128 0
 12761 28fa 02       		.uleb128 0x2
 12762 28fb 74       		.byte	0x74
 12763 28fc 00       		.sleb128 0
 12764 28fd 00       		.byte	0
 12765 28fe 00       		.byte	0
 12766 28ff 08       		.uleb128 0x8
 12767 2900 4B100000 		.4byte	.LASF212
 12768 2904 01       		.byte	0x1
 12769 2905 4F       		.byte	0x4f
 12770 2906 78030000 		.4byte	0x378
 12771 290a 00000000 		.4byte	.LFB3
 12772 290e 10000000 		.4byte	.LFE3-.LFB3
 12773 2912 01       		.uleb128 0x1
 12774 2913 9C       		.byte	0x9c
 12775 2914 22290000 		.4byte	0x2922
 12776 2918 11       		.uleb128 0x11
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 266


 12777 2919 06000000 		.4byte	.LVL390
 12778 291d C3280000 		.4byte	0x28c3
 12779 2921 00       		.byte	0
 12780 2922 0C       		.uleb128 0xc
 12781 2923 F2000000 		.4byte	.LASF213
 12782 2927 01       		.byte	0x1
 12783 2928 F608     		.2byte	0x8f6
 12784 292a 00000000 		.4byte	.LFB180
 12785 292e 20000000 		.4byte	.LFE180-.LFB180
 12786 2932 01       		.uleb128 0x1
 12787 2933 9C       		.byte	0x9c
 12788 2934 62290000 		.4byte	0x2962
 12789 2938 10       		.uleb128 0x10
 12790 2939 696400   		.ascii	"id\000"
 12791 293c 01       		.byte	0x1
 12792 293d F608     		.2byte	0x8f6
 12793 293f 81000000 		.4byte	0x81
 12794 2943 650E0000 		.4byte	.LLST99
 12795 2947 09       		.uleb128 0x9
 12796 2948 16000000 		.4byte	.LVL393
 12797 294c 432A0000 		.4byte	0x2a43
 12798 2950 0A       		.uleb128 0xa
 12799 2951 01       		.uleb128 0x1
 12800 2952 53       		.byte	0x53
 12801 2953 01       		.uleb128 0x1
 12802 2954 36       		.byte	0x36
 12803 2955 0A       		.uleb128 0xa
 12804 2956 01       		.uleb128 0x1
 12805 2957 52       		.byte	0x52
 12806 2958 01       		.uleb128 0x1
 12807 2959 36       		.byte	0x36
 12808 295a 0A       		.uleb128 0xa
 12809 295b 01       		.uleb128 0x1
 12810 295c 51       		.byte	0x51
 12811 295d 02       		.uleb128 0x2
 12812 295e 08       		.byte	0x8
 12813 295f 75       		.byte	0x75
 12814 2960 00       		.byte	0
 12815 2961 00       		.byte	0
 12816 2962 16       		.uleb128 0x16
 12817 2963 220E0000 		.4byte	.LASF215
 12818 2967 04       		.byte	0x4
 12819 2968 9301     		.2byte	0x193
 12820 296a 81000000 		.4byte	0x81
 12821 296e 05       		.uleb128 0x5
 12822 296f 03       		.byte	0x3
 12823 2970 00000000 		.4byte	devAddr
 12824 2974 17       		.uleb128 0x17
 12825 2975 81000000 		.4byte	0x81
 12826 2979 84290000 		.4byte	0x2984
 12827 297d 18       		.uleb128 0x18
 12828 297e 84290000 		.4byte	0x2984
 12829 2982 15       		.byte	0x15
 12830 2983 00       		.byte	0
 12831 2984 02       		.uleb128 0x2
 12832 2985 04       		.byte	0x4
 12833 2986 07       		.byte	0x7
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 267


 12834 2987 8E070000 		.4byte	.LASF214
 12835 298b 16       		.uleb128 0x16
 12836 298c 62100000 		.4byte	.LASF216
 12837 2990 04       		.byte	0x4
 12838 2991 9401     		.2byte	0x194
 12839 2993 74290000 		.4byte	0x2974
 12840 2997 05       		.uleb128 0x5
 12841 2998 03       		.byte	0x3
 12842 2999 00000000 		.4byte	buffer
 12843 299d 19       		.uleb128 0x19
 12844 299e 97070000 		.4byte	.LASF217
 12845 29a2 04       		.byte	0x4
 12846 29a3 9601     		.2byte	0x196
 12847 29a5 BE290000 		.4byte	0x29be
 12848 29a9 1A       		.uleb128 0x1a
 12849 29aa 81000000 		.4byte	0x81
 12850 29ae 1A       		.uleb128 0x1a
 12851 29af 81000000 		.4byte	0x81
 12852 29b3 1A       		.uleb128 0x1a
 12853 29b4 81000000 		.4byte	0x81
 12854 29b8 1A       		.uleb128 0x1a
 12855 29b9 BE290000 		.4byte	0x29be
 12856 29bd 00       		.byte	0
 12857 29be 12       		.uleb128 0x12
 12858 29bf 04       		.byte	0x4
 12859 29c0 81000000 		.4byte	0x81
 12860 29c4 19       		.uleb128 0x19
 12861 29c5 07040000 		.4byte	.LASF218
 12862 29c9 04       		.byte	0x4
 12863 29ca 9A01     		.2byte	0x19a
 12864 29cc E5290000 		.4byte	0x29e5
 12865 29d0 1A       		.uleb128 0x1a
 12866 29d1 81000000 		.4byte	0x81
 12867 29d5 1A       		.uleb128 0x1a
 12868 29d6 81000000 		.4byte	0x81
 12869 29da 1A       		.uleb128 0x1a
 12870 29db 81000000 		.4byte	0x81
 12871 29df 1A       		.uleb128 0x1a
 12872 29e0 81000000 		.4byte	0x81
 12873 29e4 00       		.byte	0
 12874 29e5 19       		.uleb128 0x19
 12875 29e6 00000000 		.4byte	.LASF219
 12876 29ea 04       		.byte	0x4
 12877 29eb 9801     		.2byte	0x198
 12878 29ed 012A0000 		.4byte	0x2a01
 12879 29f1 1A       		.uleb128 0x1a
 12880 29f2 81000000 		.4byte	0x81
 12881 29f6 1A       		.uleb128 0x1a
 12882 29f7 81000000 		.4byte	0x81
 12883 29fb 1A       		.uleb128 0x1a
 12884 29fc BE290000 		.4byte	0x29be
 12885 2a00 00       		.byte	0
 12886 2a01 19       		.uleb128 0x19
 12887 2a02 440B0000 		.4byte	.LASF220
 12888 2a06 04       		.byte	0x4
 12889 2a07 9C01     		.2byte	0x19c
 12890 2a09 1D2A0000 		.4byte	0x2a1d
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 268


 12891 2a0d 1A       		.uleb128 0x1a
 12892 2a0e 81000000 		.4byte	0x81
 12893 2a12 1A       		.uleb128 0x1a
 12894 2a13 81000000 		.4byte	0x81
 12895 2a17 1A       		.uleb128 0x1a
 12896 2a18 81000000 		.4byte	0x81
 12897 2a1c 00       		.byte	0
 12898 2a1d 19       		.uleb128 0x19
 12899 2a1e 23090000 		.4byte	.LASF221
 12900 2a22 04       		.byte	0x4
 12901 2a23 9701     		.2byte	0x197
 12902 2a25 432A0000 		.4byte	0x2a43
 12903 2a29 1A       		.uleb128 0x1a
 12904 2a2a 81000000 		.4byte	0x81
 12905 2a2e 1A       		.uleb128 0x1a
 12906 2a2f 81000000 		.4byte	0x81
 12907 2a33 1A       		.uleb128 0x1a
 12908 2a34 81000000 		.4byte	0x81
 12909 2a38 1A       		.uleb128 0x1a
 12910 2a39 81000000 		.4byte	0x81
 12911 2a3d 1A       		.uleb128 0x1a
 12912 2a3e BE290000 		.4byte	0x29be
 12913 2a42 00       		.byte	0
 12914 2a43 19       		.uleb128 0x19
 12915 2a44 91100000 		.4byte	.LASF222
 12916 2a48 04       		.byte	0x4
 12917 2a49 9B01     		.2byte	0x19b
 12918 2a4b 692A0000 		.4byte	0x2a69
 12919 2a4f 1A       		.uleb128 0x1a
 12920 2a50 81000000 		.4byte	0x81
 12921 2a54 1A       		.uleb128 0x1a
 12922 2a55 81000000 		.4byte	0x81
 12923 2a59 1A       		.uleb128 0x1a
 12924 2a5a 81000000 		.4byte	0x81
 12925 2a5e 1A       		.uleb128 0x1a
 12926 2a5f 81000000 		.4byte	0x81
 12927 2a63 1A       		.uleb128 0x1a
 12928 2a64 81000000 		.4byte	0x81
 12929 2a68 00       		.byte	0
 12930 2a69 1B       		.uleb128 0x1b
 12931 2a6a C3060000 		.4byte	.LASF227
 12932 2a6e 04       		.byte	0x4
 12933 2a6f 9901     		.2byte	0x199
 12934 2a71 1A       		.uleb128 0x1a
 12935 2a72 81000000 		.4byte	0x81
 12936 2a76 1A       		.uleb128 0x1a
 12937 2a77 81000000 		.4byte	0x81
 12938 2a7b 1A       		.uleb128 0x1a
 12939 2a7c 81000000 		.4byte	0x81
 12940 2a80 1A       		.uleb128 0x1a
 12941 2a81 BE290000 		.4byte	0x29be
 12942 2a85 00       		.byte	0
 12943 2a86 00       		.byte	0
 12944              		.section	.debug_abbrev,"",%progbits
 12945              	.Ldebug_abbrev0:
 12946 0000 01       		.uleb128 0x1
 12947 0001 11       		.uleb128 0x11
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 269


 12948 0002 01       		.byte	0x1
 12949 0003 25       		.uleb128 0x25
 12950 0004 0E       		.uleb128 0xe
 12951 0005 13       		.uleb128 0x13
 12952 0006 0B       		.uleb128 0xb
 12953 0007 03       		.uleb128 0x3
 12954 0008 0E       		.uleb128 0xe
 12955 0009 1B       		.uleb128 0x1b
 12956 000a 0E       		.uleb128 0xe
 12957 000b 55       		.uleb128 0x55
 12958 000c 17       		.uleb128 0x17
 12959 000d 11       		.uleb128 0x11
 12960 000e 01       		.uleb128 0x1
 12961 000f 10       		.uleb128 0x10
 12962 0010 17       		.uleb128 0x17
 12963 0011 00       		.byte	0
 12964 0012 00       		.byte	0
 12965 0013 02       		.uleb128 0x2
 12966 0014 24       		.uleb128 0x24
 12967 0015 00       		.byte	0
 12968 0016 0B       		.uleb128 0xb
 12969 0017 0B       		.uleb128 0xb
 12970 0018 3E       		.uleb128 0x3e
 12971 0019 0B       		.uleb128 0xb
 12972 001a 03       		.uleb128 0x3
 12973 001b 0E       		.uleb128 0xe
 12974 001c 00       		.byte	0
 12975 001d 00       		.byte	0
 12976 001e 03       		.uleb128 0x3
 12977 001f 16       		.uleb128 0x16
 12978 0020 00       		.byte	0
 12979 0021 03       		.uleb128 0x3
 12980 0022 0E       		.uleb128 0xe
 12981 0023 3A       		.uleb128 0x3a
 12982 0024 0B       		.uleb128 0xb
 12983 0025 3B       		.uleb128 0x3b
 12984 0026 0B       		.uleb128 0xb
 12985 0027 49       		.uleb128 0x49
 12986 0028 13       		.uleb128 0x13
 12987 0029 00       		.byte	0
 12988 002a 00       		.byte	0
 12989 002b 04       		.uleb128 0x4
 12990 002c 24       		.uleb128 0x24
 12991 002d 00       		.byte	0
 12992 002e 0B       		.uleb128 0xb
 12993 002f 0B       		.uleb128 0xb
 12994 0030 3E       		.uleb128 0x3e
 12995 0031 0B       		.uleb128 0xb
 12996 0032 03       		.uleb128 0x3
 12997 0033 08       		.uleb128 0x8
 12998 0034 00       		.byte	0
 12999 0035 00       		.byte	0
 13000 0036 05       		.uleb128 0x5
 13001 0037 2E       		.uleb128 0x2e
 13002 0038 00       		.byte	0
 13003 0039 3F       		.uleb128 0x3f
 13004 003a 19       		.uleb128 0x19
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 270


 13005 003b 03       		.uleb128 0x3
 13006 003c 0E       		.uleb128 0xe
 13007 003d 3A       		.uleb128 0x3a
 13008 003e 0B       		.uleb128 0xb
 13009 003f 3B       		.uleb128 0x3b
 13010 0040 0B       		.uleb128 0xb
 13011 0041 11       		.uleb128 0x11
 13012 0042 01       		.uleb128 0x1
 13013 0043 12       		.uleb128 0x12
 13014 0044 06       		.uleb128 0x6
 13015 0045 40       		.uleb128 0x40
 13016 0046 18       		.uleb128 0x18
 13017 0047 9742     		.uleb128 0x2117
 13018 0049 19       		.uleb128 0x19
 13019 004a 00       		.byte	0
 13020 004b 00       		.byte	0
 13021 004c 06       		.uleb128 0x6
 13022 004d 2E       		.uleb128 0x2e
 13023 004e 01       		.byte	0x1
 13024 004f 3F       		.uleb128 0x3f
 13025 0050 19       		.uleb128 0x19
 13026 0051 03       		.uleb128 0x3
 13027 0052 0E       		.uleb128 0xe
 13028 0053 3A       		.uleb128 0x3a
 13029 0054 0B       		.uleb128 0xb
 13030 0055 3B       		.uleb128 0x3b
 13031 0056 0B       		.uleb128 0xb
 13032 0057 27       		.uleb128 0x27
 13033 0058 19       		.uleb128 0x19
 13034 0059 11       		.uleb128 0x11
 13035 005a 01       		.uleb128 0x1
 13036 005b 12       		.uleb128 0x12
 13037 005c 06       		.uleb128 0x6
 13038 005d 40       		.uleb128 0x40
 13039 005e 18       		.uleb128 0x18
 13040 005f 9742     		.uleb128 0x2117
 13041 0061 19       		.uleb128 0x19
 13042 0062 01       		.uleb128 0x1
 13043 0063 13       		.uleb128 0x13
 13044 0064 00       		.byte	0
 13045 0065 00       		.byte	0
 13046 0066 07       		.uleb128 0x7
 13047 0067 05       		.uleb128 0x5
 13048 0068 00       		.byte	0
 13049 0069 03       		.uleb128 0x3
 13050 006a 0E       		.uleb128 0xe
 13051 006b 3A       		.uleb128 0x3a
 13052 006c 0B       		.uleb128 0xb
 13053 006d 3B       		.uleb128 0x3b
 13054 006e 0B       		.uleb128 0xb
 13055 006f 49       		.uleb128 0x49
 13056 0070 13       		.uleb128 0x13
 13057 0071 02       		.uleb128 0x2
 13058 0072 18       		.uleb128 0x18
 13059 0073 00       		.byte	0
 13060 0074 00       		.byte	0
 13061 0075 08       		.uleb128 0x8
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 271


 13062 0076 2E       		.uleb128 0x2e
 13063 0077 01       		.byte	0x1
 13064 0078 3F       		.uleb128 0x3f
 13065 0079 19       		.uleb128 0x19
 13066 007a 03       		.uleb128 0x3
 13067 007b 0E       		.uleb128 0xe
 13068 007c 3A       		.uleb128 0x3a
 13069 007d 0B       		.uleb128 0xb
 13070 007e 3B       		.uleb128 0x3b
 13071 007f 0B       		.uleb128 0xb
 13072 0080 49       		.uleb128 0x49
 13073 0081 13       		.uleb128 0x13
 13074 0082 11       		.uleb128 0x11
 13075 0083 01       		.uleb128 0x1
 13076 0084 12       		.uleb128 0x12
 13077 0085 06       		.uleb128 0x6
 13078 0086 40       		.uleb128 0x40
 13079 0087 18       		.uleb128 0x18
 13080 0088 9742     		.uleb128 0x2117
 13081 008a 19       		.uleb128 0x19
 13082 008b 01       		.uleb128 0x1
 13083 008c 13       		.uleb128 0x13
 13084 008d 00       		.byte	0
 13085 008e 00       		.byte	0
 13086 008f 09       		.uleb128 0x9
 13087 0090 898201   		.uleb128 0x4109
 13088 0093 01       		.byte	0x1
 13089 0094 11       		.uleb128 0x11
 13090 0095 01       		.uleb128 0x1
 13091 0096 31       		.uleb128 0x31
 13092 0097 13       		.uleb128 0x13
 13093 0098 00       		.byte	0
 13094 0099 00       		.byte	0
 13095 009a 0A       		.uleb128 0xa
 13096 009b 8A8201   		.uleb128 0x410a
 13097 009e 00       		.byte	0
 13098 009f 02       		.uleb128 0x2
 13099 00a0 18       		.uleb128 0x18
 13100 00a1 9142     		.uleb128 0x2111
 13101 00a3 18       		.uleb128 0x18
 13102 00a4 00       		.byte	0
 13103 00a5 00       		.byte	0
 13104 00a6 0B       		.uleb128 0xb
 13105 00a7 05       		.uleb128 0x5
 13106 00a8 00       		.byte	0
 13107 00a9 03       		.uleb128 0x3
 13108 00aa 0E       		.uleb128 0xe
 13109 00ab 3A       		.uleb128 0x3a
 13110 00ac 0B       		.uleb128 0xb
 13111 00ad 3B       		.uleb128 0x3b
 13112 00ae 0B       		.uleb128 0xb
 13113 00af 49       		.uleb128 0x49
 13114 00b0 13       		.uleb128 0x13
 13115 00b1 02       		.uleb128 0x2
 13116 00b2 17       		.uleb128 0x17
 13117 00b3 00       		.byte	0
 13118 00b4 00       		.byte	0
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 272


 13119 00b5 0C       		.uleb128 0xc
 13120 00b6 2E       		.uleb128 0x2e
 13121 00b7 01       		.byte	0x1
 13122 00b8 3F       		.uleb128 0x3f
 13123 00b9 19       		.uleb128 0x19
 13124 00ba 03       		.uleb128 0x3
 13125 00bb 0E       		.uleb128 0xe
 13126 00bc 3A       		.uleb128 0x3a
 13127 00bd 0B       		.uleb128 0xb
 13128 00be 3B       		.uleb128 0x3b
 13129 00bf 05       		.uleb128 0x5
 13130 00c0 27       		.uleb128 0x27
 13131 00c1 19       		.uleb128 0x19
 13132 00c2 11       		.uleb128 0x11
 13133 00c3 01       		.uleb128 0x1
 13134 00c4 12       		.uleb128 0x12
 13135 00c5 06       		.uleb128 0x6
 13136 00c6 40       		.uleb128 0x40
 13137 00c7 18       		.uleb128 0x18
 13138 00c8 9742     		.uleb128 0x2117
 13139 00ca 19       		.uleb128 0x19
 13140 00cb 01       		.uleb128 0x1
 13141 00cc 13       		.uleb128 0x13
 13142 00cd 00       		.byte	0
 13143 00ce 00       		.byte	0
 13144 00cf 0D       		.uleb128 0xd
 13145 00d0 05       		.uleb128 0x5
 13146 00d1 00       		.byte	0
 13147 00d2 03       		.uleb128 0x3
 13148 00d3 0E       		.uleb128 0xe
 13149 00d4 3A       		.uleb128 0x3a
 13150 00d5 0B       		.uleb128 0xb
 13151 00d6 3B       		.uleb128 0x3b
 13152 00d7 05       		.uleb128 0x5
 13153 00d8 49       		.uleb128 0x49
 13154 00d9 13       		.uleb128 0x13
 13155 00da 02       		.uleb128 0x2
 13156 00db 17       		.uleb128 0x17
 13157 00dc 00       		.byte	0
 13158 00dd 00       		.byte	0
 13159 00de 0E       		.uleb128 0xe
 13160 00df 2E       		.uleb128 0x2e
 13161 00e0 01       		.byte	0x1
 13162 00e1 3F       		.uleb128 0x3f
 13163 00e2 19       		.uleb128 0x19
 13164 00e3 03       		.uleb128 0x3
 13165 00e4 0E       		.uleb128 0xe
 13166 00e5 3A       		.uleb128 0x3a
 13167 00e6 0B       		.uleb128 0xb
 13168 00e7 3B       		.uleb128 0x3b
 13169 00e8 05       		.uleb128 0x5
 13170 00e9 49       		.uleb128 0x49
 13171 00ea 13       		.uleb128 0x13
 13172 00eb 11       		.uleb128 0x11
 13173 00ec 01       		.uleb128 0x1
 13174 00ed 12       		.uleb128 0x12
 13175 00ee 06       		.uleb128 0x6
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 273


 13176 00ef 40       		.uleb128 0x40
 13177 00f0 18       		.uleb128 0x18
 13178 00f1 9742     		.uleb128 0x2117
 13179 00f3 19       		.uleb128 0x19
 13180 00f4 01       		.uleb128 0x1
 13181 00f5 13       		.uleb128 0x13
 13182 00f6 00       		.byte	0
 13183 00f7 00       		.byte	0
 13184 00f8 0F       		.uleb128 0xf
 13185 00f9 2E       		.uleb128 0x2e
 13186 00fa 01       		.byte	0x1
 13187 00fb 3F       		.uleb128 0x3f
 13188 00fc 19       		.uleb128 0x19
 13189 00fd 03       		.uleb128 0x3
 13190 00fe 0E       		.uleb128 0xe
 13191 00ff 3A       		.uleb128 0x3a
 13192 0100 0B       		.uleb128 0xb
 13193 0101 3B       		.uleb128 0x3b
 13194 0102 05       		.uleb128 0x5
 13195 0103 27       		.uleb128 0x27
 13196 0104 19       		.uleb128 0x19
 13197 0105 49       		.uleb128 0x49
 13198 0106 13       		.uleb128 0x13
 13199 0107 11       		.uleb128 0x11
 13200 0108 01       		.uleb128 0x1
 13201 0109 12       		.uleb128 0x12
 13202 010a 06       		.uleb128 0x6
 13203 010b 40       		.uleb128 0x40
 13204 010c 18       		.uleb128 0x18
 13205 010d 9742     		.uleb128 0x2117
 13206 010f 19       		.uleb128 0x19
 13207 0110 01       		.uleb128 0x1
 13208 0111 13       		.uleb128 0x13
 13209 0112 00       		.byte	0
 13210 0113 00       		.byte	0
 13211 0114 10       		.uleb128 0x10
 13212 0115 05       		.uleb128 0x5
 13213 0116 00       		.byte	0
 13214 0117 03       		.uleb128 0x3
 13215 0118 08       		.uleb128 0x8
 13216 0119 3A       		.uleb128 0x3a
 13217 011a 0B       		.uleb128 0xb
 13218 011b 3B       		.uleb128 0x3b
 13219 011c 05       		.uleb128 0x5
 13220 011d 49       		.uleb128 0x49
 13221 011e 13       		.uleb128 0x13
 13222 011f 02       		.uleb128 0x2
 13223 0120 17       		.uleb128 0x17
 13224 0121 00       		.byte	0
 13225 0122 00       		.byte	0
 13226 0123 11       		.uleb128 0x11
 13227 0124 898201   		.uleb128 0x4109
 13228 0127 00       		.byte	0
 13229 0128 11       		.uleb128 0x11
 13230 0129 01       		.uleb128 0x1
 13231 012a 31       		.uleb128 0x31
 13232 012b 13       		.uleb128 0x13
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 274


 13233 012c 00       		.byte	0
 13234 012d 00       		.byte	0
 13235 012e 12       		.uleb128 0x12
 13236 012f 0F       		.uleb128 0xf
 13237 0130 00       		.byte	0
 13238 0131 0B       		.uleb128 0xb
 13239 0132 0B       		.uleb128 0xb
 13240 0133 49       		.uleb128 0x49
 13241 0134 13       		.uleb128 0x13
 13242 0135 00       		.byte	0
 13243 0136 00       		.byte	0
 13244 0137 13       		.uleb128 0x13
 13245 0138 2E       		.uleb128 0x2e
 13246 0139 01       		.byte	0x1
 13247 013a 3F       		.uleb128 0x3f
 13248 013b 19       		.uleb128 0x19
 13249 013c 03       		.uleb128 0x3
 13250 013d 0E       		.uleb128 0xe
 13251 013e 3A       		.uleb128 0x3a
 13252 013f 0B       		.uleb128 0xb
 13253 0140 3B       		.uleb128 0x3b
 13254 0141 05       		.uleb128 0x5
 13255 0142 11       		.uleb128 0x11
 13256 0143 01       		.uleb128 0x1
 13257 0144 12       		.uleb128 0x12
 13258 0145 06       		.uleb128 0x6
 13259 0146 40       		.uleb128 0x40
 13260 0147 18       		.uleb128 0x18
 13261 0148 9742     		.uleb128 0x2117
 13262 014a 19       		.uleb128 0x19
 13263 014b 01       		.uleb128 0x1
 13264 014c 13       		.uleb128 0x13
 13265 014d 00       		.byte	0
 13266 014e 00       		.byte	0
 13267 014f 14       		.uleb128 0x14
 13268 0150 2E       		.uleb128 0x2e
 13269 0151 01       		.byte	0x1
 13270 0152 3F       		.uleb128 0x3f
 13271 0153 19       		.uleb128 0x19
 13272 0154 03       		.uleb128 0x3
 13273 0155 0E       		.uleb128 0xe
 13274 0156 3A       		.uleb128 0x3a
 13275 0157 0B       		.uleb128 0xb
 13276 0158 3B       		.uleb128 0x3b
 13277 0159 0B       		.uleb128 0xb
 13278 015a 11       		.uleb128 0x11
 13279 015b 01       		.uleb128 0x1
 13280 015c 12       		.uleb128 0x12
 13281 015d 06       		.uleb128 0x6
 13282 015e 40       		.uleb128 0x40
 13283 015f 18       		.uleb128 0x18
 13284 0160 9742     		.uleb128 0x2117
 13285 0162 19       		.uleb128 0x19
 13286 0163 01       		.uleb128 0x1
 13287 0164 13       		.uleb128 0x13
 13288 0165 00       		.byte	0
 13289 0166 00       		.byte	0
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 275


 13290 0167 15       		.uleb128 0x15
 13291 0168 898201   		.uleb128 0x4109
 13292 016b 01       		.byte	0x1
 13293 016c 11       		.uleb128 0x11
 13294 016d 01       		.uleb128 0x1
 13295 016e 31       		.uleb128 0x31
 13296 016f 13       		.uleb128 0x13
 13297 0170 01       		.uleb128 0x1
 13298 0171 13       		.uleb128 0x13
 13299 0172 00       		.byte	0
 13300 0173 00       		.byte	0
 13301 0174 16       		.uleb128 0x16
 13302 0175 34       		.uleb128 0x34
 13303 0176 00       		.byte	0
 13304 0177 03       		.uleb128 0x3
 13305 0178 0E       		.uleb128 0xe
 13306 0179 3A       		.uleb128 0x3a
 13307 017a 0B       		.uleb128 0xb
 13308 017b 3B       		.uleb128 0x3b
 13309 017c 05       		.uleb128 0x5
 13310 017d 49       		.uleb128 0x49
 13311 017e 13       		.uleb128 0x13
 13312 017f 3F       		.uleb128 0x3f
 13313 0180 19       		.uleb128 0x19
 13314 0181 02       		.uleb128 0x2
 13315 0182 18       		.uleb128 0x18
 13316 0183 00       		.byte	0
 13317 0184 00       		.byte	0
 13318 0185 17       		.uleb128 0x17
 13319 0186 01       		.uleb128 0x1
 13320 0187 01       		.byte	0x1
 13321 0188 49       		.uleb128 0x49
 13322 0189 13       		.uleb128 0x13
 13323 018a 01       		.uleb128 0x1
 13324 018b 13       		.uleb128 0x13
 13325 018c 00       		.byte	0
 13326 018d 00       		.byte	0
 13327 018e 18       		.uleb128 0x18
 13328 018f 21       		.uleb128 0x21
 13329 0190 00       		.byte	0
 13330 0191 49       		.uleb128 0x49
 13331 0192 13       		.uleb128 0x13
 13332 0193 2F       		.uleb128 0x2f
 13333 0194 0B       		.uleb128 0xb
 13334 0195 00       		.byte	0
 13335 0196 00       		.byte	0
 13336 0197 19       		.uleb128 0x19
 13337 0198 2E       		.uleb128 0x2e
 13338 0199 01       		.byte	0x1
 13339 019a 3F       		.uleb128 0x3f
 13340 019b 19       		.uleb128 0x19
 13341 019c 03       		.uleb128 0x3
 13342 019d 0E       		.uleb128 0xe
 13343 019e 3A       		.uleb128 0x3a
 13344 019f 0B       		.uleb128 0xb
 13345 01a0 3B       		.uleb128 0x3b
 13346 01a1 05       		.uleb128 0x5
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 276


 13347 01a2 27       		.uleb128 0x27
 13348 01a3 19       		.uleb128 0x19
 13349 01a4 3C       		.uleb128 0x3c
 13350 01a5 19       		.uleb128 0x19
 13351 01a6 01       		.uleb128 0x1
 13352 01a7 13       		.uleb128 0x13
 13353 01a8 00       		.byte	0
 13354 01a9 00       		.byte	0
 13355 01aa 1A       		.uleb128 0x1a
 13356 01ab 05       		.uleb128 0x5
 13357 01ac 00       		.byte	0
 13358 01ad 49       		.uleb128 0x49
 13359 01ae 13       		.uleb128 0x13
 13360 01af 00       		.byte	0
 13361 01b0 00       		.byte	0
 13362 01b1 1B       		.uleb128 0x1b
 13363 01b2 2E       		.uleb128 0x2e
 13364 01b3 01       		.byte	0x1
 13365 01b4 3F       		.uleb128 0x3f
 13366 01b5 19       		.uleb128 0x19
 13367 01b6 03       		.uleb128 0x3
 13368 01b7 0E       		.uleb128 0xe
 13369 01b8 3A       		.uleb128 0x3a
 13370 01b9 0B       		.uleb128 0xb
 13371 01ba 3B       		.uleb128 0x3b
 13372 01bb 05       		.uleb128 0x5
 13373 01bc 27       		.uleb128 0x27
 13374 01bd 19       		.uleb128 0x19
 13375 01be 3C       		.uleb128 0x3c
 13376 01bf 19       		.uleb128 0x19
 13377 01c0 00       		.byte	0
 13378 01c1 00       		.byte	0
 13379 01c2 00       		.byte	0
 13380              		.section	.debug_loc,"",%progbits
 13381              	.Ldebug_loc0:
 13382              	.LLST0:
 13383 0000 00000000 		.4byte	.LVL2
 13384 0004 08000000 		.4byte	.LVL3
 13385 0008 0100     		.2byte	0x1
 13386 000a 50       		.byte	0x50
 13387 000b 08000000 		.4byte	.LVL3
 13388 000f 18000000 		.4byte	.LFE5
 13389 0013 0400     		.2byte	0x4
 13390 0015 F3       		.byte	0xf3
 13391 0016 01       		.uleb128 0x1
 13392 0017 50       		.byte	0x50
 13393 0018 9F       		.byte	0x9f
 13394 0019 00000000 		.4byte	0
 13395 001d 00000000 		.4byte	0
 13396              	.LLST1:
 13397 0021 00000000 		.4byte	.LVL6
 13398 0025 08000000 		.4byte	.LVL7
 13399 0029 0100     		.2byte	0x1
 13400 002b 50       		.byte	0x50
 13401 002c 08000000 		.4byte	.LVL7
 13402 0030 14000000 		.4byte	.LFE7
 13403 0034 0400     		.2byte	0x4
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 277


 13404 0036 F3       		.byte	0xf3
 13405 0037 01       		.uleb128 0x1
 13406 0038 50       		.byte	0x50
 13407 0039 9F       		.byte	0x9f
 13408 003a 00000000 		.4byte	0
 13409 003e 00000000 		.4byte	0
 13410              	.LLST2:
 13411 0042 00000000 		.4byte	.LVL10
 13412 0046 0C000000 		.4byte	.LVL11
 13413 004a 0100     		.2byte	0x1
 13414 004c 50       		.byte	0x50
 13415 004d 0C000000 		.4byte	.LVL11
 13416 0051 20000000 		.4byte	.LFE9
 13417 0055 0400     		.2byte	0x4
 13418 0057 F3       		.byte	0xf3
 13419 0058 01       		.uleb128 0x1
 13420 0059 50       		.byte	0x50
 13421 005a 9F       		.byte	0x9f
 13422 005b 00000000 		.4byte	0
 13423 005f 00000000 		.4byte	0
 13424              	.LLST3:
 13425 0063 00000000 		.4byte	.LVL14
 13426 0067 0C000000 		.4byte	.LVL15
 13427 006b 0100     		.2byte	0x1
 13428 006d 50       		.byte	0x50
 13429 006e 0C000000 		.4byte	.LVL15
 13430 0072 20000000 		.4byte	.LFE11
 13431 0076 0400     		.2byte	0x4
 13432 0078 F3       		.byte	0xf3
 13433 0079 01       		.uleb128 0x1
 13434 007a 50       		.byte	0x50
 13435 007b 9F       		.byte	0x9f
 13436 007c 00000000 		.4byte	0
 13437 0080 00000000 		.4byte	0
 13438              	.LLST4:
 13439 0084 00000000 		.4byte	.LVL17
 13440 0088 0C000000 		.4byte	.LVL18
 13441 008c 0100     		.2byte	0x1
 13442 008e 50       		.byte	0x50
 13443 008f 0C000000 		.4byte	.LVL18
 13444 0093 20000000 		.4byte	.LFE12
 13445 0097 0400     		.2byte	0x4
 13446 0099 F3       		.byte	0xf3
 13447 009a 01       		.uleb128 0x1
 13448 009b 50       		.byte	0x50
 13449 009c 9F       		.byte	0x9f
 13450 009d 00000000 		.4byte	0
 13451 00a1 00000000 		.4byte	0
 13452              	.LLST5:
 13453 00a5 00000000 		.4byte	.LVL21
 13454 00a9 0C000000 		.4byte	.LVL22
 13455 00ad 0100     		.2byte	0x1
 13456 00af 50       		.byte	0x50
 13457 00b0 0C000000 		.4byte	.LVL22
 13458 00b4 20000000 		.4byte	.LFE14
 13459 00b8 0400     		.2byte	0x4
 13460 00ba F3       		.byte	0xf3
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 278


 13461 00bb 01       		.uleb128 0x1
 13462 00bc 50       		.byte	0x50
 13463 00bd 9F       		.byte	0x9f
 13464 00be 00000000 		.4byte	0
 13465 00c2 00000000 		.4byte	0
 13466              	.LLST6:
 13467 00c6 00000000 		.4byte	.LVL25
 13468 00ca 08000000 		.4byte	.LVL26
 13469 00ce 0100     		.2byte	0x1
 13470 00d0 50       		.byte	0x50
 13471 00d1 08000000 		.4byte	.LVL26
 13472 00d5 18000000 		.4byte	.LFE16
 13473 00d9 0400     		.2byte	0x4
 13474 00db F3       		.byte	0xf3
 13475 00dc 01       		.uleb128 0x1
 13476 00dd 50       		.byte	0x50
 13477 00de 9F       		.byte	0x9f
 13478 00df 00000000 		.4byte	0
 13479 00e3 00000000 		.4byte	0
 13480              	.LLST7:
 13481 00e7 00000000 		.4byte	.LVL29
 13482 00eb 08000000 		.4byte	.LVL30
 13483 00ef 0100     		.2byte	0x1
 13484 00f1 50       		.byte	0x50
 13485 00f2 08000000 		.4byte	.LVL30
 13486 00f6 18000000 		.4byte	.LFE18
 13487 00fa 0400     		.2byte	0x4
 13488 00fc F3       		.byte	0xf3
 13489 00fd 01       		.uleb128 0x1
 13490 00fe 50       		.byte	0x50
 13491 00ff 9F       		.byte	0x9f
 13492 0100 00000000 		.4byte	0
 13493 0104 00000000 		.4byte	0
 13494              	.LLST8:
 13495 0108 00000000 		.4byte	.LVL33
 13496 010c 08000000 		.4byte	.LVL34
 13497 0110 0100     		.2byte	0x1
 13498 0112 50       		.byte	0x50
 13499 0113 08000000 		.4byte	.LVL34
 13500 0117 18000000 		.4byte	.LFE20
 13501 011b 0400     		.2byte	0x4
 13502 011d F3       		.byte	0xf3
 13503 011e 01       		.uleb128 0x1
 13504 011f 50       		.byte	0x50
 13505 0120 9F       		.byte	0x9f
 13506 0121 00000000 		.4byte	0
 13507 0125 00000000 		.4byte	0
 13508              	.LLST9:
 13509 0129 00000000 		.4byte	.LVL37
 13510 012d 0C000000 		.4byte	.LVL38
 13511 0131 0100     		.2byte	0x1
 13512 0133 50       		.byte	0x50
 13513 0134 0C000000 		.4byte	.LVL38
 13514 0138 20000000 		.4byte	.LFE22
 13515 013c 0400     		.2byte	0x4
 13516 013e F3       		.byte	0xf3
 13517 013f 01       		.uleb128 0x1
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 279


 13518 0140 50       		.byte	0x50
 13519 0141 9F       		.byte	0x9f
 13520 0142 00000000 		.4byte	0
 13521 0146 00000000 		.4byte	0
 13522              	.LLST10:
 13523 014a 00000000 		.4byte	.LVL41
 13524 014e 0C000000 		.4byte	.LVL42
 13525 0152 0100     		.2byte	0x1
 13526 0154 50       		.byte	0x50
 13527 0155 0C000000 		.4byte	.LVL42
 13528 0159 20000000 		.4byte	.LFE24
 13529 015d 0400     		.2byte	0x4
 13530 015f F3       		.byte	0xf3
 13531 0160 01       		.uleb128 0x1
 13532 0161 50       		.byte	0x50
 13533 0162 9F       		.byte	0x9f
 13534 0163 00000000 		.4byte	0
 13535 0167 00000000 		.4byte	0
 13536              	.LLST11:
 13537 016b 00000000 		.4byte	.LVL45
 13538 016f 08000000 		.4byte	.LVL46
 13539 0173 0100     		.2byte	0x1
 13540 0175 50       		.byte	0x50
 13541 0176 08000000 		.4byte	.LVL46
 13542 017a 14000000 		.4byte	.LFE26
 13543 017e 0400     		.2byte	0x4
 13544 0180 F3       		.byte	0xf3
 13545 0181 01       		.uleb128 0x1
 13546 0182 50       		.byte	0x50
 13547 0183 9F       		.byte	0x9f
 13548 0184 00000000 		.4byte	0
 13549 0188 00000000 		.4byte	0
 13550              	.LLST12:
 13551 018c 00000000 		.4byte	.LVL49
 13552 0190 08000000 		.4byte	.LVL50
 13553 0194 0100     		.2byte	0x1
 13554 0196 50       		.byte	0x50
 13555 0197 08000000 		.4byte	.LVL50
 13556 019b 14000000 		.4byte	.LFE28
 13557 019f 0400     		.2byte	0x4
 13558 01a1 F3       		.byte	0xf3
 13559 01a2 01       		.uleb128 0x1
 13560 01a3 50       		.byte	0x50
 13561 01a4 9F       		.byte	0x9f
 13562 01a5 00000000 		.4byte	0
 13563 01a9 00000000 		.4byte	0
 13564              	.LLST13:
 13565 01ad 00000000 		.4byte	.LVL53
 13566 01b1 08000000 		.4byte	.LVL54
 13567 01b5 0100     		.2byte	0x1
 13568 01b7 50       		.byte	0x50
 13569 01b8 08000000 		.4byte	.LVL54
 13570 01bc 14000000 		.4byte	.LFE30
 13571 01c0 0400     		.2byte	0x4
 13572 01c2 F3       		.byte	0xf3
 13573 01c3 01       		.uleb128 0x1
 13574 01c4 50       		.byte	0x50
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 280


 13575 01c5 9F       		.byte	0x9f
 13576 01c6 00000000 		.4byte	0
 13577 01ca 00000000 		.4byte	0
 13578              	.LLST14:
 13579 01ce 00000000 		.4byte	.LVL57
 13580 01d2 08000000 		.4byte	.LVL58
 13581 01d6 0100     		.2byte	0x1
 13582 01d8 50       		.byte	0x50
 13583 01d9 08000000 		.4byte	.LVL58
 13584 01dd 14000000 		.4byte	.LFE32
 13585 01e1 0400     		.2byte	0x4
 13586 01e3 F3       		.byte	0xf3
 13587 01e4 01       		.uleb128 0x1
 13588 01e5 50       		.byte	0x50
 13589 01e6 9F       		.byte	0x9f
 13590 01e7 00000000 		.4byte	0
 13591 01eb 00000000 		.4byte	0
 13592              	.LLST15:
 13593 01ef 00000000 		.4byte	.LVL61
 13594 01f3 08000000 		.4byte	.LVL62
 13595 01f7 0100     		.2byte	0x1
 13596 01f9 50       		.byte	0x50
 13597 01fa 08000000 		.4byte	.LVL62
 13598 01fe 14000000 		.4byte	.LFE34
 13599 0202 0400     		.2byte	0x4
 13600 0204 F3       		.byte	0xf3
 13601 0205 01       		.uleb128 0x1
 13602 0206 50       		.byte	0x50
 13603 0207 9F       		.byte	0x9f
 13604 0208 00000000 		.4byte	0
 13605 020c 00000000 		.4byte	0
 13606              	.LLST16:
 13607 0210 00000000 		.4byte	.LVL65
 13608 0214 08000000 		.4byte	.LVL66
 13609 0218 0100     		.2byte	0x1
 13610 021a 50       		.byte	0x50
 13611 021b 08000000 		.4byte	.LVL66
 13612 021f 14000000 		.4byte	.LFE36
 13613 0223 0400     		.2byte	0x4
 13614 0225 F3       		.byte	0xf3
 13615 0226 01       		.uleb128 0x1
 13616 0227 50       		.byte	0x50
 13617 0228 9F       		.byte	0x9f
 13618 0229 00000000 		.4byte	0
 13619 022d 00000000 		.4byte	0
 13620              	.LLST17:
 13621 0231 00000000 		.4byte	.LVL69
 13622 0235 08000000 		.4byte	.LVL70
 13623 0239 0100     		.2byte	0x1
 13624 023b 50       		.byte	0x50
 13625 023c 08000000 		.4byte	.LVL70
 13626 0240 18000000 		.4byte	.LFE38
 13627 0244 0400     		.2byte	0x4
 13628 0246 F3       		.byte	0xf3
 13629 0247 01       		.uleb128 0x1
 13630 0248 50       		.byte	0x50
 13631 0249 9F       		.byte	0x9f
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 281


 13632 024a 00000000 		.4byte	0
 13633 024e 00000000 		.4byte	0
 13634              	.LLST18:
 13635 0252 00000000 		.4byte	.LVL73
 13636 0256 08000000 		.4byte	.LVL74
 13637 025a 0100     		.2byte	0x1
 13638 025c 50       		.byte	0x50
 13639 025d 08000000 		.4byte	.LVL74
 13640 0261 18000000 		.4byte	.LFE40
 13641 0265 0400     		.2byte	0x4
 13642 0267 F3       		.byte	0xf3
 13643 0268 01       		.uleb128 0x1
 13644 0269 50       		.byte	0x50
 13645 026a 9F       		.byte	0x9f
 13646 026b 00000000 		.4byte	0
 13647 026f 00000000 		.4byte	0
 13648              	.LLST19:
 13649 0273 00000000 		.4byte	.LVL77
 13650 0277 08000000 		.4byte	.LVL78
 13651 027b 0100     		.2byte	0x1
 13652 027d 50       		.byte	0x50
 13653 027e 08000000 		.4byte	.LVL78
 13654 0282 18000000 		.4byte	.LFE42
 13655 0286 0400     		.2byte	0x4
 13656 0288 F3       		.byte	0xf3
 13657 0289 01       		.uleb128 0x1
 13658 028a 50       		.byte	0x50
 13659 028b 9F       		.byte	0x9f
 13660 028c 00000000 		.4byte	0
 13661 0290 00000000 		.4byte	0
 13662              	.LLST20:
 13663 0294 00000000 		.4byte	.LVL81
 13664 0298 08000000 		.4byte	.LVL82
 13665 029c 0100     		.2byte	0x1
 13666 029e 50       		.byte	0x50
 13667 029f 08000000 		.4byte	.LVL82
 13668 02a3 18000000 		.4byte	.LFE44
 13669 02a7 0400     		.2byte	0x4
 13670 02a9 F3       		.byte	0xf3
 13671 02aa 01       		.uleb128 0x1
 13672 02ab 50       		.byte	0x50
 13673 02ac 9F       		.byte	0x9f
 13674 02ad 00000000 		.4byte	0
 13675 02b1 00000000 		.4byte	0
 13676              	.LLST21:
 13677 02b5 00000000 		.4byte	.LVL85
 13678 02b9 08000000 		.4byte	.LVL86
 13679 02bd 0100     		.2byte	0x1
 13680 02bf 50       		.byte	0x50
 13681 02c0 08000000 		.4byte	.LVL86
 13682 02c4 18000000 		.4byte	.LFE46
 13683 02c8 0400     		.2byte	0x4
 13684 02ca F3       		.byte	0xf3
 13685 02cb 01       		.uleb128 0x1
 13686 02cc 50       		.byte	0x50
 13687 02cd 9F       		.byte	0x9f
 13688 02ce 00000000 		.4byte	0
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 282


 13689 02d2 00000000 		.4byte	0
 13690              	.LLST22:
 13691 02d6 00000000 		.4byte	.LVL89
 13692 02da 08000000 		.4byte	.LVL90
 13693 02de 0100     		.2byte	0x1
 13694 02e0 50       		.byte	0x50
 13695 02e1 08000000 		.4byte	.LVL90
 13696 02e5 18000000 		.4byte	.LFE48
 13697 02e9 0400     		.2byte	0x4
 13698 02eb F3       		.byte	0xf3
 13699 02ec 01       		.uleb128 0x1
 13700 02ed 50       		.byte	0x50
 13701 02ee 9F       		.byte	0x9f
 13702 02ef 00000000 		.4byte	0
 13703 02f3 00000000 		.4byte	0
 13704              	.LLST23:
 13705 02f7 00000000 		.4byte	.LVL93
 13706 02fb 08000000 		.4byte	.LVL94
 13707 02ff 0100     		.2byte	0x1
 13708 0301 50       		.byte	0x50
 13709 0302 08000000 		.4byte	.LVL94
 13710 0306 18000000 		.4byte	.LFE50
 13711 030a 0400     		.2byte	0x4
 13712 030c F3       		.byte	0xf3
 13713 030d 01       		.uleb128 0x1
 13714 030e 50       		.byte	0x50
 13715 030f 9F       		.byte	0x9f
 13716 0310 00000000 		.4byte	0
 13717 0314 00000000 		.4byte	0
 13718              	.LLST24:
 13719 0318 00000000 		.4byte	.LVL97
 13720 031c 08000000 		.4byte	.LVL98
 13721 0320 0100     		.2byte	0x1
 13722 0322 50       		.byte	0x50
 13723 0323 08000000 		.4byte	.LVL98
 13724 0327 18000000 		.4byte	.LFE52
 13725 032b 0400     		.2byte	0x4
 13726 032d F3       		.byte	0xf3
 13727 032e 01       		.uleb128 0x1
 13728 032f 50       		.byte	0x50
 13729 0330 9F       		.byte	0x9f
 13730 0331 00000000 		.4byte	0
 13731 0335 00000000 		.4byte	0
 13732              	.LLST25:
 13733 0339 00000000 		.4byte	.LVL101
 13734 033d 08000000 		.4byte	.LVL102
 13735 0341 0100     		.2byte	0x1
 13736 0343 50       		.byte	0x50
 13737 0344 08000000 		.4byte	.LVL102
 13738 0348 18000000 		.4byte	.LFE54
 13739 034c 0400     		.2byte	0x4
 13740 034e F3       		.byte	0xf3
 13741 034f 01       		.uleb128 0x1
 13742 0350 50       		.byte	0x50
 13743 0351 9F       		.byte	0x9f
 13744 0352 00000000 		.4byte	0
 13745 0356 00000000 		.4byte	0
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 283


 13746              	.LLST26:
 13747 035a 00000000 		.4byte	.LVL105
 13748 035e 08000000 		.4byte	.LVL106
 13749 0362 0100     		.2byte	0x1
 13750 0364 50       		.byte	0x50
 13751 0365 08000000 		.4byte	.LVL106
 13752 0369 18000000 		.4byte	.LFE56
 13753 036d 0400     		.2byte	0x4
 13754 036f F3       		.byte	0xf3
 13755 0370 01       		.uleb128 0x1
 13756 0371 50       		.byte	0x50
 13757 0372 9F       		.byte	0x9f
 13758 0373 00000000 		.4byte	0
 13759 0377 00000000 		.4byte	0
 13760              	.LLST27:
 13761 037b 00000000 		.4byte	.LVL109
 13762 037f 08000000 		.4byte	.LVL110
 13763 0383 0100     		.2byte	0x1
 13764 0385 50       		.byte	0x50
 13765 0386 08000000 		.4byte	.LVL110
 13766 038a 18000000 		.4byte	.LFE58
 13767 038e 0400     		.2byte	0x4
 13768 0390 F3       		.byte	0xf3
 13769 0391 01       		.uleb128 0x1
 13770 0392 50       		.byte	0x50
 13771 0393 9F       		.byte	0x9f
 13772 0394 00000000 		.4byte	0
 13773 0398 00000000 		.4byte	0
 13774              	.LLST28:
 13775 039c 00000000 		.4byte	.LVL113
 13776 03a0 08000000 		.4byte	.LVL114
 13777 03a4 0100     		.2byte	0x1
 13778 03a6 50       		.byte	0x50
 13779 03a7 08000000 		.4byte	.LVL114
 13780 03ab 18000000 		.4byte	.LFE60
 13781 03af 0400     		.2byte	0x4
 13782 03b1 F3       		.byte	0xf3
 13783 03b2 01       		.uleb128 0x1
 13784 03b3 50       		.byte	0x50
 13785 03b4 9F       		.byte	0x9f
 13786 03b5 00000000 		.4byte	0
 13787 03b9 00000000 		.4byte	0
 13788              	.LLST29:
 13789 03bd 00000000 		.4byte	.LVL117
 13790 03c1 0C000000 		.4byte	.LVL118
 13791 03c5 0100     		.2byte	0x1
 13792 03c7 50       		.byte	0x50
 13793 03c8 0C000000 		.4byte	.LVL118
 13794 03cc 20000000 		.4byte	.LFE62
 13795 03d0 0400     		.2byte	0x4
 13796 03d2 F3       		.byte	0xf3
 13797 03d3 01       		.uleb128 0x1
 13798 03d4 50       		.byte	0x50
 13799 03d5 9F       		.byte	0x9f
 13800 03d6 00000000 		.4byte	0
 13801 03da 00000000 		.4byte	0
 13802              	.LLST30:
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 284


 13803 03de 00000000 		.4byte	.LVL120
 13804 03e2 0A000000 		.4byte	.LVL121
 13805 03e6 0100     		.2byte	0x1
 13806 03e8 50       		.byte	0x50
 13807 03e9 0A000000 		.4byte	.LVL121
 13808 03ed 20000000 		.4byte	.LVL123
 13809 03f1 0400     		.2byte	0x4
 13810 03f3 F3       		.byte	0xf3
 13811 03f4 01       		.uleb128 0x1
 13812 03f5 50       		.byte	0x50
 13813 03f6 9F       		.byte	0x9f
 13814 03f7 20000000 		.4byte	.LVL123
 13815 03fb 22000000 		.4byte	.LVL124
 13816 03ff 0100     		.2byte	0x1
 13817 0401 50       		.byte	0x50
 13818 0402 22000000 		.4byte	.LVL124
 13819 0406 2C000000 		.4byte	.LFE63
 13820 040a 0400     		.2byte	0x4
 13821 040c F3       		.byte	0xf3
 13822 040d 01       		.uleb128 0x1
 13823 040e 50       		.byte	0x50
 13824 040f 9F       		.byte	0x9f
 13825 0410 00000000 		.4byte	0
 13826 0414 00000000 		.4byte	0
 13827              	.LLST31:
 13828 0418 00000000 		.4byte	.LVL125
 13829 041c 0C000000 		.4byte	.LVL126
 13830 0420 0100     		.2byte	0x1
 13831 0422 50       		.byte	0x50
 13832 0423 0C000000 		.4byte	.LVL126
 13833 0427 1C000000 		.4byte	.LVL129
 13834 042b 0400     		.2byte	0x4
 13835 042d F3       		.byte	0xf3
 13836 042e 01       		.uleb128 0x1
 13837 042f 50       		.byte	0x50
 13838 0430 9F       		.byte	0x9f
 13839 0431 1C000000 		.4byte	.LVL129
 13840 0435 24000000 		.4byte	.LFE64
 13841 0439 0100     		.2byte	0x1
 13842 043b 50       		.byte	0x50
 13843 043c 00000000 		.4byte	0
 13844 0440 00000000 		.4byte	0
 13845              	.LLST32:
 13846 0444 00000000 		.4byte	.LVL125
 13847 0448 12000000 		.4byte	.LVL127
 13848 044c 0100     		.2byte	0x1
 13849 044e 51       		.byte	0x51
 13850 044f 12000000 		.4byte	.LVL127
 13851 0453 1C000000 		.4byte	.LVL129
 13852 0457 0400     		.2byte	0x4
 13853 0459 F3       		.byte	0xf3
 13854 045a 01       		.uleb128 0x1
 13855 045b 51       		.byte	0x51
 13856 045c 9F       		.byte	0x9f
 13857 045d 1C000000 		.4byte	.LVL129
 13858 0461 24000000 		.4byte	.LFE64
 13859 0465 0100     		.2byte	0x1
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 285


 13860 0467 51       		.byte	0x51
 13861 0468 00000000 		.4byte	0
 13862 046c 00000000 		.4byte	0
 13863              	.LLST33:
 13864 0470 00000000 		.4byte	.LVL130
 13865 0474 0A000000 		.4byte	.LVL131
 13866 0478 0100     		.2byte	0x1
 13867 047a 50       		.byte	0x50
 13868 047b 0A000000 		.4byte	.LVL131
 13869 047f 20000000 		.4byte	.LVL133
 13870 0483 0400     		.2byte	0x4
 13871 0485 F3       		.byte	0xf3
 13872 0486 01       		.uleb128 0x1
 13873 0487 50       		.byte	0x50
 13874 0488 9F       		.byte	0x9f
 13875 0489 20000000 		.4byte	.LVL133
 13876 048d 22000000 		.4byte	.LVL134
 13877 0491 0100     		.2byte	0x1
 13878 0493 50       		.byte	0x50
 13879 0494 22000000 		.4byte	.LVL134
 13880 0498 2C000000 		.4byte	.LFE65
 13881 049c 0400     		.2byte	0x4
 13882 049e F3       		.byte	0xf3
 13883 049f 01       		.uleb128 0x1
 13884 04a0 50       		.byte	0x50
 13885 04a1 9F       		.byte	0x9f
 13886 04a2 00000000 		.4byte	0
 13887 04a6 00000000 		.4byte	0
 13888              	.LLST34:
 13889 04aa 00000000 		.4byte	.LVL135
 13890 04ae 0C000000 		.4byte	.LVL136
 13891 04b2 0100     		.2byte	0x1
 13892 04b4 50       		.byte	0x50
 13893 04b5 0C000000 		.4byte	.LVL136
 13894 04b9 1C000000 		.4byte	.LVL139
 13895 04bd 0400     		.2byte	0x4
 13896 04bf F3       		.byte	0xf3
 13897 04c0 01       		.uleb128 0x1
 13898 04c1 50       		.byte	0x50
 13899 04c2 9F       		.byte	0x9f
 13900 04c3 1C000000 		.4byte	.LVL139
 13901 04c7 24000000 		.4byte	.LFE66
 13902 04cb 0100     		.2byte	0x1
 13903 04cd 50       		.byte	0x50
 13904 04ce 00000000 		.4byte	0
 13905 04d2 00000000 		.4byte	0
 13906              	.LLST35:
 13907 04d6 00000000 		.4byte	.LVL135
 13908 04da 12000000 		.4byte	.LVL137
 13909 04de 0100     		.2byte	0x1
 13910 04e0 51       		.byte	0x51
 13911 04e1 12000000 		.4byte	.LVL137
 13912 04e5 1C000000 		.4byte	.LVL139
 13913 04e9 0400     		.2byte	0x4
 13914 04eb F3       		.byte	0xf3
 13915 04ec 01       		.uleb128 0x1
 13916 04ed 51       		.byte	0x51
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 286


 13917 04ee 9F       		.byte	0x9f
 13918 04ef 1C000000 		.4byte	.LVL139
 13919 04f3 24000000 		.4byte	.LFE66
 13920 04f7 0100     		.2byte	0x1
 13921 04f9 51       		.byte	0x51
 13922 04fa 00000000 		.4byte	0
 13923 04fe 00000000 		.4byte	0
 13924              	.LLST36:
 13925 0502 00000000 		.4byte	.LVL140
 13926 0506 0A000000 		.4byte	.LVL141
 13927 050a 0100     		.2byte	0x1
 13928 050c 50       		.byte	0x50
 13929 050d 0A000000 		.4byte	.LVL141
 13930 0511 28000000 		.4byte	.LVL143
 13931 0515 0400     		.2byte	0x4
 13932 0517 F3       		.byte	0xf3
 13933 0518 01       		.uleb128 0x1
 13934 0519 50       		.byte	0x50
 13935 051a 9F       		.byte	0x9f
 13936 051b 28000000 		.4byte	.LVL143
 13937 051f 2A000000 		.4byte	.LVL144
 13938 0523 0100     		.2byte	0x1
 13939 0525 50       		.byte	0x50
 13940 0526 2A000000 		.4byte	.LVL144
 13941 052a 34000000 		.4byte	.LFE67
 13942 052e 0400     		.2byte	0x4
 13943 0530 F3       		.byte	0xf3
 13944 0531 01       		.uleb128 0x1
 13945 0532 50       		.byte	0x50
 13946 0533 9F       		.byte	0x9f
 13947 0534 00000000 		.4byte	0
 13948 0538 00000000 		.4byte	0
 13949              	.LLST37:
 13950 053c 00000000 		.4byte	.LVL145
 13951 0540 0C000000 		.4byte	.LVL146
 13952 0544 0100     		.2byte	0x1
 13953 0546 50       		.byte	0x50
 13954 0547 0C000000 		.4byte	.LVL146
 13955 054b 1E000000 		.4byte	.LVL149
 13956 054f 0400     		.2byte	0x4
 13957 0551 F3       		.byte	0xf3
 13958 0552 01       		.uleb128 0x1
 13959 0553 50       		.byte	0x50
 13960 0554 9F       		.byte	0x9f
 13961 0555 1E000000 		.4byte	.LVL149
 13962 0559 24000000 		.4byte	.LFE68
 13963 055d 0100     		.2byte	0x1
 13964 055f 50       		.byte	0x50
 13965 0560 00000000 		.4byte	0
 13966 0564 00000000 		.4byte	0
 13967              	.LLST38:
 13968 0568 00000000 		.4byte	.LVL145
 13969 056c 12000000 		.4byte	.LVL147
 13970 0570 0100     		.2byte	0x1
 13971 0572 51       		.byte	0x51
 13972 0573 12000000 		.4byte	.LVL147
 13973 0577 1E000000 		.4byte	.LVL149
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 287


 13974 057b 0400     		.2byte	0x4
 13975 057d F3       		.byte	0xf3
 13976 057e 01       		.uleb128 0x1
 13977 057f 51       		.byte	0x51
 13978 0580 9F       		.byte	0x9f
 13979 0581 1E000000 		.4byte	.LVL149
 13980 0585 24000000 		.4byte	.LFE68
 13981 0589 0100     		.2byte	0x1
 13982 058b 51       		.byte	0x51
 13983 058c 00000000 		.4byte	0
 13984 0590 00000000 		.4byte	0
 13985              	.LLST39:
 13986 0594 00000000 		.4byte	.LVL150
 13987 0598 0A000000 		.4byte	.LVL151
 13988 059c 0100     		.2byte	0x1
 13989 059e 50       		.byte	0x50
 13990 059f 0A000000 		.4byte	.LVL151
 13991 05a3 28000000 		.4byte	.LVL153
 13992 05a7 0400     		.2byte	0x4
 13993 05a9 F3       		.byte	0xf3
 13994 05aa 01       		.uleb128 0x1
 13995 05ab 50       		.byte	0x50
 13996 05ac 9F       		.byte	0x9f
 13997 05ad 28000000 		.4byte	.LVL153
 13998 05b1 2A000000 		.4byte	.LVL154
 13999 05b5 0100     		.2byte	0x1
 14000 05b7 50       		.byte	0x50
 14001 05b8 2A000000 		.4byte	.LVL154
 14002 05bc 34000000 		.4byte	.LFE69
 14003 05c0 0400     		.2byte	0x4
 14004 05c2 F3       		.byte	0xf3
 14005 05c3 01       		.uleb128 0x1
 14006 05c4 50       		.byte	0x50
 14007 05c5 9F       		.byte	0x9f
 14008 05c6 00000000 		.4byte	0
 14009 05ca 00000000 		.4byte	0
 14010              	.LLST40:
 14011 05ce 00000000 		.4byte	.LVL155
 14012 05d2 0C000000 		.4byte	.LVL156
 14013 05d6 0100     		.2byte	0x1
 14014 05d8 50       		.byte	0x50
 14015 05d9 0C000000 		.4byte	.LVL156
 14016 05dd 1E000000 		.4byte	.LVL159
 14017 05e1 0400     		.2byte	0x4
 14018 05e3 F3       		.byte	0xf3
 14019 05e4 01       		.uleb128 0x1
 14020 05e5 50       		.byte	0x50
 14021 05e6 9F       		.byte	0x9f
 14022 05e7 1E000000 		.4byte	.LVL159
 14023 05eb 24000000 		.4byte	.LFE70
 14024 05ef 0100     		.2byte	0x1
 14025 05f1 50       		.byte	0x50
 14026 05f2 00000000 		.4byte	0
 14027 05f6 00000000 		.4byte	0
 14028              	.LLST41:
 14029 05fa 00000000 		.4byte	.LVL155
 14030 05fe 12000000 		.4byte	.LVL157
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 288


 14031 0602 0100     		.2byte	0x1
 14032 0604 51       		.byte	0x51
 14033 0605 12000000 		.4byte	.LVL157
 14034 0609 1E000000 		.4byte	.LVL159
 14035 060d 0400     		.2byte	0x4
 14036 060f F3       		.byte	0xf3
 14037 0610 01       		.uleb128 0x1
 14038 0611 51       		.byte	0x51
 14039 0612 9F       		.byte	0x9f
 14040 0613 1E000000 		.4byte	.LVL159
 14041 0617 24000000 		.4byte	.LFE70
 14042 061b 0100     		.2byte	0x1
 14043 061d 51       		.byte	0x51
 14044 061e 00000000 		.4byte	0
 14045 0622 00000000 		.4byte	0
 14046              	.LLST42:
 14047 0626 00000000 		.4byte	.LVL160
 14048 062a 0A000000 		.4byte	.LVL161
 14049 062e 0100     		.2byte	0x1
 14050 0630 50       		.byte	0x50
 14051 0631 0A000000 		.4byte	.LVL161
 14052 0635 28000000 		.4byte	.LVL163
 14053 0639 0400     		.2byte	0x4
 14054 063b F3       		.byte	0xf3
 14055 063c 01       		.uleb128 0x1
 14056 063d 50       		.byte	0x50
 14057 063e 9F       		.byte	0x9f
 14058 063f 28000000 		.4byte	.LVL163
 14059 0643 2A000000 		.4byte	.LVL164
 14060 0647 0100     		.2byte	0x1
 14061 0649 50       		.byte	0x50
 14062 064a 2A000000 		.4byte	.LVL164
 14063 064e 34000000 		.4byte	.LFE71
 14064 0652 0400     		.2byte	0x4
 14065 0654 F3       		.byte	0xf3
 14066 0655 01       		.uleb128 0x1
 14067 0656 50       		.byte	0x50
 14068 0657 9F       		.byte	0x9f
 14069 0658 00000000 		.4byte	0
 14070 065c 00000000 		.4byte	0
 14071              	.LLST43:
 14072 0660 00000000 		.4byte	.LVL165
 14073 0664 0C000000 		.4byte	.LVL166
 14074 0668 0100     		.2byte	0x1
 14075 066a 50       		.byte	0x50
 14076 066b 0C000000 		.4byte	.LVL166
 14077 066f 1E000000 		.4byte	.LVL169
 14078 0673 0400     		.2byte	0x4
 14079 0675 F3       		.byte	0xf3
 14080 0676 01       		.uleb128 0x1
 14081 0677 50       		.byte	0x50
 14082 0678 9F       		.byte	0x9f
 14083 0679 1E000000 		.4byte	.LVL169
 14084 067d 24000000 		.4byte	.LFE72
 14085 0681 0100     		.2byte	0x1
 14086 0683 50       		.byte	0x50
 14087 0684 00000000 		.4byte	0
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 289


 14088 0688 00000000 		.4byte	0
 14089              	.LLST44:
 14090 068c 00000000 		.4byte	.LVL165
 14091 0690 12000000 		.4byte	.LVL167
 14092 0694 0100     		.2byte	0x1
 14093 0696 51       		.byte	0x51
 14094 0697 12000000 		.4byte	.LVL167
 14095 069b 1E000000 		.4byte	.LVL169
 14096 069f 0400     		.2byte	0x4
 14097 06a1 F3       		.byte	0xf3
 14098 06a2 01       		.uleb128 0x1
 14099 06a3 51       		.byte	0x51
 14100 06a4 9F       		.byte	0x9f
 14101 06a5 1E000000 		.4byte	.LVL169
 14102 06a9 24000000 		.4byte	.LFE72
 14103 06ad 0100     		.2byte	0x1
 14104 06af 51       		.byte	0x51
 14105 06b0 00000000 		.4byte	0
 14106 06b4 00000000 		.4byte	0
 14107              	.LLST45:
 14108 06b8 00000000 		.4byte	.LVL170
 14109 06bc 0A000000 		.4byte	.LVL171
 14110 06c0 0100     		.2byte	0x1
 14111 06c2 50       		.byte	0x50
 14112 06c3 0A000000 		.4byte	.LVL171
 14113 06c7 28000000 		.4byte	.LVL173
 14114 06cb 0400     		.2byte	0x4
 14115 06cd F3       		.byte	0xf3
 14116 06ce 01       		.uleb128 0x1
 14117 06cf 50       		.byte	0x50
 14118 06d0 9F       		.byte	0x9f
 14119 06d1 28000000 		.4byte	.LVL173
 14120 06d5 2A000000 		.4byte	.LVL174
 14121 06d9 0100     		.2byte	0x1
 14122 06db 50       		.byte	0x50
 14123 06dc 2A000000 		.4byte	.LVL174
 14124 06e0 34000000 		.4byte	.LFE73
 14125 06e4 0400     		.2byte	0x4
 14126 06e6 F3       		.byte	0xf3
 14127 06e7 01       		.uleb128 0x1
 14128 06e8 50       		.byte	0x50
 14129 06e9 9F       		.byte	0x9f
 14130 06ea 00000000 		.4byte	0
 14131 06ee 00000000 		.4byte	0
 14132              	.LLST46:
 14133 06f2 00000000 		.4byte	.LVL175
 14134 06f6 0C000000 		.4byte	.LVL176
 14135 06fa 0100     		.2byte	0x1
 14136 06fc 50       		.byte	0x50
 14137 06fd 0C000000 		.4byte	.LVL176
 14138 0701 1E000000 		.4byte	.LVL179
 14139 0705 0400     		.2byte	0x4
 14140 0707 F3       		.byte	0xf3
 14141 0708 01       		.uleb128 0x1
 14142 0709 50       		.byte	0x50
 14143 070a 9F       		.byte	0x9f
 14144 070b 1E000000 		.4byte	.LVL179
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 290


 14145 070f 24000000 		.4byte	.LFE74
 14146 0713 0100     		.2byte	0x1
 14147 0715 50       		.byte	0x50
 14148 0716 00000000 		.4byte	0
 14149 071a 00000000 		.4byte	0
 14150              	.LLST47:
 14151 071e 00000000 		.4byte	.LVL175
 14152 0722 12000000 		.4byte	.LVL177
 14153 0726 0100     		.2byte	0x1
 14154 0728 51       		.byte	0x51
 14155 0729 12000000 		.4byte	.LVL177
 14156 072d 1E000000 		.4byte	.LVL179
 14157 0731 0400     		.2byte	0x4
 14158 0733 F3       		.byte	0xf3
 14159 0734 01       		.uleb128 0x1
 14160 0735 51       		.byte	0x51
 14161 0736 9F       		.byte	0x9f
 14162 0737 1E000000 		.4byte	.LVL179
 14163 073b 24000000 		.4byte	.LFE74
 14164 073f 0100     		.2byte	0x1
 14165 0741 51       		.byte	0x51
 14166 0742 00000000 		.4byte	0
 14167 0746 00000000 		.4byte	0
 14168              	.LLST48:
 14169 074a 00000000 		.4byte	.LVL180
 14170 074e 0E000000 		.4byte	.LVL181
 14171 0752 0100     		.2byte	0x1
 14172 0754 50       		.byte	0x50
 14173 0755 0E000000 		.4byte	.LVL181
 14174 0759 26000000 		.4byte	.LVL183
 14175 075d 0400     		.2byte	0x4
 14176 075f F3       		.byte	0xf3
 14177 0760 01       		.uleb128 0x1
 14178 0761 50       		.byte	0x50
 14179 0762 9F       		.byte	0x9f
 14180 0763 26000000 		.4byte	.LVL183
 14181 0767 28000000 		.4byte	.LVL184
 14182 076b 0100     		.2byte	0x1
 14183 076d 50       		.byte	0x50
 14184 076e 28000000 		.4byte	.LVL184
 14185 0772 38000000 		.4byte	.LFE75
 14186 0776 0400     		.2byte	0x4
 14187 0778 F3       		.byte	0xf3
 14188 0779 01       		.uleb128 0x1
 14189 077a 50       		.byte	0x50
 14190 077b 9F       		.byte	0x9f
 14191 077c 00000000 		.4byte	0
 14192 0780 00000000 		.4byte	0
 14193              	.LLST49:
 14194 0784 00000000 		.4byte	.LVL185
 14195 0788 0E000000 		.4byte	.LVL186
 14196 078c 0100     		.2byte	0x1
 14197 078e 50       		.byte	0x50
 14198 078f 0E000000 		.4byte	.LVL186
 14199 0793 26000000 		.4byte	.LVL189
 14200 0797 0400     		.2byte	0x4
 14201 0799 F3       		.byte	0xf3
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 291


 14202 079a 01       		.uleb128 0x1
 14203 079b 50       		.byte	0x50
 14204 079c 9F       		.byte	0x9f
 14205 079d 26000000 		.4byte	.LVL189
 14206 07a1 2C000000 		.4byte	.LFE76
 14207 07a5 0100     		.2byte	0x1
 14208 07a7 50       		.byte	0x50
 14209 07a8 00000000 		.4byte	0
 14210 07ac 00000000 		.4byte	0
 14211              	.LLST50:
 14212 07b0 00000000 		.4byte	.LVL185
 14213 07b4 18000000 		.4byte	.LVL187
 14214 07b8 0100     		.2byte	0x1
 14215 07ba 51       		.byte	0x51
 14216 07bb 18000000 		.4byte	.LVL187
 14217 07bf 26000000 		.4byte	.LVL189
 14218 07c3 0400     		.2byte	0x4
 14219 07c5 F3       		.byte	0xf3
 14220 07c6 01       		.uleb128 0x1
 14221 07c7 51       		.byte	0x51
 14222 07c8 9F       		.byte	0x9f
 14223 07c9 26000000 		.4byte	.LVL189
 14224 07cd 2C000000 		.4byte	.LFE76
 14225 07d1 0100     		.2byte	0x1
 14226 07d3 51       		.byte	0x51
 14227 07d4 00000000 		.4byte	0
 14228 07d8 00000000 		.4byte	0
 14229              	.LLST51:
 14230 07dc 00000000 		.4byte	.LVL191
 14231 07e0 08000000 		.4byte	.LVL192
 14232 07e4 0100     		.2byte	0x1
 14233 07e6 50       		.byte	0x50
 14234 07e7 08000000 		.4byte	.LVL192
 14235 07eb 14000000 		.4byte	.LFE78
 14236 07ef 0400     		.2byte	0x4
 14237 07f1 F3       		.byte	0xf3
 14238 07f2 01       		.uleb128 0x1
 14239 07f3 50       		.byte	0x50
 14240 07f4 9F       		.byte	0x9f
 14241 07f5 00000000 		.4byte	0
 14242 07f9 00000000 		.4byte	0
 14243              	.LLST52:
 14244 07fd 00000000 		.4byte	.LVL195
 14245 0801 08000000 		.4byte	.LVL196
 14246 0805 0100     		.2byte	0x1
 14247 0807 50       		.byte	0x50
 14248 0808 08000000 		.4byte	.LVL196
 14249 080c 14000000 		.4byte	.LFE80
 14250 0810 0400     		.2byte	0x4
 14251 0812 F3       		.byte	0xf3
 14252 0813 01       		.uleb128 0x1
 14253 0814 50       		.byte	0x50
 14254 0815 9F       		.byte	0x9f
 14255 0816 00000000 		.4byte	0
 14256 081a 00000000 		.4byte	0
 14257              	.LLST53:
 14258 081e 00000000 		.4byte	.LVL198
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 292


 14259 0822 08000000 		.4byte	.LVL199
 14260 0826 0100     		.2byte	0x1
 14261 0828 50       		.byte	0x50
 14262 0829 08000000 		.4byte	.LVL199
 14263 082d 14000000 		.4byte	.LFE81
 14264 0831 0400     		.2byte	0x4
 14265 0833 F3       		.byte	0xf3
 14266 0834 01       		.uleb128 0x1
 14267 0835 50       		.byte	0x50
 14268 0836 9F       		.byte	0x9f
 14269 0837 00000000 		.4byte	0
 14270 083b 00000000 		.4byte	0
 14271              	.LLST54:
 14272 083f 00000000 		.4byte	.LVL202
 14273 0843 08000000 		.4byte	.LVL203
 14274 0847 0100     		.2byte	0x1
 14275 0849 50       		.byte	0x50
 14276 084a 08000000 		.4byte	.LVL203
 14277 084e 18000000 		.4byte	.LFE83
 14278 0852 0400     		.2byte	0x4
 14279 0854 F3       		.byte	0xf3
 14280 0855 01       		.uleb128 0x1
 14281 0856 50       		.byte	0x50
 14282 0857 9F       		.byte	0x9f
 14283 0858 00000000 		.4byte	0
 14284 085c 00000000 		.4byte	0
 14285              	.LLST55:
 14286 0860 00000000 		.4byte	.LVL206
 14287 0864 08000000 		.4byte	.LVL207
 14288 0868 0100     		.2byte	0x1
 14289 086a 50       		.byte	0x50
 14290 086b 08000000 		.4byte	.LVL207
 14291 086f 18000000 		.4byte	.LFE85
 14292 0873 0400     		.2byte	0x4
 14293 0875 F3       		.byte	0xf3
 14294 0876 01       		.uleb128 0x1
 14295 0877 50       		.byte	0x50
 14296 0878 9F       		.byte	0x9f
 14297 0879 00000000 		.4byte	0
 14298 087d 00000000 		.4byte	0
 14299              	.LLST56:
 14300 0881 00000000 		.4byte	.LVL210
 14301 0885 08000000 		.4byte	.LVL211
 14302 0889 0100     		.2byte	0x1
 14303 088b 50       		.byte	0x50
 14304 088c 08000000 		.4byte	.LVL211
 14305 0890 18000000 		.4byte	.LFE87
 14306 0894 0400     		.2byte	0x4
 14307 0896 F3       		.byte	0xf3
 14308 0897 01       		.uleb128 0x1
 14309 0898 50       		.byte	0x50
 14310 0899 9F       		.byte	0x9f
 14311 089a 00000000 		.4byte	0
 14312 089e 00000000 		.4byte	0
 14313              	.LLST57:
 14314 08a2 00000000 		.4byte	.LVL214
 14315 08a6 0C000000 		.4byte	.LVL215
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 293


 14316 08aa 0100     		.2byte	0x1
 14317 08ac 50       		.byte	0x50
 14318 08ad 0C000000 		.4byte	.LVL215
 14319 08b1 20000000 		.4byte	.LFE89
 14320 08b5 0400     		.2byte	0x4
 14321 08b7 F3       		.byte	0xf3
 14322 08b8 01       		.uleb128 0x1
 14323 08b9 50       		.byte	0x50
 14324 08ba 9F       		.byte	0x9f
 14325 08bb 00000000 		.4byte	0
 14326 08bf 00000000 		.4byte	0
 14327              	.LLST58:
 14328 08c3 00000000 		.4byte	.LVL227
 14329 08c7 08000000 		.4byte	.LVL228
 14330 08cb 0100     		.2byte	0x1
 14331 08cd 50       		.byte	0x50
 14332 08ce 08000000 		.4byte	.LVL228
 14333 08d2 18000000 		.4byte	.LFE100
 14334 08d6 0400     		.2byte	0x4
 14335 08d8 F3       		.byte	0xf3
 14336 08d9 01       		.uleb128 0x1
 14337 08da 50       		.byte	0x50
 14338 08db 9F       		.byte	0x9f
 14339 08dc 00000000 		.4byte	0
 14340 08e0 00000000 		.4byte	0
 14341              	.LLST59:
 14342 08e4 00000000 		.4byte	.LVL231
 14343 08e8 08000000 		.4byte	.LVL232
 14344 08ec 0100     		.2byte	0x1
 14345 08ee 50       		.byte	0x50
 14346 08ef 08000000 		.4byte	.LVL232
 14347 08f3 18000000 		.4byte	.LFE102
 14348 08f7 0400     		.2byte	0x4
 14349 08f9 F3       		.byte	0xf3
 14350 08fa 01       		.uleb128 0x1
 14351 08fb 50       		.byte	0x50
 14352 08fc 9F       		.byte	0x9f
 14353 08fd 00000000 		.4byte	0
 14354 0901 00000000 		.4byte	0
 14355              	.LLST60:
 14356 0905 00000000 		.4byte	.LVL235
 14357 0909 08000000 		.4byte	.LVL236
 14358 090d 0100     		.2byte	0x1
 14359 090f 50       		.byte	0x50
 14360 0910 08000000 		.4byte	.LVL236
 14361 0914 18000000 		.4byte	.LFE104
 14362 0918 0400     		.2byte	0x4
 14363 091a F3       		.byte	0xf3
 14364 091b 01       		.uleb128 0x1
 14365 091c 50       		.byte	0x50
 14366 091d 9F       		.byte	0x9f
 14367 091e 00000000 		.4byte	0
 14368 0922 00000000 		.4byte	0
 14369              	.LLST61:
 14370 0926 00000000 		.4byte	.LVL239
 14371 092a 08000000 		.4byte	.LVL240
 14372 092e 0100     		.2byte	0x1
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 294


 14373 0930 50       		.byte	0x50
 14374 0931 08000000 		.4byte	.LVL240
 14375 0935 18000000 		.4byte	.LFE106
 14376 0939 0400     		.2byte	0x4
 14377 093b F3       		.byte	0xf3
 14378 093c 01       		.uleb128 0x1
 14379 093d 50       		.byte	0x50
 14380 093e 9F       		.byte	0x9f
 14381 093f 00000000 		.4byte	0
 14382 0943 00000000 		.4byte	0
 14383              	.LLST62:
 14384 0947 00000000 		.4byte	.LVL243
 14385 094b 08000000 		.4byte	.LVL244
 14386 094f 0100     		.2byte	0x1
 14387 0951 50       		.byte	0x50
 14388 0952 08000000 		.4byte	.LVL244
 14389 0956 18000000 		.4byte	.LFE108
 14390 095a 0400     		.2byte	0x4
 14391 095c F3       		.byte	0xf3
 14392 095d 01       		.uleb128 0x1
 14393 095e 50       		.byte	0x50
 14394 095f 9F       		.byte	0x9f
 14395 0960 00000000 		.4byte	0
 14396 0964 00000000 		.4byte	0
 14397              	.LLST63:
 14398 0968 00000000 		.4byte	.LVL247
 14399 096c 08000000 		.4byte	.LVL248
 14400 0970 0100     		.2byte	0x1
 14401 0972 50       		.byte	0x50
 14402 0973 08000000 		.4byte	.LVL248
 14403 0977 18000000 		.4byte	.LFE110
 14404 097b 0400     		.2byte	0x4
 14405 097d F3       		.byte	0xf3
 14406 097e 01       		.uleb128 0x1
 14407 097f 50       		.byte	0x50
 14408 0980 9F       		.byte	0x9f
 14409 0981 00000000 		.4byte	0
 14410 0985 00000000 		.4byte	0
 14411              	.LLST64:
 14412 0989 00000000 		.4byte	.LVL251
 14413 098d 08000000 		.4byte	.LVL252
 14414 0991 0100     		.2byte	0x1
 14415 0993 50       		.byte	0x50
 14416 0994 08000000 		.4byte	.LVL252
 14417 0998 18000000 		.4byte	.LFE112
 14418 099c 0400     		.2byte	0x4
 14419 099e F3       		.byte	0xf3
 14420 099f 01       		.uleb128 0x1
 14421 09a0 50       		.byte	0x50
 14422 09a1 9F       		.byte	0x9f
 14423 09a2 00000000 		.4byte	0
 14424 09a6 00000000 		.4byte	0
 14425              	.LLST65:
 14426 09aa 00000000 		.4byte	.LVL255
 14427 09ae 08000000 		.4byte	.LVL256
 14428 09b2 0100     		.2byte	0x1
 14429 09b4 50       		.byte	0x50
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 295


 14430 09b5 08000000 		.4byte	.LVL256
 14431 09b9 18000000 		.4byte	.LFE114
 14432 09bd 0400     		.2byte	0x4
 14433 09bf F3       		.byte	0xf3
 14434 09c0 01       		.uleb128 0x1
 14435 09c1 50       		.byte	0x50
 14436 09c2 9F       		.byte	0x9f
 14437 09c3 00000000 		.4byte	0
 14438 09c7 00000000 		.4byte	0
 14439              	.LLST66:
 14440 09cb 00000000 		.4byte	.LVL259
 14441 09cf 08000000 		.4byte	.LVL260
 14442 09d3 0100     		.2byte	0x1
 14443 09d5 50       		.byte	0x50
 14444 09d6 08000000 		.4byte	.LVL260
 14445 09da 14000000 		.4byte	.LFE116
 14446 09de 0400     		.2byte	0x4
 14447 09e0 F3       		.byte	0xf3
 14448 09e1 01       		.uleb128 0x1
 14449 09e2 50       		.byte	0x50
 14450 09e3 9F       		.byte	0x9f
 14451 09e4 00000000 		.4byte	0
 14452 09e8 00000000 		.4byte	0
 14453              	.LLST67:
 14454 09ec 00000000 		.4byte	.LVL263
 14455 09f0 08000000 		.4byte	.LVL264
 14456 09f4 0100     		.2byte	0x1
 14457 09f6 50       		.byte	0x50
 14458 09f7 08000000 		.4byte	.LVL264
 14459 09fb 18000000 		.4byte	.LFE118
 14460 09ff 0400     		.2byte	0x4
 14461 0a01 F3       		.byte	0xf3
 14462 0a02 01       		.uleb128 0x1
 14463 0a03 50       		.byte	0x50
 14464 0a04 9F       		.byte	0x9f
 14465 0a05 00000000 		.4byte	0
 14466 0a09 00000000 		.4byte	0
 14467              	.LLST68:
 14468 0a0d 00000000 		.4byte	.LVL267
 14469 0a11 08000000 		.4byte	.LVL268
 14470 0a15 0100     		.2byte	0x1
 14471 0a17 50       		.byte	0x50
 14472 0a18 08000000 		.4byte	.LVL268
 14473 0a1c 18000000 		.4byte	.LFE120
 14474 0a20 0400     		.2byte	0x4
 14475 0a22 F3       		.byte	0xf3
 14476 0a23 01       		.uleb128 0x1
 14477 0a24 50       		.byte	0x50
 14478 0a25 9F       		.byte	0x9f
 14479 0a26 00000000 		.4byte	0
 14480 0a2a 00000000 		.4byte	0
 14481              	.LLST69:
 14482 0a2e 00000000 		.4byte	.LVL271
 14483 0a32 08000000 		.4byte	.LVL272
 14484 0a36 0100     		.2byte	0x1
 14485 0a38 50       		.byte	0x50
 14486 0a39 08000000 		.4byte	.LVL272
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 296


 14487 0a3d 18000000 		.4byte	.LFE122
 14488 0a41 0400     		.2byte	0x4
 14489 0a43 F3       		.byte	0xf3
 14490 0a44 01       		.uleb128 0x1
 14491 0a45 50       		.byte	0x50
 14492 0a46 9F       		.byte	0x9f
 14493 0a47 00000000 		.4byte	0
 14494 0a4b 00000000 		.4byte	0
 14495              	.LLST70:
 14496 0a4f 00000000 		.4byte	.LVL275
 14497 0a53 08000000 		.4byte	.LVL276
 14498 0a57 0100     		.2byte	0x1
 14499 0a59 50       		.byte	0x50
 14500 0a5a 08000000 		.4byte	.LVL276
 14501 0a5e 18000000 		.4byte	.LFE124
 14502 0a62 0400     		.2byte	0x4
 14503 0a64 F3       		.byte	0xf3
 14504 0a65 01       		.uleb128 0x1
 14505 0a66 50       		.byte	0x50
 14506 0a67 9F       		.byte	0x9f
 14507 0a68 00000000 		.4byte	0
 14508 0a6c 00000000 		.4byte	0
 14509              	.LLST71:
 14510 0a70 00000000 		.4byte	.LVL279
 14511 0a74 08000000 		.4byte	.LVL280
 14512 0a78 0100     		.2byte	0x1
 14513 0a7a 50       		.byte	0x50
 14514 0a7b 08000000 		.4byte	.LVL280
 14515 0a7f 18000000 		.4byte	.LFE126
 14516 0a83 0400     		.2byte	0x4
 14517 0a85 F3       		.byte	0xf3
 14518 0a86 01       		.uleb128 0x1
 14519 0a87 50       		.byte	0x50
 14520 0a88 9F       		.byte	0x9f
 14521 0a89 00000000 		.4byte	0
 14522 0a8d 00000000 		.4byte	0
 14523              	.LLST72:
 14524 0a91 00000000 		.4byte	.LVL283
 14525 0a95 08000000 		.4byte	.LVL284
 14526 0a99 0100     		.2byte	0x1
 14527 0a9b 50       		.byte	0x50
 14528 0a9c 08000000 		.4byte	.LVL284
 14529 0aa0 18000000 		.4byte	.LFE128
 14530 0aa4 0400     		.2byte	0x4
 14531 0aa6 F3       		.byte	0xf3
 14532 0aa7 01       		.uleb128 0x1
 14533 0aa8 50       		.byte	0x50
 14534 0aa9 9F       		.byte	0x9f
 14535 0aaa 00000000 		.4byte	0
 14536 0aae 00000000 		.4byte	0
 14537              	.LLST73:
 14538 0ab2 00000000 		.4byte	.LVL288
 14539 0ab6 12000000 		.4byte	.LVL290
 14540 0aba 0100     		.2byte	0x1
 14541 0abc 50       		.byte	0x50
 14542 0abd 12000000 		.4byte	.LVL290
 14543 0ac1 62000000 		.4byte	.LVL294
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 297


 14544 0ac5 0100     		.2byte	0x1
 14545 0ac7 58       		.byte	0x58
 14546 0ac8 62000000 		.4byte	.LVL294
 14547 0acc 6C000000 		.4byte	.LFE131
 14548 0ad0 0400     		.2byte	0x4
 14549 0ad2 F3       		.byte	0xf3
 14550 0ad3 01       		.uleb128 0x1
 14551 0ad4 50       		.byte	0x50
 14552 0ad5 9F       		.byte	0x9f
 14553 0ad6 00000000 		.4byte	0
 14554 0ada 00000000 		.4byte	0
 14555              	.LLST74:
 14556 0ade 00000000 		.4byte	.LVL288
 14557 0ae2 14000000 		.4byte	.LVL291
 14558 0ae6 0100     		.2byte	0x1
 14559 0ae8 51       		.byte	0x51
 14560 0ae9 14000000 		.4byte	.LVL291
 14561 0aed 62000000 		.4byte	.LVL294
 14562 0af1 0100     		.2byte	0x1
 14563 0af3 57       		.byte	0x57
 14564 0af4 62000000 		.4byte	.LVL294
 14565 0af8 6C000000 		.4byte	.LFE131
 14566 0afc 0400     		.2byte	0x4
 14567 0afe F3       		.byte	0xf3
 14568 0aff 01       		.uleb128 0x1
 14569 0b00 51       		.byte	0x51
 14570 0b01 9F       		.byte	0x9f
 14571 0b02 00000000 		.4byte	0
 14572 0b06 00000000 		.4byte	0
 14573              	.LLST75:
 14574 0b0a 00000000 		.4byte	.LVL288
 14575 0b0e 16000000 		.4byte	.LVL292
 14576 0b12 0100     		.2byte	0x1
 14577 0b14 52       		.byte	0x52
 14578 0b15 16000000 		.4byte	.LVL292
 14579 0b19 62000000 		.4byte	.LVL294
 14580 0b1d 0100     		.2byte	0x1
 14581 0b1f 56       		.byte	0x56
 14582 0b20 62000000 		.4byte	.LVL294
 14583 0b24 6C000000 		.4byte	.LFE131
 14584 0b28 0400     		.2byte	0x4
 14585 0b2a F3       		.byte	0xf3
 14586 0b2b 01       		.uleb128 0x1
 14587 0b2c 52       		.byte	0x52
 14588 0b2d 9F       		.byte	0x9f
 14589 0b2e 00000000 		.4byte	0
 14590 0b32 00000000 		.4byte	0
 14591              	.LLST76:
 14592 0b36 00000000 		.4byte	.LVL288
 14593 0b3a 10000000 		.4byte	.LVL289
 14594 0b3e 0100     		.2byte	0x1
 14595 0b40 53       		.byte	0x53
 14596 0b41 10000000 		.4byte	.LVL289
 14597 0b45 62000000 		.4byte	.LVL294
 14598 0b49 0100     		.2byte	0x1
 14599 0b4b 55       		.byte	0x55
 14600 0b4c 62000000 		.4byte	.LVL294
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 298


 14601 0b50 6C000000 		.4byte	.LFE131
 14602 0b54 0400     		.2byte	0x4
 14603 0b56 F3       		.byte	0xf3
 14604 0b57 01       		.uleb128 0x1
 14605 0b58 53       		.byte	0x53
 14606 0b59 9F       		.byte	0x9f
 14607 0b5a 00000000 		.4byte	0
 14608 0b5e 00000000 		.4byte	0
 14609              	.LLST77:
 14610 0b62 00000000 		.4byte	.LVL288
 14611 0b66 62000000 		.4byte	.LVL294
 14612 0b6a 0200     		.2byte	0x2
 14613 0b6c 91       		.byte	0x91
 14614 0b6d 00       		.sleb128 0
 14615 0b6e 62000000 		.4byte	.LVL294
 14616 0b72 6C000000 		.4byte	.LFE131
 14617 0b76 0200     		.2byte	0x2
 14618 0b78 7D       		.byte	0x7d
 14619 0b79 00       		.sleb128 0
 14620 0b7a 00000000 		.4byte	0
 14621 0b7e 00000000 		.4byte	0
 14622              	.LLST78:
 14623 0b82 00000000 		.4byte	.LVL288
 14624 0b86 62000000 		.4byte	.LVL294
 14625 0b8a 0200     		.2byte	0x2
 14626 0b8c 91       		.byte	0x91
 14627 0b8d 04       		.sleb128 4
 14628 0b8e 62000000 		.4byte	.LVL294
 14629 0b92 6C000000 		.4byte	.LFE131
 14630 0b96 0200     		.2byte	0x2
 14631 0b98 7D       		.byte	0x7d
 14632 0b99 04       		.sleb128 4
 14633 0b9a 00000000 		.4byte	0
 14634 0b9e 00000000 		.4byte	0
 14635              	.LLST79:
 14636 0ba2 00000000 		.4byte	.LVL302
 14637 0ba6 10000000 		.4byte	.LVL304
 14638 0baa 0100     		.2byte	0x1
 14639 0bac 50       		.byte	0x50
 14640 0bad 10000000 		.4byte	.LVL304
 14641 0bb1 18000000 		.4byte	.LVL306
 14642 0bb5 0400     		.2byte	0x4
 14643 0bb7 F3       		.byte	0xf3
 14644 0bb8 01       		.uleb128 0x1
 14645 0bb9 50       		.byte	0x50
 14646 0bba 9F       		.byte	0x9f
 14647 0bbb 18000000 		.4byte	.LVL306
 14648 0bbf 20000000 		.4byte	.LFE139
 14649 0bc3 0100     		.2byte	0x1
 14650 0bc5 50       		.byte	0x50
 14651 0bc6 00000000 		.4byte	0
 14652 0bca 00000000 		.4byte	0
 14653              	.LLST80:
 14654 0bce 00000000 		.4byte	.LVL302
 14655 0bd2 0E000000 		.4byte	.LVL303
 14656 0bd6 0100     		.2byte	0x1
 14657 0bd8 51       		.byte	0x51
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 299


 14658 0bd9 0E000000 		.4byte	.LVL303
 14659 0bdd 18000000 		.4byte	.LVL306
 14660 0be1 0400     		.2byte	0x4
 14661 0be3 F3       		.byte	0xf3
 14662 0be4 01       		.uleb128 0x1
 14663 0be5 51       		.byte	0x51
 14664 0be6 9F       		.byte	0x9f
 14665 0be7 18000000 		.4byte	.LVL306
 14666 0beb 20000000 		.4byte	.LFE139
 14667 0bef 0100     		.2byte	0x1
 14668 0bf1 51       		.byte	0x51
 14669 0bf2 00000000 		.4byte	0
 14670 0bf6 00000000 		.4byte	0
 14671              	.LLST81:
 14672 0bfa 00000000 		.4byte	.LVL308
 14673 0bfe 08000000 		.4byte	.LVL309
 14674 0c02 0100     		.2byte	0x1
 14675 0c04 50       		.byte	0x50
 14676 0c05 08000000 		.4byte	.LVL309
 14677 0c09 18000000 		.4byte	.LFE141
 14678 0c0d 0400     		.2byte	0x4
 14679 0c0f F3       		.byte	0xf3
 14680 0c10 01       		.uleb128 0x1
 14681 0c11 50       		.byte	0x50
 14682 0c12 9F       		.byte	0x9f
 14683 0c13 00000000 		.4byte	0
 14684 0c17 00000000 		.4byte	0
 14685              	.LLST82:
 14686 0c1b 00000000 		.4byte	.LVL311
 14687 0c1f 0E000000 		.4byte	.LVL312
 14688 0c23 0100     		.2byte	0x1
 14689 0c25 50       		.byte	0x50
 14690 0c26 0E000000 		.4byte	.LVL312
 14691 0c2a 20000000 		.4byte	.LVL314
 14692 0c2e 0400     		.2byte	0x4
 14693 0c30 F3       		.byte	0xf3
 14694 0c31 01       		.uleb128 0x1
 14695 0c32 50       		.byte	0x50
 14696 0c33 9F       		.byte	0x9f
 14697 0c34 20000000 		.4byte	.LVL314
 14698 0c38 22000000 		.4byte	.LVL315
 14699 0c3c 0100     		.2byte	0x1
 14700 0c3e 50       		.byte	0x50
 14701 0c3f 22000000 		.4byte	.LVL315
 14702 0c43 2C000000 		.4byte	.LFE142
 14703 0c47 0400     		.2byte	0x4
 14704 0c49 F3       		.byte	0xf3
 14705 0c4a 01       		.uleb128 0x1
 14706 0c4b 50       		.byte	0x50
 14707 0c4c 9F       		.byte	0x9f
 14708 0c4d 00000000 		.4byte	0
 14709 0c51 00000000 		.4byte	0
 14710              	.LLST83:
 14711 0c55 00000000 		.4byte	.LVL316
 14712 0c59 0A000000 		.4byte	.LVL318
 14713 0c5d 0100     		.2byte	0x1
 14714 0c5f 50       		.byte	0x50
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 300


 14715 0c60 0A000000 		.4byte	.LVL318
 14716 0c64 18000000 		.4byte	.LFE143
 14717 0c68 0400     		.2byte	0x4
 14718 0c6a F3       		.byte	0xf3
 14719 0c6b 01       		.uleb128 0x1
 14720 0c6c 50       		.byte	0x50
 14721 0c6d 9F       		.byte	0x9f
 14722 0c6e 00000000 		.4byte	0
 14723 0c72 00000000 		.4byte	0
 14724              	.LLST84:
 14725 0c76 00000000 		.4byte	.LVL316
 14726 0c7a 08000000 		.4byte	.LVL317
 14727 0c7e 0100     		.2byte	0x1
 14728 0c80 51       		.byte	0x51
 14729 0c81 08000000 		.4byte	.LVL317
 14730 0c85 18000000 		.4byte	.LFE143
 14731 0c89 0400     		.2byte	0x4
 14732 0c8b F3       		.byte	0xf3
 14733 0c8c 01       		.uleb128 0x1
 14734 0c8d 51       		.byte	0x51
 14735 0c8e 9F       		.byte	0x9f
 14736 0c8f 00000000 		.4byte	0
 14737 0c93 00000000 		.4byte	0
 14738              	.LLST85:
 14739 0c97 00000000 		.4byte	.LVL324
 14740 0c9b 0C000000 		.4byte	.LVL325
 14741 0c9f 0100     		.2byte	0x1
 14742 0ca1 50       		.byte	0x50
 14743 0ca2 0C000000 		.4byte	.LVL325
 14744 0ca6 20000000 		.4byte	.LFE148
 14745 0caa 0400     		.2byte	0x4
 14746 0cac F3       		.byte	0xf3
 14747 0cad 01       		.uleb128 0x1
 14748 0cae 50       		.byte	0x50
 14749 0caf 9F       		.byte	0x9f
 14750 0cb0 00000000 		.4byte	0
 14751 0cb4 00000000 		.4byte	0
 14752              	.LLST86:
 14753 0cb8 00000000 		.4byte	.LVL328
 14754 0cbc 0C000000 		.4byte	.LVL329
 14755 0cc0 0100     		.2byte	0x1
 14756 0cc2 50       		.byte	0x50
 14757 0cc3 0C000000 		.4byte	.LVL329
 14758 0cc7 20000000 		.4byte	.LFE150
 14759 0ccb 0400     		.2byte	0x4
 14760 0ccd F3       		.byte	0xf3
 14761 0cce 01       		.uleb128 0x1
 14762 0ccf 50       		.byte	0x50
 14763 0cd0 9F       		.byte	0x9f
 14764 0cd1 00000000 		.4byte	0
 14765 0cd5 00000000 		.4byte	0
 14766              	.LLST87:
 14767 0cd9 00000000 		.4byte	.LVL332
 14768 0cdd 0C000000 		.4byte	.LVL333
 14769 0ce1 0100     		.2byte	0x1
 14770 0ce3 50       		.byte	0x50
 14771 0ce4 0C000000 		.4byte	.LVL333
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 301


 14772 0ce8 20000000 		.4byte	.LFE152
 14773 0cec 0400     		.2byte	0x4
 14774 0cee F3       		.byte	0xf3
 14775 0cef 01       		.uleb128 0x1
 14776 0cf0 50       		.byte	0x50
 14777 0cf1 9F       		.byte	0x9f
 14778 0cf2 00000000 		.4byte	0
 14779 0cf6 00000000 		.4byte	0
 14780              	.LLST88:
 14781 0cfa 00000000 		.4byte	.LVL339
 14782 0cfe 08000000 		.4byte	.LVL340
 14783 0d02 0100     		.2byte	0x1
 14784 0d04 50       		.byte	0x50
 14785 0d05 08000000 		.4byte	.LVL340
 14786 0d09 18000000 		.4byte	.LFE157
 14787 0d0d 0400     		.2byte	0x4
 14788 0d0f F3       		.byte	0xf3
 14789 0d10 01       		.uleb128 0x1
 14790 0d11 50       		.byte	0x50
 14791 0d12 9F       		.byte	0x9f
 14792 0d13 00000000 		.4byte	0
 14793 0d17 00000000 		.4byte	0
 14794              	.LLST89:
 14795 0d1b 00000000 		.4byte	.LVL343
 14796 0d1f 08000000 		.4byte	.LVL344
 14797 0d23 0100     		.2byte	0x1
 14798 0d25 50       		.byte	0x50
 14799 0d26 08000000 		.4byte	.LVL344
 14800 0d2a 18000000 		.4byte	.LFE159
 14801 0d2e 0400     		.2byte	0x4
 14802 0d30 F3       		.byte	0xf3
 14803 0d31 01       		.uleb128 0x1
 14804 0d32 50       		.byte	0x50
 14805 0d33 9F       		.byte	0x9f
 14806 0d34 00000000 		.4byte	0
 14807 0d38 00000000 		.4byte	0
 14808              	.LLST90:
 14809 0d3c 00000000 		.4byte	.LVL347
 14810 0d40 0A000000 		.4byte	.LVL348
 14811 0d44 0100     		.2byte	0x1
 14812 0d46 50       		.byte	0x50
 14813 0d47 0A000000 		.4byte	.LVL348
 14814 0d4b 18000000 		.4byte	.LFE161
 14815 0d4f 0400     		.2byte	0x4
 14816 0d51 F3       		.byte	0xf3
 14817 0d52 01       		.uleb128 0x1
 14818 0d53 50       		.byte	0x50
 14819 0d54 9F       		.byte	0x9f
 14820 0d55 00000000 		.4byte	0
 14821 0d59 00000000 		.4byte	0
 14822              	.LLST91:
 14823 0d5d 00000000 		.4byte	.LVL351
 14824 0d61 0C000000 		.4byte	.LVL352
 14825 0d65 0100     		.2byte	0x1
 14826 0d67 50       		.byte	0x50
 14827 0d68 0C000000 		.4byte	.LVL352
 14828 0d6c 20000000 		.4byte	.LFE163
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 302


 14829 0d70 0400     		.2byte	0x4
 14830 0d72 F3       		.byte	0xf3
 14831 0d73 01       		.uleb128 0x1
 14832 0d74 50       		.byte	0x50
 14833 0d75 9F       		.byte	0x9f
 14834 0d76 00000000 		.4byte	0
 14835 0d7a 00000000 		.4byte	0
 14836              	.LLST92:
 14837 0d7e 00000000 		.4byte	.LVL360
 14838 0d82 0C000000 		.4byte	.LVL361
 14839 0d86 0100     		.2byte	0x1
 14840 0d88 50       		.byte	0x50
 14841 0d89 0C000000 		.4byte	.LVL361
 14842 0d8d 20000000 		.4byte	.LFE165
 14843 0d91 0400     		.2byte	0x4
 14844 0d93 F3       		.byte	0xf3
 14845 0d94 01       		.uleb128 0x1
 14846 0d95 50       		.byte	0x50
 14847 0d96 9F       		.byte	0x9f
 14848 0d97 00000000 		.4byte	0
 14849 0d9b 00000000 		.4byte	0
 14850              	.LLST93:
 14851 0d9f 00000000 		.4byte	.LVL364
 14852 0da3 08000000 		.4byte	.LVL365
 14853 0da7 0100     		.2byte	0x1
 14854 0da9 50       		.byte	0x50
 14855 0daa 08000000 		.4byte	.LVL365
 14856 0dae 18000000 		.4byte	.LFE167
 14857 0db2 0400     		.2byte	0x4
 14858 0db4 F3       		.byte	0xf3
 14859 0db5 01       		.uleb128 0x1
 14860 0db6 50       		.byte	0x50
 14861 0db7 9F       		.byte	0x9f
 14862 0db8 00000000 		.4byte	0
 14863 0dbc 00000000 		.4byte	0
 14864              	.LLST94:
 14865 0dc0 00000000 		.4byte	.LVL368
 14866 0dc4 08000000 		.4byte	.LVL369
 14867 0dc8 0100     		.2byte	0x1
 14868 0dca 50       		.byte	0x50
 14869 0dcb 08000000 		.4byte	.LVL369
 14870 0dcf 18000000 		.4byte	.LFE169
 14871 0dd3 0400     		.2byte	0x4
 14872 0dd5 F3       		.byte	0xf3
 14873 0dd6 01       		.uleb128 0x1
 14874 0dd7 50       		.byte	0x50
 14875 0dd8 9F       		.byte	0x9f
 14876 0dd9 00000000 		.4byte	0
 14877 0ddd 00000000 		.4byte	0
 14878              	.LLST95:
 14879 0de1 00000000 		.4byte	.LVL372
 14880 0de5 08000000 		.4byte	.LVL373
 14881 0de9 0100     		.2byte	0x1
 14882 0deb 50       		.byte	0x50
 14883 0dec 08000000 		.4byte	.LVL373
 14884 0df0 18000000 		.4byte	.LFE171
 14885 0df4 0400     		.2byte	0x4
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 303


 14886 0df6 F3       		.byte	0xf3
 14887 0df7 01       		.uleb128 0x1
 14888 0df8 50       		.byte	0x50
 14889 0df9 9F       		.byte	0x9f
 14890 0dfa 00000000 		.4byte	0
 14891 0dfe 00000000 		.4byte	0
 14892              	.LLST96:
 14893 0e02 00000000 		.4byte	.LVL376
 14894 0e06 08000000 		.4byte	.LVL377
 14895 0e0a 0100     		.2byte	0x1
 14896 0e0c 50       		.byte	0x50
 14897 0e0d 08000000 		.4byte	.LVL377
 14898 0e11 18000000 		.4byte	.LFE173
 14899 0e15 0400     		.2byte	0x4
 14900 0e17 F3       		.byte	0xf3
 14901 0e18 01       		.uleb128 0x1
 14902 0e19 50       		.byte	0x50
 14903 0e1a 9F       		.byte	0x9f
 14904 0e1b 00000000 		.4byte	0
 14905 0e1f 00000000 		.4byte	0
 14906              	.LLST97:
 14907 0e23 00000000 		.4byte	.LVL380
 14908 0e27 08000000 		.4byte	.LVL381
 14909 0e2b 0100     		.2byte	0x1
 14910 0e2d 50       		.byte	0x50
 14911 0e2e 08000000 		.4byte	.LVL381
 14912 0e32 18000000 		.4byte	.LFE175
 14913 0e36 0400     		.2byte	0x4
 14914 0e38 F3       		.byte	0xf3
 14915 0e39 01       		.uleb128 0x1
 14916 0e3a 50       		.byte	0x50
 14917 0e3b 9F       		.byte	0x9f
 14918 0e3c 00000000 		.4byte	0
 14919 0e40 00000000 		.4byte	0
 14920              	.LLST98:
 14921 0e44 00000000 		.4byte	.LVL384
 14922 0e48 08000000 		.4byte	.LVL385
 14923 0e4c 0100     		.2byte	0x1
 14924 0e4e 50       		.byte	0x50
 14925 0e4f 08000000 		.4byte	.LVL385
 14926 0e53 18000000 		.4byte	.LFE177
 14927 0e57 0400     		.2byte	0x4
 14928 0e59 F3       		.byte	0xf3
 14929 0e5a 01       		.uleb128 0x1
 14930 0e5b 50       		.byte	0x50
 14931 0e5c 9F       		.byte	0x9f
 14932 0e5d 00000000 		.4byte	0
 14933 0e61 00000000 		.4byte	0
 14934              	.LLST99:
 14935 0e65 00000000 		.4byte	.LVL391
 14936 0e69 0C000000 		.4byte	.LVL392
 14937 0e6d 0100     		.2byte	0x1
 14938 0e6f 50       		.byte	0x50
 14939 0e70 0C000000 		.4byte	.LVL392
 14940 0e74 20000000 		.4byte	.LFE180
 14941 0e78 0400     		.2byte	0x4
 14942 0e7a F3       		.byte	0xf3
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 304


 14943 0e7b 01       		.uleb128 0x1
 14944 0e7c 50       		.byte	0x50
 14945 0e7d 9F       		.byte	0x9f
 14946 0e7e 00000000 		.4byte	0
 14947 0e82 00000000 		.4byte	0
 14948              		.section	.debug_aranges,"",%progbits
 14949 0000 BC050000 		.4byte	0x5bc
 14950 0004 0200     		.2byte	0x2
 14951 0006 00000000 		.4byte	.Ldebug_info0
 14952 000a 04       		.byte	0x4
 14953 000b 00       		.byte	0
 14954 000c 0000     		.2byte	0
 14955 000e 0000     		.2byte	0
 14956 0010 00000000 		.4byte	.LFB0
 14957 0014 0C000000 		.4byte	.LFE0-.LFB0
 14958 0018 00000000 		.4byte	.LFB1
 14959 001c 0C000000 		.4byte	.LFE1-.LFB1
 14960 0020 00000000 		.4byte	.LFB4
 14961 0024 20000000 		.4byte	.LFE4-.LFB4
 14962 0028 00000000 		.4byte	.LFB5
 14963 002c 18000000 		.4byte	.LFE5-.LFB5
 14964 0030 00000000 		.4byte	.LFB6
 14965 0034 1C000000 		.4byte	.LFE6-.LFB6
 14966 0038 00000000 		.4byte	.LFB7
 14967 003c 14000000 		.4byte	.LFE7-.LFB7
 14968 0040 00000000 		.4byte	.LFB8
 14969 0044 24000000 		.4byte	.LFE8-.LFB8
 14970 0048 00000000 		.4byte	.LFB9
 14971 004c 20000000 		.4byte	.LFE9-.LFB9
 14972 0050 00000000 		.4byte	.LFB10
 14973 0054 24000000 		.4byte	.LFE10-.LFB10
 14974 0058 00000000 		.4byte	.LFB11
 14975 005c 20000000 		.4byte	.LFE11-.LFB11
 14976 0060 00000000 		.4byte	.LFB12
 14977 0064 20000000 		.4byte	.LFE12-.LFB12
 14978 0068 00000000 		.4byte	.LFB13
 14979 006c 24000000 		.4byte	.LFE13-.LFB13
 14980 0070 00000000 		.4byte	.LFB14
 14981 0074 20000000 		.4byte	.LFE14-.LFB14
 14982 0078 00000000 		.4byte	.LFB15
 14983 007c 24000000 		.4byte	.LFE15-.LFB15
 14984 0080 00000000 		.4byte	.LFB16
 14985 0084 18000000 		.4byte	.LFE16-.LFB16
 14986 0088 00000000 		.4byte	.LFB17
 14987 008c 24000000 		.4byte	.LFE17-.LFB17
 14988 0090 00000000 		.4byte	.LFB18
 14989 0094 18000000 		.4byte	.LFE18-.LFB18
 14990 0098 00000000 		.4byte	.LFB19
 14991 009c 24000000 		.4byte	.LFE19-.LFB19
 14992 00a0 00000000 		.4byte	.LFB20
 14993 00a4 18000000 		.4byte	.LFE20-.LFB20
 14994 00a8 00000000 		.4byte	.LFB21
 14995 00ac 24000000 		.4byte	.LFE21-.LFB21
 14996 00b0 00000000 		.4byte	.LFB22
 14997 00b4 20000000 		.4byte	.LFE22-.LFB22
 14998 00b8 00000000 		.4byte	.LFB23
 14999 00bc 24000000 		.4byte	.LFE23-.LFB23
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 305


 15000 00c0 00000000 		.4byte	.LFB24
 15001 00c4 20000000 		.4byte	.LFE24-.LFB24
 15002 00c8 00000000 		.4byte	.LFB25
 15003 00cc 1C000000 		.4byte	.LFE25-.LFB25
 15004 00d0 00000000 		.4byte	.LFB26
 15005 00d4 14000000 		.4byte	.LFE26-.LFB26
 15006 00d8 00000000 		.4byte	.LFB27
 15007 00dc 1C000000 		.4byte	.LFE27-.LFB27
 15008 00e0 00000000 		.4byte	.LFB28
 15009 00e4 14000000 		.4byte	.LFE28-.LFB28
 15010 00e8 00000000 		.4byte	.LFB29
 15011 00ec 1C000000 		.4byte	.LFE29-.LFB29
 15012 00f0 00000000 		.4byte	.LFB30
 15013 00f4 14000000 		.4byte	.LFE30-.LFB30
 15014 00f8 00000000 		.4byte	.LFB31
 15015 00fc 1C000000 		.4byte	.LFE31-.LFB31
 15016 0100 00000000 		.4byte	.LFB32
 15017 0104 14000000 		.4byte	.LFE32-.LFB32
 15018 0108 00000000 		.4byte	.LFB33
 15019 010c 1C000000 		.4byte	.LFE33-.LFB33
 15020 0110 00000000 		.4byte	.LFB34
 15021 0114 14000000 		.4byte	.LFE34-.LFB34
 15022 0118 00000000 		.4byte	.LFB35
 15023 011c 1C000000 		.4byte	.LFE35-.LFB35
 15024 0120 00000000 		.4byte	.LFB36
 15025 0124 14000000 		.4byte	.LFE36-.LFB36
 15026 0128 00000000 		.4byte	.LFB37
 15027 012c 24000000 		.4byte	.LFE37-.LFB37
 15028 0130 00000000 		.4byte	.LFB38
 15029 0134 18000000 		.4byte	.LFE38-.LFB38
 15030 0138 00000000 		.4byte	.LFB39
 15031 013c 24000000 		.4byte	.LFE39-.LFB39
 15032 0140 00000000 		.4byte	.LFB40
 15033 0144 18000000 		.4byte	.LFE40-.LFB40
 15034 0148 00000000 		.4byte	.LFB41
 15035 014c 24000000 		.4byte	.LFE41-.LFB41
 15036 0150 00000000 		.4byte	.LFB42
 15037 0154 18000000 		.4byte	.LFE42-.LFB42
 15038 0158 00000000 		.4byte	.LFB43
 15039 015c 24000000 		.4byte	.LFE43-.LFB43
 15040 0160 00000000 		.4byte	.LFB44
 15041 0164 18000000 		.4byte	.LFE44-.LFB44
 15042 0168 00000000 		.4byte	.LFB45
 15043 016c 24000000 		.4byte	.LFE45-.LFB45
 15044 0170 00000000 		.4byte	.LFB46
 15045 0174 18000000 		.4byte	.LFE46-.LFB46
 15046 0178 00000000 		.4byte	.LFB47
 15047 017c 24000000 		.4byte	.LFE47-.LFB47
 15048 0180 00000000 		.4byte	.LFB48
 15049 0184 18000000 		.4byte	.LFE48-.LFB48
 15050 0188 00000000 		.4byte	.LFB49
 15051 018c 24000000 		.4byte	.LFE49-.LFB49
 15052 0190 00000000 		.4byte	.LFB50
 15053 0194 18000000 		.4byte	.LFE50-.LFB50
 15054 0198 00000000 		.4byte	.LFB51
 15055 019c 24000000 		.4byte	.LFE51-.LFB51
 15056 01a0 00000000 		.4byte	.LFB52
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 306


 15057 01a4 18000000 		.4byte	.LFE52-.LFB52
 15058 01a8 00000000 		.4byte	.LFB53
 15059 01ac 24000000 		.4byte	.LFE53-.LFB53
 15060 01b0 00000000 		.4byte	.LFB54
 15061 01b4 18000000 		.4byte	.LFE54-.LFB54
 15062 01b8 00000000 		.4byte	.LFB55
 15063 01bc 24000000 		.4byte	.LFE55-.LFB55
 15064 01c0 00000000 		.4byte	.LFB56
 15065 01c4 18000000 		.4byte	.LFE56-.LFB56
 15066 01c8 00000000 		.4byte	.LFB57
 15067 01cc 24000000 		.4byte	.LFE57-.LFB57
 15068 01d0 00000000 		.4byte	.LFB58
 15069 01d4 18000000 		.4byte	.LFE58-.LFB58
 15070 01d8 00000000 		.4byte	.LFB59
 15071 01dc 24000000 		.4byte	.LFE59-.LFB59
 15072 01e0 00000000 		.4byte	.LFB60
 15073 01e4 18000000 		.4byte	.LFE60-.LFB60
 15074 01e8 00000000 		.4byte	.LFB61
 15075 01ec 24000000 		.4byte	.LFE61-.LFB61
 15076 01f0 00000000 		.4byte	.LFB62
 15077 01f4 20000000 		.4byte	.LFE62-.LFB62
 15078 01f8 00000000 		.4byte	.LFB63
 15079 01fc 2C000000 		.4byte	.LFE63-.LFB63
 15080 0200 00000000 		.4byte	.LFB64
 15081 0204 24000000 		.4byte	.LFE64-.LFB64
 15082 0208 00000000 		.4byte	.LFB65
 15083 020c 2C000000 		.4byte	.LFE65-.LFB65
 15084 0210 00000000 		.4byte	.LFB66
 15085 0214 24000000 		.4byte	.LFE66-.LFB66
 15086 0218 00000000 		.4byte	.LFB67
 15087 021c 34000000 		.4byte	.LFE67-.LFB67
 15088 0220 00000000 		.4byte	.LFB68
 15089 0224 24000000 		.4byte	.LFE68-.LFB68
 15090 0228 00000000 		.4byte	.LFB69
 15091 022c 34000000 		.4byte	.LFE69-.LFB69
 15092 0230 00000000 		.4byte	.LFB70
 15093 0234 24000000 		.4byte	.LFE70-.LFB70
 15094 0238 00000000 		.4byte	.LFB71
 15095 023c 34000000 		.4byte	.LFE71-.LFB71
 15096 0240 00000000 		.4byte	.LFB72
 15097 0244 24000000 		.4byte	.LFE72-.LFB72
 15098 0248 00000000 		.4byte	.LFB73
 15099 024c 34000000 		.4byte	.LFE73-.LFB73
 15100 0250 00000000 		.4byte	.LFB74
 15101 0254 24000000 		.4byte	.LFE74-.LFB74
 15102 0258 00000000 		.4byte	.LFB75
 15103 025c 38000000 		.4byte	.LFE75-.LFB75
 15104 0260 00000000 		.4byte	.LFB76
 15105 0264 2C000000 		.4byte	.LFE76-.LFB76
 15106 0268 00000000 		.4byte	.LFB77
 15107 026c 1C000000 		.4byte	.LFE77-.LFB77
 15108 0270 00000000 		.4byte	.LFB78
 15109 0274 14000000 		.4byte	.LFE78-.LFB78
 15110 0278 00000000 		.4byte	.LFB79
 15111 027c 1C000000 		.4byte	.LFE79-.LFB79
 15112 0280 00000000 		.4byte	.LFB80
 15113 0284 14000000 		.4byte	.LFE80-.LFB80
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 307


 15114 0288 00000000 		.4byte	.LFB81
 15115 028c 14000000 		.4byte	.LFE81-.LFB81
 15116 0290 00000000 		.4byte	.LFB82
 15117 0294 24000000 		.4byte	.LFE82-.LFB82
 15118 0298 00000000 		.4byte	.LFB83
 15119 029c 18000000 		.4byte	.LFE83-.LFB83
 15120 02a0 00000000 		.4byte	.LFB84
 15121 02a4 24000000 		.4byte	.LFE84-.LFB84
 15122 02a8 00000000 		.4byte	.LFB85
 15123 02ac 18000000 		.4byte	.LFE85-.LFB85
 15124 02b0 00000000 		.4byte	.LFB86
 15125 02b4 24000000 		.4byte	.LFE86-.LFB86
 15126 02b8 00000000 		.4byte	.LFB87
 15127 02bc 18000000 		.4byte	.LFE87-.LFB87
 15128 02c0 00000000 		.4byte	.LFB88
 15129 02c4 24000000 		.4byte	.LFE88-.LFB88
 15130 02c8 00000000 		.4byte	.LFB89
 15131 02cc 20000000 		.4byte	.LFE89-.LFB89
 15132 02d0 00000000 		.4byte	.LFB90
 15133 02d4 1C000000 		.4byte	.LFE90-.LFB90
 15134 02d8 00000000 		.4byte	.LFB91
 15135 02dc 24000000 		.4byte	.LFE91-.LFB91
 15136 02e0 00000000 		.4byte	.LFB92
 15137 02e4 24000000 		.4byte	.LFE92-.LFB92
 15138 02e8 00000000 		.4byte	.LFB93
 15139 02ec 24000000 		.4byte	.LFE93-.LFB93
 15140 02f0 00000000 		.4byte	.LFB94
 15141 02f4 24000000 		.4byte	.LFE94-.LFB94
 15142 02f8 00000000 		.4byte	.LFB95
 15143 02fc 24000000 		.4byte	.LFE95-.LFB95
 15144 0300 00000000 		.4byte	.LFB96
 15145 0304 24000000 		.4byte	.LFE96-.LFB96
 15146 0308 00000000 		.4byte	.LFB97
 15147 030c 24000000 		.4byte	.LFE97-.LFB97
 15148 0310 00000000 		.4byte	.LFB98
 15149 0314 24000000 		.4byte	.LFE98-.LFB98
 15150 0318 00000000 		.4byte	.LFB99
 15151 031c 24000000 		.4byte	.LFE99-.LFB99
 15152 0320 00000000 		.4byte	.LFB100
 15153 0324 18000000 		.4byte	.LFE100-.LFB100
 15154 0328 00000000 		.4byte	.LFB101
 15155 032c 24000000 		.4byte	.LFE101-.LFB101
 15156 0330 00000000 		.4byte	.LFB102
 15157 0334 18000000 		.4byte	.LFE102-.LFB102
 15158 0338 00000000 		.4byte	.LFB103
 15159 033c 24000000 		.4byte	.LFE103-.LFB103
 15160 0340 00000000 		.4byte	.LFB104
 15161 0344 18000000 		.4byte	.LFE104-.LFB104
 15162 0348 00000000 		.4byte	.LFB105
 15163 034c 24000000 		.4byte	.LFE105-.LFB105
 15164 0350 00000000 		.4byte	.LFB106
 15165 0354 18000000 		.4byte	.LFE106-.LFB106
 15166 0358 00000000 		.4byte	.LFB107
 15167 035c 24000000 		.4byte	.LFE107-.LFB107
 15168 0360 00000000 		.4byte	.LFB108
 15169 0364 18000000 		.4byte	.LFE108-.LFB108
 15170 0368 00000000 		.4byte	.LFB109
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 308


 15171 036c 24000000 		.4byte	.LFE109-.LFB109
 15172 0370 00000000 		.4byte	.LFB110
 15173 0374 18000000 		.4byte	.LFE110-.LFB110
 15174 0378 00000000 		.4byte	.LFB111
 15175 037c 24000000 		.4byte	.LFE111-.LFB111
 15176 0380 00000000 		.4byte	.LFB112
 15177 0384 18000000 		.4byte	.LFE112-.LFB112
 15178 0388 00000000 		.4byte	.LFB113
 15179 038c 24000000 		.4byte	.LFE113-.LFB113
 15180 0390 00000000 		.4byte	.LFB114
 15181 0394 18000000 		.4byte	.LFE114-.LFB114
 15182 0398 00000000 		.4byte	.LFB115
 15183 039c 1C000000 		.4byte	.LFE115-.LFB115
 15184 03a0 00000000 		.4byte	.LFB116
 15185 03a4 14000000 		.4byte	.LFE116-.LFB116
 15186 03a8 00000000 		.4byte	.LFB117
 15187 03ac 24000000 		.4byte	.LFE117-.LFB117
 15188 03b0 00000000 		.4byte	.LFB118
 15189 03b4 18000000 		.4byte	.LFE118-.LFB118
 15190 03b8 00000000 		.4byte	.LFB119
 15191 03bc 24000000 		.4byte	.LFE119-.LFB119
 15192 03c0 00000000 		.4byte	.LFB120
 15193 03c4 18000000 		.4byte	.LFE120-.LFB120
 15194 03c8 00000000 		.4byte	.LFB121
 15195 03cc 24000000 		.4byte	.LFE121-.LFB121
 15196 03d0 00000000 		.4byte	.LFB122
 15197 03d4 18000000 		.4byte	.LFE122-.LFB122
 15198 03d8 00000000 		.4byte	.LFB123
 15199 03dc 24000000 		.4byte	.LFE123-.LFB123
 15200 03e0 00000000 		.4byte	.LFB124
 15201 03e4 18000000 		.4byte	.LFE124-.LFB124
 15202 03e8 00000000 		.4byte	.LFB125
 15203 03ec 24000000 		.4byte	.LFE125-.LFB125
 15204 03f0 00000000 		.4byte	.LFB126
 15205 03f4 18000000 		.4byte	.LFE126-.LFB126
 15206 03f8 00000000 		.4byte	.LFB127
 15207 03fc 24000000 		.4byte	.LFE127-.LFB127
 15208 0400 00000000 		.4byte	.LFB128
 15209 0404 18000000 		.4byte	.LFE128-.LFB128
 15210 0408 00000000 		.4byte	.LFB129
 15211 040c 1C000000 		.4byte	.LFE129-.LFB129
 15212 0410 00000000 		.4byte	.LFB130
 15213 0414 24000000 		.4byte	.LFE130-.LFB130
 15214 0418 00000000 		.4byte	.LFB131
 15215 041c 6C000000 		.4byte	.LFE131-.LFB131
 15216 0420 00000000 		.4byte	.LFB132
 15217 0424 24000000 		.4byte	.LFE132-.LFB132
 15218 0428 00000000 		.4byte	.LFB133
 15219 042c 24000000 		.4byte	.LFE133-.LFB133
 15220 0430 00000000 		.4byte	.LFB134
 15221 0434 24000000 		.4byte	.LFE134-.LFB134
 15222 0438 00000000 		.4byte	.LFB135
 15223 043c 24000000 		.4byte	.LFE135-.LFB135
 15224 0440 00000000 		.4byte	.LFB136
 15225 0444 24000000 		.4byte	.LFE136-.LFB136
 15226 0448 00000000 		.4byte	.LFB137
 15227 044c 24000000 		.4byte	.LFE137-.LFB137
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 309


 15228 0450 00000000 		.4byte	.LFB138
 15229 0454 24000000 		.4byte	.LFE138-.LFB138
 15230 0458 00000000 		.4byte	.LFB139
 15231 045c 20000000 		.4byte	.LFE139-.LFB139
 15232 0460 00000000 		.4byte	.LFB140
 15233 0464 24000000 		.4byte	.LFE140-.LFB140
 15234 0468 00000000 		.4byte	.LFB141
 15235 046c 18000000 		.4byte	.LFE141-.LFB141
 15236 0470 00000000 		.4byte	.LFB142
 15237 0474 2C000000 		.4byte	.LFE142-.LFB142
 15238 0478 00000000 		.4byte	.LFB143
 15239 047c 18000000 		.4byte	.LFE143-.LFB143
 15240 0480 00000000 		.4byte	.LFB144
 15241 0484 18000000 		.4byte	.LFE144-.LFB144
 15242 0488 00000000 		.4byte	.LFB145
 15243 048c 18000000 		.4byte	.LFE145-.LFB145
 15244 0490 00000000 		.4byte	.LFB146
 15245 0494 18000000 		.4byte	.LFE146-.LFB146
 15246 0498 00000000 		.4byte	.LFB147
 15247 049c 24000000 		.4byte	.LFE147-.LFB147
 15248 04a0 00000000 		.4byte	.LFB148
 15249 04a4 20000000 		.4byte	.LFE148-.LFB148
 15250 04a8 00000000 		.4byte	.LFB149
 15251 04ac 24000000 		.4byte	.LFE149-.LFB149
 15252 04b0 00000000 		.4byte	.LFB150
 15253 04b4 20000000 		.4byte	.LFE150-.LFB150
 15254 04b8 00000000 		.4byte	.LFB151
 15255 04bc 24000000 		.4byte	.LFE151-.LFB151
 15256 04c0 00000000 		.4byte	.LFB152
 15257 04c4 20000000 		.4byte	.LFE152-.LFB152
 15258 04c8 00000000 		.4byte	.LFB153
 15259 04cc 18000000 		.4byte	.LFE153-.LFB153
 15260 04d0 00000000 		.4byte	.LFB154
 15261 04d4 18000000 		.4byte	.LFE154-.LFB154
 15262 04d8 00000000 		.4byte	.LFB155
 15263 04dc 18000000 		.4byte	.LFE155-.LFB155
 15264 04e0 00000000 		.4byte	.LFB156
 15265 04e4 24000000 		.4byte	.LFE156-.LFB156
 15266 04e8 00000000 		.4byte	.LFB157
 15267 04ec 18000000 		.4byte	.LFE157-.LFB157
 15268 04f0 00000000 		.4byte	.LFB158
 15269 04f4 24000000 		.4byte	.LFE158-.LFB158
 15270 04f8 00000000 		.4byte	.LFB159
 15271 04fc 18000000 		.4byte	.LFE159-.LFB159
 15272 0500 00000000 		.4byte	.LFB160
 15273 0504 24000000 		.4byte	.LFE160-.LFB160
 15274 0508 00000000 		.4byte	.LFB161
 15275 050c 18000000 		.4byte	.LFE161-.LFB161
 15276 0510 00000000 		.4byte	.LFB162
 15277 0514 24000000 		.4byte	.LFE162-.LFB162
 15278 0518 00000000 		.4byte	.LFB163
 15279 051c 20000000 		.4byte	.LFE163-.LFB163
 15280 0520 00000000 		.4byte	.LFB2
 15281 0524 2C000000 		.4byte	.LFE2-.LFB2
 15282 0528 00000000 		.4byte	.LFB164
 15283 052c 24000000 		.4byte	.LFE164-.LFB164
 15284 0530 00000000 		.4byte	.LFB165
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 310


 15285 0534 20000000 		.4byte	.LFE165-.LFB165
 15286 0538 00000000 		.4byte	.LFB166
 15287 053c 24000000 		.4byte	.LFE166-.LFB166
 15288 0540 00000000 		.4byte	.LFB167
 15289 0544 18000000 		.4byte	.LFE167-.LFB167
 15290 0548 00000000 		.4byte	.LFB168
 15291 054c 24000000 		.4byte	.LFE168-.LFB168
 15292 0550 00000000 		.4byte	.LFB169
 15293 0554 18000000 		.4byte	.LFE169-.LFB169
 15294 0558 00000000 		.4byte	.LFB170
 15295 055c 24000000 		.4byte	.LFE170-.LFB170
 15296 0560 00000000 		.4byte	.LFB171
 15297 0564 18000000 		.4byte	.LFE171-.LFB171
 15298 0568 00000000 		.4byte	.LFB172
 15299 056c 24000000 		.4byte	.LFE172-.LFB172
 15300 0570 00000000 		.4byte	.LFB173
 15301 0574 18000000 		.4byte	.LFE173-.LFB173
 15302 0578 00000000 		.4byte	.LFB174
 15303 057c 24000000 		.4byte	.LFE174-.LFB174
 15304 0580 00000000 		.4byte	.LFB175
 15305 0584 18000000 		.4byte	.LFE175-.LFB175
 15306 0588 00000000 		.4byte	.LFB176
 15307 058c 24000000 		.4byte	.LFE176-.LFB176
 15308 0590 00000000 		.4byte	.LFB177
 15309 0594 18000000 		.4byte	.LFE177-.LFB177
 15310 0598 00000000 		.4byte	.LFB178
 15311 059c 10000000 		.4byte	.LFE178-.LFB178
 15312 05a0 00000000 		.4byte	.LFB179
 15313 05a4 24000000 		.4byte	.LFE179-.LFB179
 15314 05a8 00000000 		.4byte	.LFB3
 15315 05ac 10000000 		.4byte	.LFE3-.LFB3
 15316 05b0 00000000 		.4byte	.LFB180
 15317 05b4 20000000 		.4byte	.LFE180-.LFB180
 15318 05b8 00000000 		.4byte	0
 15319 05bc 00000000 		.4byte	0
 15320              		.section	.debug_ranges,"",%progbits
 15321              	.Ldebug_ranges0:
 15322 0000 00000000 		.4byte	.LFB0
 15323 0004 0C000000 		.4byte	.LFE0
 15324 0008 00000000 		.4byte	.LFB1
 15325 000c 0C000000 		.4byte	.LFE1
 15326 0010 00000000 		.4byte	.LFB4
 15327 0014 20000000 		.4byte	.LFE4
 15328 0018 00000000 		.4byte	.LFB5
 15329 001c 18000000 		.4byte	.LFE5
 15330 0020 00000000 		.4byte	.LFB6
 15331 0024 1C000000 		.4byte	.LFE6
 15332 0028 00000000 		.4byte	.LFB7
 15333 002c 14000000 		.4byte	.LFE7
 15334 0030 00000000 		.4byte	.LFB8
 15335 0034 24000000 		.4byte	.LFE8
 15336 0038 00000000 		.4byte	.LFB9
 15337 003c 20000000 		.4byte	.LFE9
 15338 0040 00000000 		.4byte	.LFB10
 15339 0044 24000000 		.4byte	.LFE10
 15340 0048 00000000 		.4byte	.LFB11
 15341 004c 20000000 		.4byte	.LFE11
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 311


 15342 0050 00000000 		.4byte	.LFB12
 15343 0054 20000000 		.4byte	.LFE12
 15344 0058 00000000 		.4byte	.LFB13
 15345 005c 24000000 		.4byte	.LFE13
 15346 0060 00000000 		.4byte	.LFB14
 15347 0064 20000000 		.4byte	.LFE14
 15348 0068 00000000 		.4byte	.LFB15
 15349 006c 24000000 		.4byte	.LFE15
 15350 0070 00000000 		.4byte	.LFB16
 15351 0074 18000000 		.4byte	.LFE16
 15352 0078 00000000 		.4byte	.LFB17
 15353 007c 24000000 		.4byte	.LFE17
 15354 0080 00000000 		.4byte	.LFB18
 15355 0084 18000000 		.4byte	.LFE18
 15356 0088 00000000 		.4byte	.LFB19
 15357 008c 24000000 		.4byte	.LFE19
 15358 0090 00000000 		.4byte	.LFB20
 15359 0094 18000000 		.4byte	.LFE20
 15360 0098 00000000 		.4byte	.LFB21
 15361 009c 24000000 		.4byte	.LFE21
 15362 00a0 00000000 		.4byte	.LFB22
 15363 00a4 20000000 		.4byte	.LFE22
 15364 00a8 00000000 		.4byte	.LFB23
 15365 00ac 24000000 		.4byte	.LFE23
 15366 00b0 00000000 		.4byte	.LFB24
 15367 00b4 20000000 		.4byte	.LFE24
 15368 00b8 00000000 		.4byte	.LFB25
 15369 00bc 1C000000 		.4byte	.LFE25
 15370 00c0 00000000 		.4byte	.LFB26
 15371 00c4 14000000 		.4byte	.LFE26
 15372 00c8 00000000 		.4byte	.LFB27
 15373 00cc 1C000000 		.4byte	.LFE27
 15374 00d0 00000000 		.4byte	.LFB28
 15375 00d4 14000000 		.4byte	.LFE28
 15376 00d8 00000000 		.4byte	.LFB29
 15377 00dc 1C000000 		.4byte	.LFE29
 15378 00e0 00000000 		.4byte	.LFB30
 15379 00e4 14000000 		.4byte	.LFE30
 15380 00e8 00000000 		.4byte	.LFB31
 15381 00ec 1C000000 		.4byte	.LFE31
 15382 00f0 00000000 		.4byte	.LFB32
 15383 00f4 14000000 		.4byte	.LFE32
 15384 00f8 00000000 		.4byte	.LFB33
 15385 00fc 1C000000 		.4byte	.LFE33
 15386 0100 00000000 		.4byte	.LFB34
 15387 0104 14000000 		.4byte	.LFE34
 15388 0108 00000000 		.4byte	.LFB35
 15389 010c 1C000000 		.4byte	.LFE35
 15390 0110 00000000 		.4byte	.LFB36
 15391 0114 14000000 		.4byte	.LFE36
 15392 0118 00000000 		.4byte	.LFB37
 15393 011c 24000000 		.4byte	.LFE37
 15394 0120 00000000 		.4byte	.LFB38
 15395 0124 18000000 		.4byte	.LFE38
 15396 0128 00000000 		.4byte	.LFB39
 15397 012c 24000000 		.4byte	.LFE39
 15398 0130 00000000 		.4byte	.LFB40
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 312


 15399 0134 18000000 		.4byte	.LFE40
 15400 0138 00000000 		.4byte	.LFB41
 15401 013c 24000000 		.4byte	.LFE41
 15402 0140 00000000 		.4byte	.LFB42
 15403 0144 18000000 		.4byte	.LFE42
 15404 0148 00000000 		.4byte	.LFB43
 15405 014c 24000000 		.4byte	.LFE43
 15406 0150 00000000 		.4byte	.LFB44
 15407 0154 18000000 		.4byte	.LFE44
 15408 0158 00000000 		.4byte	.LFB45
 15409 015c 24000000 		.4byte	.LFE45
 15410 0160 00000000 		.4byte	.LFB46
 15411 0164 18000000 		.4byte	.LFE46
 15412 0168 00000000 		.4byte	.LFB47
 15413 016c 24000000 		.4byte	.LFE47
 15414 0170 00000000 		.4byte	.LFB48
 15415 0174 18000000 		.4byte	.LFE48
 15416 0178 00000000 		.4byte	.LFB49
 15417 017c 24000000 		.4byte	.LFE49
 15418 0180 00000000 		.4byte	.LFB50
 15419 0184 18000000 		.4byte	.LFE50
 15420 0188 00000000 		.4byte	.LFB51
 15421 018c 24000000 		.4byte	.LFE51
 15422 0190 00000000 		.4byte	.LFB52
 15423 0194 18000000 		.4byte	.LFE52
 15424 0198 00000000 		.4byte	.LFB53
 15425 019c 24000000 		.4byte	.LFE53
 15426 01a0 00000000 		.4byte	.LFB54
 15427 01a4 18000000 		.4byte	.LFE54
 15428 01a8 00000000 		.4byte	.LFB55
 15429 01ac 24000000 		.4byte	.LFE55
 15430 01b0 00000000 		.4byte	.LFB56
 15431 01b4 18000000 		.4byte	.LFE56
 15432 01b8 00000000 		.4byte	.LFB57
 15433 01bc 24000000 		.4byte	.LFE57
 15434 01c0 00000000 		.4byte	.LFB58
 15435 01c4 18000000 		.4byte	.LFE58
 15436 01c8 00000000 		.4byte	.LFB59
 15437 01cc 24000000 		.4byte	.LFE59
 15438 01d0 00000000 		.4byte	.LFB60
 15439 01d4 18000000 		.4byte	.LFE60
 15440 01d8 00000000 		.4byte	.LFB61
 15441 01dc 24000000 		.4byte	.LFE61
 15442 01e0 00000000 		.4byte	.LFB62
 15443 01e4 20000000 		.4byte	.LFE62
 15444 01e8 00000000 		.4byte	.LFB63
 15445 01ec 2C000000 		.4byte	.LFE63
 15446 01f0 00000000 		.4byte	.LFB64
 15447 01f4 24000000 		.4byte	.LFE64
 15448 01f8 00000000 		.4byte	.LFB65
 15449 01fc 2C000000 		.4byte	.LFE65
 15450 0200 00000000 		.4byte	.LFB66
 15451 0204 24000000 		.4byte	.LFE66
 15452 0208 00000000 		.4byte	.LFB67
 15453 020c 34000000 		.4byte	.LFE67
 15454 0210 00000000 		.4byte	.LFB68
 15455 0214 24000000 		.4byte	.LFE68
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 313


 15456 0218 00000000 		.4byte	.LFB69
 15457 021c 34000000 		.4byte	.LFE69
 15458 0220 00000000 		.4byte	.LFB70
 15459 0224 24000000 		.4byte	.LFE70
 15460 0228 00000000 		.4byte	.LFB71
 15461 022c 34000000 		.4byte	.LFE71
 15462 0230 00000000 		.4byte	.LFB72
 15463 0234 24000000 		.4byte	.LFE72
 15464 0238 00000000 		.4byte	.LFB73
 15465 023c 34000000 		.4byte	.LFE73
 15466 0240 00000000 		.4byte	.LFB74
 15467 0244 24000000 		.4byte	.LFE74
 15468 0248 00000000 		.4byte	.LFB75
 15469 024c 38000000 		.4byte	.LFE75
 15470 0250 00000000 		.4byte	.LFB76
 15471 0254 2C000000 		.4byte	.LFE76
 15472 0258 00000000 		.4byte	.LFB77
 15473 025c 1C000000 		.4byte	.LFE77
 15474 0260 00000000 		.4byte	.LFB78
 15475 0264 14000000 		.4byte	.LFE78
 15476 0268 00000000 		.4byte	.LFB79
 15477 026c 1C000000 		.4byte	.LFE79
 15478 0270 00000000 		.4byte	.LFB80
 15479 0274 14000000 		.4byte	.LFE80
 15480 0278 00000000 		.4byte	.LFB81
 15481 027c 14000000 		.4byte	.LFE81
 15482 0280 00000000 		.4byte	.LFB82
 15483 0284 24000000 		.4byte	.LFE82
 15484 0288 00000000 		.4byte	.LFB83
 15485 028c 18000000 		.4byte	.LFE83
 15486 0290 00000000 		.4byte	.LFB84
 15487 0294 24000000 		.4byte	.LFE84
 15488 0298 00000000 		.4byte	.LFB85
 15489 029c 18000000 		.4byte	.LFE85
 15490 02a0 00000000 		.4byte	.LFB86
 15491 02a4 24000000 		.4byte	.LFE86
 15492 02a8 00000000 		.4byte	.LFB87
 15493 02ac 18000000 		.4byte	.LFE87
 15494 02b0 00000000 		.4byte	.LFB88
 15495 02b4 24000000 		.4byte	.LFE88
 15496 02b8 00000000 		.4byte	.LFB89
 15497 02bc 20000000 		.4byte	.LFE89
 15498 02c0 00000000 		.4byte	.LFB90
 15499 02c4 1C000000 		.4byte	.LFE90
 15500 02c8 00000000 		.4byte	.LFB91
 15501 02cc 24000000 		.4byte	.LFE91
 15502 02d0 00000000 		.4byte	.LFB92
 15503 02d4 24000000 		.4byte	.LFE92
 15504 02d8 00000000 		.4byte	.LFB93
 15505 02dc 24000000 		.4byte	.LFE93
 15506 02e0 00000000 		.4byte	.LFB94
 15507 02e4 24000000 		.4byte	.LFE94
 15508 02e8 00000000 		.4byte	.LFB95
 15509 02ec 24000000 		.4byte	.LFE95
 15510 02f0 00000000 		.4byte	.LFB96
 15511 02f4 24000000 		.4byte	.LFE96
 15512 02f8 00000000 		.4byte	.LFB97
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 314


 15513 02fc 24000000 		.4byte	.LFE97
 15514 0300 00000000 		.4byte	.LFB98
 15515 0304 24000000 		.4byte	.LFE98
 15516 0308 00000000 		.4byte	.LFB99
 15517 030c 24000000 		.4byte	.LFE99
 15518 0310 00000000 		.4byte	.LFB100
 15519 0314 18000000 		.4byte	.LFE100
 15520 0318 00000000 		.4byte	.LFB101
 15521 031c 24000000 		.4byte	.LFE101
 15522 0320 00000000 		.4byte	.LFB102
 15523 0324 18000000 		.4byte	.LFE102
 15524 0328 00000000 		.4byte	.LFB103
 15525 032c 24000000 		.4byte	.LFE103
 15526 0330 00000000 		.4byte	.LFB104
 15527 0334 18000000 		.4byte	.LFE104
 15528 0338 00000000 		.4byte	.LFB105
 15529 033c 24000000 		.4byte	.LFE105
 15530 0340 00000000 		.4byte	.LFB106
 15531 0344 18000000 		.4byte	.LFE106
 15532 0348 00000000 		.4byte	.LFB107
 15533 034c 24000000 		.4byte	.LFE107
 15534 0350 00000000 		.4byte	.LFB108
 15535 0354 18000000 		.4byte	.LFE108
 15536 0358 00000000 		.4byte	.LFB109
 15537 035c 24000000 		.4byte	.LFE109
 15538 0360 00000000 		.4byte	.LFB110
 15539 0364 18000000 		.4byte	.LFE110
 15540 0368 00000000 		.4byte	.LFB111
 15541 036c 24000000 		.4byte	.LFE111
 15542 0370 00000000 		.4byte	.LFB112
 15543 0374 18000000 		.4byte	.LFE112
 15544 0378 00000000 		.4byte	.LFB113
 15545 037c 24000000 		.4byte	.LFE113
 15546 0380 00000000 		.4byte	.LFB114
 15547 0384 18000000 		.4byte	.LFE114
 15548 0388 00000000 		.4byte	.LFB115
 15549 038c 1C000000 		.4byte	.LFE115
 15550 0390 00000000 		.4byte	.LFB116
 15551 0394 14000000 		.4byte	.LFE116
 15552 0398 00000000 		.4byte	.LFB117
 15553 039c 24000000 		.4byte	.LFE117
 15554 03a0 00000000 		.4byte	.LFB118
 15555 03a4 18000000 		.4byte	.LFE118
 15556 03a8 00000000 		.4byte	.LFB119
 15557 03ac 24000000 		.4byte	.LFE119
 15558 03b0 00000000 		.4byte	.LFB120
 15559 03b4 18000000 		.4byte	.LFE120
 15560 03b8 00000000 		.4byte	.LFB121
 15561 03bc 24000000 		.4byte	.LFE121
 15562 03c0 00000000 		.4byte	.LFB122
 15563 03c4 18000000 		.4byte	.LFE122
 15564 03c8 00000000 		.4byte	.LFB123
 15565 03cc 24000000 		.4byte	.LFE123
 15566 03d0 00000000 		.4byte	.LFB124
 15567 03d4 18000000 		.4byte	.LFE124
 15568 03d8 00000000 		.4byte	.LFB125
 15569 03dc 24000000 		.4byte	.LFE125
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 315


 15570 03e0 00000000 		.4byte	.LFB126
 15571 03e4 18000000 		.4byte	.LFE126
 15572 03e8 00000000 		.4byte	.LFB127
 15573 03ec 24000000 		.4byte	.LFE127
 15574 03f0 00000000 		.4byte	.LFB128
 15575 03f4 18000000 		.4byte	.LFE128
 15576 03f8 00000000 		.4byte	.LFB129
 15577 03fc 1C000000 		.4byte	.LFE129
 15578 0400 00000000 		.4byte	.LFB130
 15579 0404 24000000 		.4byte	.LFE130
 15580 0408 00000000 		.4byte	.LFB131
 15581 040c 6C000000 		.4byte	.LFE131
 15582 0410 00000000 		.4byte	.LFB132
 15583 0414 24000000 		.4byte	.LFE132
 15584 0418 00000000 		.4byte	.LFB133
 15585 041c 24000000 		.4byte	.LFE133
 15586 0420 00000000 		.4byte	.LFB134
 15587 0424 24000000 		.4byte	.LFE134
 15588 0428 00000000 		.4byte	.LFB135
 15589 042c 24000000 		.4byte	.LFE135
 15590 0430 00000000 		.4byte	.LFB136
 15591 0434 24000000 		.4byte	.LFE136
 15592 0438 00000000 		.4byte	.LFB137
 15593 043c 24000000 		.4byte	.LFE137
 15594 0440 00000000 		.4byte	.LFB138
 15595 0444 24000000 		.4byte	.LFE138
 15596 0448 00000000 		.4byte	.LFB139
 15597 044c 20000000 		.4byte	.LFE139
 15598 0450 00000000 		.4byte	.LFB140
 15599 0454 24000000 		.4byte	.LFE140
 15600 0458 00000000 		.4byte	.LFB141
 15601 045c 18000000 		.4byte	.LFE141
 15602 0460 00000000 		.4byte	.LFB142
 15603 0464 2C000000 		.4byte	.LFE142
 15604 0468 00000000 		.4byte	.LFB143
 15605 046c 18000000 		.4byte	.LFE143
 15606 0470 00000000 		.4byte	.LFB144
 15607 0474 18000000 		.4byte	.LFE144
 15608 0478 00000000 		.4byte	.LFB145
 15609 047c 18000000 		.4byte	.LFE145
 15610 0480 00000000 		.4byte	.LFB146
 15611 0484 18000000 		.4byte	.LFE146
 15612 0488 00000000 		.4byte	.LFB147
 15613 048c 24000000 		.4byte	.LFE147
 15614 0490 00000000 		.4byte	.LFB148
 15615 0494 20000000 		.4byte	.LFE148
 15616 0498 00000000 		.4byte	.LFB149
 15617 049c 24000000 		.4byte	.LFE149
 15618 04a0 00000000 		.4byte	.LFB150
 15619 04a4 20000000 		.4byte	.LFE150
 15620 04a8 00000000 		.4byte	.LFB151
 15621 04ac 24000000 		.4byte	.LFE151
 15622 04b0 00000000 		.4byte	.LFB152
 15623 04b4 20000000 		.4byte	.LFE152
 15624 04b8 00000000 		.4byte	.LFB153
 15625 04bc 18000000 		.4byte	.LFE153
 15626 04c0 00000000 		.4byte	.LFB154
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 316


 15627 04c4 18000000 		.4byte	.LFE154
 15628 04c8 00000000 		.4byte	.LFB155
 15629 04cc 18000000 		.4byte	.LFE155
 15630 04d0 00000000 		.4byte	.LFB156
 15631 04d4 24000000 		.4byte	.LFE156
 15632 04d8 00000000 		.4byte	.LFB157
 15633 04dc 18000000 		.4byte	.LFE157
 15634 04e0 00000000 		.4byte	.LFB158
 15635 04e4 24000000 		.4byte	.LFE158
 15636 04e8 00000000 		.4byte	.LFB159
 15637 04ec 18000000 		.4byte	.LFE159
 15638 04f0 00000000 		.4byte	.LFB160
 15639 04f4 24000000 		.4byte	.LFE160
 15640 04f8 00000000 		.4byte	.LFB161
 15641 04fc 18000000 		.4byte	.LFE161
 15642 0500 00000000 		.4byte	.LFB162
 15643 0504 24000000 		.4byte	.LFE162
 15644 0508 00000000 		.4byte	.LFB163
 15645 050c 20000000 		.4byte	.LFE163
 15646 0510 00000000 		.4byte	.LFB2
 15647 0514 2C000000 		.4byte	.LFE2
 15648 0518 00000000 		.4byte	.LFB164
 15649 051c 24000000 		.4byte	.LFE164
 15650 0520 00000000 		.4byte	.LFB165
 15651 0524 20000000 		.4byte	.LFE165
 15652 0528 00000000 		.4byte	.LFB166
 15653 052c 24000000 		.4byte	.LFE166
 15654 0530 00000000 		.4byte	.LFB167
 15655 0534 18000000 		.4byte	.LFE167
 15656 0538 00000000 		.4byte	.LFB168
 15657 053c 24000000 		.4byte	.LFE168
 15658 0540 00000000 		.4byte	.LFB169
 15659 0544 18000000 		.4byte	.LFE169
 15660 0548 00000000 		.4byte	.LFB170
 15661 054c 24000000 		.4byte	.LFE170
 15662 0550 00000000 		.4byte	.LFB171
 15663 0554 18000000 		.4byte	.LFE171
 15664 0558 00000000 		.4byte	.LFB172
 15665 055c 24000000 		.4byte	.LFE172
 15666 0560 00000000 		.4byte	.LFB173
 15667 0564 18000000 		.4byte	.LFE173
 15668 0568 00000000 		.4byte	.LFB174
 15669 056c 24000000 		.4byte	.LFE174
 15670 0570 00000000 		.4byte	.LFB175
 15671 0574 18000000 		.4byte	.LFE175
 15672 0578 00000000 		.4byte	.LFB176
 15673 057c 24000000 		.4byte	.LFE176
 15674 0580 00000000 		.4byte	.LFB177
 15675 0584 18000000 		.4byte	.LFE177
 15676 0588 00000000 		.4byte	.LFB178
 15677 058c 10000000 		.4byte	.LFE178
 15678 0590 00000000 		.4byte	.LFB179
 15679 0594 24000000 		.4byte	.LFE179
 15680 0598 00000000 		.4byte	.LFB3
 15681 059c 10000000 		.4byte	.LFE3
 15682 05a0 00000000 		.4byte	.LFB180
 15683 05a4 20000000 		.4byte	.LFE180
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 317


 15684 05a8 00000000 		.4byte	0
 15685 05ac 00000000 		.4byte	0
 15686              		.section	.debug_line,"",%progbits
 15687              	.Ldebug_line0:
 15688 0000 0A0E0000 		.section	.debug_str,"MS",%progbits,1
 15688      02002701 
 15688      00000201 
 15688      FB0E0D00 
 15688      01010101 
 15689              	.LASF219:
 15690 0000 49324352 		.ascii	"I2CReadByte\000"
 15690      65616442 
 15690      79746500 
 15691              	.LASF164:
 15692 000c 4D505539 		.ascii	"MPU9250_getZNegMotionDetected\000"
 15692      3235305F 
 15692      6765745A 
 15692      4E65674D 
 15692      6F74696F 
 15693              	.LASF115:
 15694 002a 4D505539 		.ascii	"MPU9250_getSlate4InputByte\000"
 15694      3235305F 
 15694      67657453 
 15694      6C617465 
 15694      34496E70 
 15695              	.LASF19:
 15696 0045 4D505539 		.ascii	"MPU9250_setRate\000"
 15696      3235305F 
 15696      73657452 
 15696      61746500 
 15697              	.LASF70:
 15698 0055 4D505539 		.ascii	"MPU9250_getSlave1FIFOEnabled\000"
 15698      3235305F 
 15698      67657453 
 15698      6C617665 
 15698      31464946 
 15699              	.LASF74:
 15700 0072 4D505539 		.ascii	"MPU9250_getMultiMasterEnabled\000"
 15700      3235305F 
 15700      6765744D 
 15700      756C7469 
 15700      4D617374 
 15701              	.LASF136:
 15702 0090 4D505539 		.ascii	"MPU9250_setFSyncInterruptLevel\000"
 15702      3235305F 
 15702      73657446 
 15702      53796E63 
 15702      496E7465 
 15703              	.LASF135:
 15704 00af 4D505539 		.ascii	"MPU9250_getFSyncInterruptLevel\000"
 15704      3235305F 
 15704      67657446 
 15704      53796E63 
 15704      496E7465 
 15705              	.LASF50:
 15706 00ce 4D505539 		.ascii	"MPU9250_getMotionDetectionThreshold\000"
 15706      3235305F 
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 318


 15706      6765744D 
 15706      6F74696F 
 15706      6E446574 
 15707              	.LASF213:
 15708 00f2 4D505539 		.ascii	"MPU9250_setDeviceID\000"
 15708      3235305F 
 15708      73657444 
 15708      65766963 
 15708      65494400 
 15709              	.LASF116:
 15710 0106 4D505539 		.ascii	"MPU9250_getPassthroughStatus\000"
 15710      3235305F 
 15710      67657450 
 15710      61737374 
 15710      68726F75 
 15711              	.LASF95:
 15712 0123 4D505539 		.ascii	"MPU9250_getSlaveWordGroupOffset\000"
 15712      3235305F 
 15712      67657453 
 15712      6C617665 
 15712      576F7264 
 15713              	.LASF140:
 15714 0143 4D505539 		.ascii	"MPU9250_setI2CBypassEnabled\000"
 15714      3235305F 
 15714      73657449 
 15714      32434279 
 15714      70617373 
 15715              	.LASF2:
 15716 015f 5F5F7569 		.ascii	"__uint8_t\000"
 15716      6E74385F 
 15716      7400
 15717              	.LASF168:
 15718 0169 4D505539 		.ascii	"MPU9250_getExternalShadowDelayEnabled\000"
 15718      3235305F 
 15718      67657445 
 15718      78746572 
 15718      6E616C53 
 15719              	.LASF171:
 15720 018f 4D505539 		.ascii	"MPU9250_setSlaveDelayEnabled\000"
 15720      3235305F 
 15720      73657453 
 15720      6C617665 
 15720      44656C61 
 15721              	.LASF57:
 15722 01ac 4D505539 		.ascii	"MPU9250_setZeroMotionDetectionDuration\000"
 15722      3235305F 
 15722      7365745A 
 15722      65726F4D 
 15722      6F74696F 
 15723              	.LASF33:
 15724 01d3 4D505539 		.ascii	"MPU9250_setAccelXSelfTest\000"
 15724      3235305F 
 15724      73657441 
 15724      6363656C 
 15724      5853656C 
 15725              	.LASF13:
 15726 01ed 4932435F 		.ascii	"I2C_MPU9250_I2CAddress\000"
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 319


 15726      4D505539 
 15726      3235305F 
 15726      49324341 
 15726      64647265 
 15727              	.LASF205:
 15728 0204 4D505539 		.ascii	"MPU9250_setStandbyXGyroEnabled\000"
 15728      3235305F 
 15728      73657453 
 15728      74616E64 
 15728      62795847 
 15729              	.LASF9:
 15730 0223 6C6F6E67 		.ascii	"long long unsigned int\000"
 15730      206C6F6E 
 15730      6720756E 
 15730      7369676E 
 15730      65642069 
 15731              	.LASF80:
 15732 023a 4D505539 		.ascii	"MPU9250_getSlaveReadWriteTransitionEnabled\000"
 15732      3235305F 
 15732      67657453 
 15732      6C617665 
 15732      52656164 
 15733              	.LASF151:
 15734 0265 4D505539 		.ascii	"MPU9250_getIntFIFOBufferOverflowEnabled\000"
 15734      3235305F 
 15734      67657449 
 15734      6E744649 
 15734      464F4275 
 15735              	.LASF15:
 15736 028d 4D505539 		.ascii	"MPU9250_setAuxVDDIOLevel\000"
 15736      3235305F 
 15736      73657441 
 15736      75785644 
 15736      44494F4C 
 15737              	.LASF165:
 15738 02a6 4D505539 		.ascii	"MPU9250_getZPosMotionDetected\000"
 15738      3235305F 
 15738      6765745A 
 15738      506F734D 
 15738      6F74696F 
 15739              	.LASF160:
 15740 02c4 4D505539 		.ascii	"MPU9250_getXNegMotionDetected\000"
 15740      3235305F 
 15740      67657458 
 15740      4E65674D 
 15740      6F74696F 
 15741              	.LASF120:
 15742 02e2 4D505539 		.ascii	"MPU9250_getSlave3Nack\000"
 15742      3235305F 
 15742      67657453 
 15742      6C617665 
 15742      334E6163 
 15743              	.LASF175:
 15744 02f8 4D505539 		.ascii	"MPU9250_getAccelerometerPowerOnDelay\000"
 15744      3235305F 
 15744      67657441 
 15744      6363656C 
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 320


 15744      65726F6D 
 15745              	.LASF186:
 15746 031d 4D505539 		.ascii	"MPU9250_setSleepEnabled\000"
 15746      3235305F 
 15746      73657453 
 15746      6C656570 
 15746      456E6162 
 15747              	.LASF204:
 15748 0335 4D505539 		.ascii	"MPU9250_getStandbyXGyroEnabled\000"
 15748      3235305F 
 15748      67657453 
 15748      74616E64 
 15748      62795847 
 15749              	.LASF12:
 15750 0354 696E7431 		.ascii	"int16_t\000"
 15750      365F7400 
 15751              	.LASF8:
 15752 035c 6C6F6E67 		.ascii	"long long int\000"
 15752      206C6F6E 
 15752      6720696E 
 15752      7400
 15753              	.LASF0:
 15754 036a 7369676E 		.ascii	"signed char\000"
 15754      65642063 
 15754      68617200 
 15755              	.LASF192:
 15756 0376 4D505539 		.ascii	"MPU9250_setClockSource\000"
 15756      3235305F 
 15756      73657443 
 15756      6C6F636B 
 15756      536F7572 
 15757              	.LASF20:
 15758 038d 72617465 		.ascii	"rate\000"
 15758      00
 15759              	.LASF198:
 15760 0392 4D505539 		.ascii	"MPU9250_getStandbyXAccelEnabled\000"
 15760      3235305F 
 15760      67657453 
 15760      74616E64 
 15760      62795841 
 15761              	.LASF27:
 15762 03b2 4D505539 		.ascii	"MPU9250_set_A_DLPFMode\000"
 15762      3235305F 
 15762      7365745F 
 15762      415F444C 
 15762      50464D6F 
 15763              	.LASF207:
 15764 03c9 4D505539 		.ascii	"MPU9250_setStandbyYGyroEnabled\000"
 15764      3235305F 
 15764      73657453 
 15764      74616E64 
 15764      62795947 
 15765              	.LASF133:
 15766 03e8 4D505539 		.ascii	"MPU9250_setInterruptLatchClear\000"
 15766      3235305F 
 15766      73657449 
 15766      6E746572 
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 321


 15766      72757074 
 15767              	.LASF218:
 15768 0407 49324357 		.ascii	"I2CWriteBit\000"
 15768      72697465 
 15768      42697400 
 15769              	.LASF64:
 15770 0413 4D505539 		.ascii	"MPU9250_getZGyroFIFOEnabled\000"
 15770      3235305F 
 15770      6765745A 
 15770      4779726F 
 15770      4649464F 
 15771              	.LASF6:
 15772 042f 6C6F6E67 		.ascii	"long int\000"
 15772      20696E74 
 15772      00
 15773              	.LASF223:
 15774 0438 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 15774      4320342E 
 15774      392E3320 
 15774      32303135 
 15774      30333033 
 15775 046b 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m4 -mfloat-abi=s"
 15775      20726576 
 15775      6973696F 
 15775      6E203232 
 15775      31323230 
 15776 049e 6F667466 		.ascii	"oftfp -mfpu=fpv4-sp-d16 -mthumb -g -Og -ffunction-s"
 15776      70202D6D 
 15776      6670753D 
 15776      66707634 
 15776      2D73702D 
 15777 04d1 65637469 		.ascii	"ections -ffat-lto-objects\000"
 15777      6F6E7320 
 15777      2D666661 
 15777      742D6C74 
 15777      6F2D6F62 
 15778              	.LASF124:
 15779 04eb 4D505539 		.ascii	"MPU9250_getInterruptMode\000"
 15779      3235305F 
 15779      67657449 
 15779      6E746572 
 15779      72757074 
 15780              	.LASF97:
 15781 0504 4D505539 		.ascii	"MPU9250_getSlaveDataLength\000"
 15781      3235305F 
 15781      67657453 
 15781      6C617665 
 15781      44617461 
 15782              	.LASF188:
 15783 051f 4D505539 		.ascii	"MPU9250_setWakeCycleEnabled\000"
 15783      3235305F 
 15783      73657457 
 15783      616B6543 
 15783      79636C65 
 15784              	.LASF88:
 15785 053b 4D505539 		.ascii	"MPU9250_setSlaveRegister\000"
 15785      3235305F 
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 322


 15785      73657453 
 15785      6C617665 
 15785      52656769 
 15786              	.LASF36:
 15787 0554 4D505539 		.ascii	"MPU9250_setAccelYSelfTest\000"
 15787      3235305F 
 15787      73657441 
 15787      6363656C 
 15787      5953656C 
 15788              	.LASF44:
 15789 056e 4D505539 		.ascii	"MPU9250_getFreefallDetectionThreshold\000"
 15789      3235305F 
 15789      67657446 
 15789      72656566 
 15789      616C6C44 
 15790              	.LASF113:
 15791 0594 4D505539 		.ascii	"MPU9250_setSlave4MasterDelay\000"
 15791      3235305F 
 15791      73657453 
 15791      6C617665 
 15791      344D6173 
 15792              	.LASF82:
 15793 05b1 4D505539 		.ascii	"MPU9250_getMasterClockSpeed\000"
 15793      3235305F 
 15793      6765744D 
 15793      61737465 
 15793      72436C6F 
 15794              	.LASF123:
 15795 05cd 4D505539 		.ascii	"MPU9250_getSlave0Nack\000"
 15795      3235305F 
 15795      67657453 
 15795      6C617665 
 15795      304E6163 
 15796              	.LASF24:
 15797 05e3 4D505539 		.ascii	"MPU9250_getDLPFMode\000"
 15797      3235305F 
 15797      67657444 
 15797      4C50464D 
 15797      6F646500 
 15798              	.LASF203:
 15799 05f7 4D505539 		.ascii	"MPU9250_setStandbyZAccelEnabled\000"
 15799      3235305F 
 15799      73657453 
 15799      74616E64 
 15799      62795A41 
 15800              	.LASF210:
 15801 0617 4D505539 		.ascii	"MPU9250_EnableAccFilter\000"
 15801      3235305F 
 15801      456E6162 
 15801      6C654163 
 15801      6346696C 
 15802              	.LASF155:
 15803 062f 4D505539 		.ascii	"MPU9250_getIntDataReadyEnabled\000"
 15803      3235305F 
 15803      67657449 
 15803      6E744461 
 15803      74615265 
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 323


 15804              	.LASF181:
 15805 064e 4D505539 		.ascii	"MPU9250_setMotionDetectionCounterDecrement\000"
 15805      3235305F 
 15805      7365744D 
 15805      6F74696F 
 15805      6E446574 
 15806              	.LASF111:
 15807 0679 4D505539 		.ascii	"MPU9250_setSlave4WriteMode\000"
 15807      3235305F 
 15807      73657453 
 15807      6C617665 
 15807      34577269 
 15808              	.LASF47:
 15809 0694 4D505539 		.ascii	"MPU9250_getFreefallDetectionDuration\000"
 15809      3235305F 
 15809      67657446 
 15809      72656566 
 15809      616C6C44 
 15810              	.LASF3:
 15811 06b9 5F5F696E 		.ascii	"__int16_t\000"
 15811      7431365F 
 15811      7400
 15812              	.LASF227:
 15813 06c3 49324352 		.ascii	"I2CReadBytes\000"
 15813      65616442 
 15813      79746573 
 15813      00
 15814              	.LASF49:
 15815 06d0 64757261 		.ascii	"duration\000"
 15815      74696F6E 
 15815      00
 15816              	.LASF39:
 15817 06d9 4D505539 		.ascii	"MPU9250_getFullScaleAccelRange\000"
 15817      3235305F 
 15817      67657446 
 15817      756C6C53 
 15817      63616C65 
 15818              	.LASF83:
 15819 06f8 4D505539 		.ascii	"MPU9250_setMasterClockSpeed\000"
 15819      3235305F 
 15819      7365744D 
 15819      61737465 
 15819      72436C6F 
 15820              	.LASF55:
 15821 0714 4D505539 		.ascii	"MPU9250_setZeroMotionDetectionThreshold\000"
 15821      3235305F 
 15821      7365745A 
 15821      65726F4D 
 15821      6F74696F 
 15822              	.LASF91:
 15823 073c 4D505539 		.ascii	"MPU9250_getSlaveWordByteSwap\000"
 15823      3235305F 
 15823      67657453 
 15823      6C617665 
 15823      576F7264 
 15824              	.LASF77:
 15825 0759 4D505539 		.ascii	"MPU9250_setWaitForExternalSensorEnabled\000"
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 324


 15825      3235305F 
 15825      73657457 
 15825      61697446 
 15825      6F724578 
 15826              	.LASF10:
 15827 0781 756E7369 		.ascii	"unsigned int\000"
 15827      676E6564 
 15827      20696E74 
 15827      00
 15828              	.LASF214:
 15829 078e 73697A65 		.ascii	"sizetype\000"
 15829      74797065 
 15829      00
 15830              	.LASF217:
 15831 0797 49324352 		.ascii	"I2CReadBit\000"
 15831      65616442 
 15831      697400
 15832              	.LASF141:
 15833 07a2 4D505539 		.ascii	"MPU9250_getClockOutputEnabled\000"
 15833      3235305F 
 15833      67657443 
 15833      6C6F636B 
 15833      4F757470 
 15834              	.LASF202:
 15835 07c0 4D505539 		.ascii	"MPU9250_getStandbyZAccelEnabled\000"
 15835      3235305F 
 15835      67657453 
 15835      74616E64 
 15835      62795A41 
 15836              	.LASF156:
 15837 07e0 4D505539 		.ascii	"MPU9250_setIntDataReadyEnabled\000"
 15837      3235305F 
 15837      73657449 
 15837      6E744461 
 15837      74615265 
 15838              	.LASF71:
 15839 07ff 4D505539 		.ascii	"MPU9250_setSlave1FIFOEnabled\000"
 15839      3235305F 
 15839      73657453 
 15839      6C617665 
 15839      31464946 
 15840              	.LASF7:
 15841 081c 6C6F6E67 		.ascii	"long unsigned int\000"
 15841      20756E73 
 15841      69676E65 
 15841      6420696E 
 15841      7400
 15842              	.LASF211:
 15843 082e 4D505539 		.ascii	"MPU9250_getDeviceID\000"
 15843      3235305F 
 15843      67657444 
 15843      65766963 
 15843      65494400 
 15844              	.LASF137:
 15845 0842 4D505539 		.ascii	"MPU9250_getFSyncInterruptEnabled\000"
 15845      3235305F 
 15845      67657446 
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 325


 15845      53796E63 
 15845      496E7465 
 15846              	.LASF38:
 15847 0863 4D505539 		.ascii	"MPU9250_setAccelZSelfTest\000"
 15847      3235305F 
 15847      73657441 
 15847      6363656C 
 15847      5A53656C 
 15848              	.LASF177:
 15849 087d 4D505539 		.ascii	"MPU9250_getFreefallDetectionCounterDecrement\000"
 15849      3235305F 
 15849      67657446 
 15849      72656566 
 15849      616C6C44 
 15850              	.LASF185:
 15851 08aa 4D505539 		.ascii	"MPU9250_getSleepEnabled\000"
 15851      3235305F 
 15851      67657453 
 15851      6C656570 
 15851      456E6162 
 15852              	.LASF179:
 15853 08c2 64656372 		.ascii	"decrement\000"
 15853      656D656E 
 15853      7400
 15854              	.LASF66:
 15855 08cc 4D505539 		.ascii	"MPU9250_getAccelFIFOEnabled\000"
 15855      3235305F 
 15855      67657441 
 15855      6363656C 
 15855      4649464F 
 15856              	.LASF68:
 15857 08e8 4D505539 		.ascii	"MPU9250_getSlave2FIFOEnabled\000"
 15857      3235305F 
 15857      67657453 
 15857      6C617665 
 15857      32464946 
 15858              	.LASF17:
 15859 0905 6C657665 		.ascii	"level\000"
 15859      6C00
 15860              	.LASF105:
 15861 090b 64617461 		.ascii	"data\000"
 15861      00
 15862              	.LASF5:
 15863 0910 73686F72 		.ascii	"short unsigned int\000"
 15863      7420756E 
 15863      7369676E 
 15863      65642069 
 15863      6E7400
 15864              	.LASF221:
 15865 0923 49324352 		.ascii	"I2CReadBits\000"
 15865      65616442 
 15865      69747300 
 15866              	.LASF67:
 15867 092f 4D505539 		.ascii	"MPU9250_setAccelFIFOEnabled\000"
 15867      3235305F 
 15867      73657441 
 15867      6363656C 
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 326


 15867      4649464F 
 15868              	.LASF143:
 15869 094b 4D505539 		.ascii	"MPU9250_getIntEnabled\000"
 15869      3235305F 
 15869      67657449 
 15869      6E74456E 
 15869      61626C65 
 15870              	.LASF119:
 15871 0961 4D505539 		.ascii	"MPU9250_getSlave4Nack\000"
 15871      3235305F 
 15871      67657453 
 15871      6C617665 
 15871      344E6163 
 15872              	.LASF102:
 15873 0977 4D505539 		.ascii	"MPU9250_getSlave4Register\000"
 15873      3235305F 
 15873      67657453 
 15873      6C617665 
 15873      34526567 
 15874              	.LASF100:
 15875 0991 4D505539 		.ascii	"MPU9250_getSlave4Address\000"
 15875      3235305F 
 15875      67657453 
 15875      6C617665 
 15875      34416464 
 15876              	.LASF197:
 15877 09aa 66726571 		.ascii	"frequency\000"
 15877      75656E63 
 15877      7900
 15878              	.LASF158:
 15879 09b4 4D505539 		.ascii	"MPU9250_getIntFreefallStatus\000"
 15879      3235305F 
 15879      67657449 
 15879      6E744672 
 15879      65656661 
 15880              	.LASF62:
 15881 09d1 4D505539 		.ascii	"MPU9250_getYGyroFIFOEnabled\000"
 15881      3235305F 
 15881      67657459 
 15881      4779726F 
 15881      4649464F 
 15882              	.LASF189:
 15883 09ed 4D505539 		.ascii	"MPU9250_getTempSensorEnabled\000"
 15883      3235305F 
 15883      67657454 
 15883      656D7053 
 15883      656E736F 
 15884              	.LASF56:
 15885 0a0a 4D505539 		.ascii	"MPU9250_getZeroMotionDetectionDuration\000"
 15885      3235305F 
 15885      6765745A 
 15885      65726F4D 
 15885      6F74696F 
 15886              	.LASF166:
 15887 0a31 4D505539 		.ascii	"MPU9250_getZeroMotionDetected\000"
 15887      3235305F 
 15887      6765745A 
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 327


 15887      65726F4D 
 15887      6F74696F 
 15888              	.LASF63:
 15889 0a4f 4D505539 		.ascii	"MPU9250_setYGyroFIFOEnabled\000"
 15889      3235305F 
 15889      73657459 
 15889      4779726F 
 15889      4649464F 
 15890              	.LASF21:
 15891 0a6b 4D505539 		.ascii	"MPU9250_getExternalFrameSync\000"
 15891      3235305F 
 15891      67657445 
 15891      78746572 
 15891      6E616C46 
 15892              	.LASF89:
 15893 0a88 4D505539 		.ascii	"MPU9250_getSlaveEnabled\000"
 15893      3235305F 
 15893      67657453 
 15893      6C617665 
 15893      456E6162 
 15894              	.LASF199:
 15895 0aa0 4D505539 		.ascii	"MPU9250_setStandbyXAccelEnabled\000"
 15895      3235305F 
 15895      73657453 
 15895      74616E64 
 15895      62795841 
 15896              	.LASF154:
 15897 0ac0 4D505539 		.ascii	"MPU9250_setIntI2CMasterEnabled\000"
 15897      3235305F 
 15897      73657449 
 15897      6E744932 
 15897      434D6173 
 15898              	.LASF190:
 15899 0adf 4D505539 		.ascii	"MPU9250_setTempSensorEnabled\000"
 15899      3235305F 
 15899      73657454 
 15899      656D7053 
 15899      656E736F 
 15900              	.LASF42:
 15901 0afc 4D505539 		.ascii	"MPU9250_setDHPFMode\000"
 15901      3235305F 
 15901      73657444 
 15901      4850464D 
 15901      6F646500 
 15902              	.LASF22:
 15903 0b10 4D505539 		.ascii	"MPU9250_setExternalFrameSync\000"
 15903      3235305F 
 15903      73657445 
 15903      78746572 
 15903      6E616C46 
 15904              	.LASF191:
 15905 0b2d 4D505539 		.ascii	"MPU9250_getClockSource\000"
 15905      3235305F 
 15905      67657443 
 15905      6C6F636B 
 15905      536F7572 
 15906              	.LASF220:
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 328


 15907 0b44 49324357 		.ascii	"I2CWriteByte\000"
 15907      72697465 
 15907      42797465 
 15907      00
 15908              	.LASF174:
 15909 0b51 4D505539 		.ascii	"MPU9250_resetTemperaturePath\000"
 15909      3235305F 
 15909      72657365 
 15909      7454656D 
 15909      70657261 
 15910              	.LASF195:
 15911 0b6e 4D505539 		.ascii	"MPU9250_getWakeFrequency\000"
 15911      3235305F 
 15911      67657457 
 15911      616B6546 
 15911      72657175 
 15912              	.LASF128:
 15913 0b87 64726976 		.ascii	"drive\000"
 15913      6500
 15914              	.LASF121:
 15915 0b8d 4D505539 		.ascii	"MPU9250_getSlave2Nack\000"
 15915      3235305F 
 15915      67657453 
 15915      6C617665 
 15915      324E6163 
 15916              	.LASF193:
 15917 0ba3 736F7572 		.ascii	"source\000"
 15917      636500
 15918              	.LASF48:
 15919 0baa 4D505539 		.ascii	"MPU9250_setFreefallDetectionDuration\000"
 15919      3235305F 
 15919      73657446 
 15919      72656566 
 15919      616C6C44 
 15920              	.LASF187:
 15921 0bcf 4D505539 		.ascii	"MPU9250_getWakeCycleEnabled\000"
 15921      3235305F 
 15921      67657457 
 15921      616B6543 
 15921      79636C65 
 15922              	.LASF127:
 15923 0beb 4D505539 		.ascii	"MPU9250_setInterruptDrive\000"
 15923      3235305F 
 15923      73657449 
 15923      6E746572 
 15923      72757074 
 15924              	.LASF117:
 15925 0c05 4D505539 		.ascii	"MPU9250_getSlave4IsDone\000"
 15925      3235305F 
 15925      67657453 
 15925      6C617665 
 15925      34497344 
 15926              	.LASF16:
 15927 0c1d 61646472 		.ascii	"address\000"
 15927      65737300 
 15928              	.LASF170:
 15929 0c25 4D505539 		.ascii	"MPU9250_getSlaveDelayEnabled\000"
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 329


 15929      3235305F 
 15929      67657453 
 15929      6C617665 
 15929      44656C61 
 15930              	.LASF86:
 15931 0c42 4D505539 		.ascii	"MPU9250_getSlaveAddress\000"
 15931      3235305F 
 15931      67657453 
 15931      6C617665 
 15931      41646472 
 15932              	.LASF25:
 15933 0c5a 4D505539 		.ascii	"MPU9250_setDLPFMode\000"
 15933      3235305F 
 15933      73657444 
 15933      4C50464D 
 15933      6F646500 
 15934              	.LASF18:
 15935 0c6e 4D505539 		.ascii	"MPU9250_getRate\000"
 15935      3235305F 
 15935      67657452 
 15935      61746500 
 15936              	.LASF96:
 15937 0c7e 4D505539 		.ascii	"MPU9250_setSlaveWordGroupOffset\000"
 15937      3235305F 
 15937      73657453 
 15937      6C617665 
 15937      576F7264 
 15938              	.LASF182:
 15939 0c9e 4D505539 		.ascii	"MPU9250_resetI2CMaster\000"
 15939      3235305F 
 15939      72657365 
 15939      74493243 
 15939      4D617374 
 15940              	.LASF28:
 15941 0cb5 4D505539 		.ascii	"MPU9250_getFullScaleGyroRange\000"
 15941      3235305F 
 15941      67657446 
 15941      756C6C53 
 15941      63616C65 
 15942              	.LASF146:
 15943 0cd3 4D505539 		.ascii	"MPU9250_setIntFreefallEnabled\000"
 15943      3235305F 
 15943      73657449 
 15943      6E744672 
 15943      65656661 
 15944              	.LASF106:
 15945 0cf1 4D505539 		.ascii	"MPU9250_getSlave4Enabled\000"
 15945      3235305F 
 15945      67657453 
 15945      6C617665 
 15945      34456E61 
 15946              	.LASF110:
 15947 0d0a 4D505539 		.ascii	"MPU9250_getSlave4WriteMode\000"
 15947      3235305F 
 15947      67657453 
 15947      6C617665 
 15947      34577269 
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 330


 15948              	.LASF29:
 15949 0d25 4D505539 		.ascii	"MPU9250_setFullScaleGyroRange\000"
 15949      3235305F 
 15949      73657446 
 15949      756C6C53 
 15949      63616C65 
 15950              	.LASF153:
 15951 0d43 4D505539 		.ascii	"MPU9250_getIntI2CMasterEnabled\000"
 15951      3235305F 
 15951      67657449 
 15951      6E744932 
 15951      434D6173 
 15952              	.LASF152:
 15953 0d62 4D505539 		.ascii	"MPU9250_setIntFIFOBufferOverflowEnabled\000"
 15953      3235305F 
 15953      73657449 
 15953      6E744649 
 15953      464F4275 
 15954              	.LASF206:
 15955 0d8a 4D505539 		.ascii	"MPU9250_getStandbyYGyroEnabled\000"
 15955      3235305F 
 15955      67657453 
 15955      74616E64 
 15955      62795947 
 15956              	.LASF54:
 15957 0da9 4D505539 		.ascii	"MPU9250_getZeroMotionDetectionThreshold\000"
 15957      3235305F 
 15957      6765745A 
 15957      65726F4D 
 15957      6F74696F 
 15958              	.LASF30:
 15959 0dd1 72616E67 		.ascii	"range\000"
 15959      6500
 15960              	.LASF176:
 15961 0dd7 4D505539 		.ascii	"MPU9250_setAccelerometerPowerOnDelay\000"
 15961      3235305F 
 15961      73657441 
 15961      6363656C 
 15961      65726F6D 
 15962              	.LASF169:
 15963 0dfc 4D505539 		.ascii	"MPU9250_setExternalShadowDelayEnabled\000"
 15963      3235305F 
 15963      73657445 
 15963      78746572 
 15963      6E616C53 
 15964              	.LASF215:
 15965 0e22 64657641 		.ascii	"devAddr\000"
 15965      64647200 
 15966              	.LASF225:
 15967 0e2a 433A5C55 		.ascii	"C:\\Users\\hima\\OneDrive - Cypress Semiconductor\\"
 15967      73657273 
 15967      5C68696D 
 15967      615C4F6E 
 15967      65447269 
 15968 0e59 48696D61 		.ascii	"Hima\\MyCases\\Q1-18\\I2S PSoC6\\HA700_ver2\\HA700_"
 15968      5C4D7943 
 15968      61736573 
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 331


 15968      5C51312D 
 15968      31385C49 
 15969 0e87 76657232 		.ascii	"ver2\\Design01.cydsn\000"
 15969      5C446573 
 15969      69676E30 
 15969      312E6379 
 15969      64736E00 
 15970              	.LASF180:
 15971 0e9b 4D505539 		.ascii	"MPU9250_getMotionDetectionCounterDecrement\000"
 15971      3235305F 
 15971      6765744D 
 15971      6F74696F 
 15971      6E446574 
 15972              	.LASF150:
 15973 0ec6 4D505539 		.ascii	"MPU9250_setIntZeroMotionEnabled\000"
 15973      3235305F 
 15973      73657449 
 15973      6E745A65 
 15973      726F4D6F 
 15974              	.LASF31:
 15975 0ee6 4D505539 		.ascii	"MPU9250_getAccelXSelfTest\000"
 15975      3235305F 
 15975      67657441 
 15975      6363656C 
 15975      5853656C 
 15976              	.LASF46:
 15977 0f00 74687265 		.ascii	"threshold\000"
 15977      73686F6C 
 15977      6400
 15978              	.LASF32:
 15979 0f0a 5F426F6F 		.ascii	"_Bool\000"
 15979      6C00
 15980              	.LASF1:
 15981 0f10 756E7369 		.ascii	"unsigned char\000"
 15981      676E6564 
 15981      20636861 
 15981      7200
 15982              	.LASF52:
 15983 0f1e 4D505539 		.ascii	"MPU9250_getMotionDetectionDuration\000"
 15983      3235305F 
 15983      6765744D 
 15983      6F74696F 
 15983      6E446574 
 15984              	.LASF114:
 15985 0f41 64656C61 		.ascii	"delay\000"
 15985      7900
 15986              	.LASF61:
 15987 0f47 4D505539 		.ascii	"MPU9250_setXGyroFIFOEnabled\000"
 15987      3235305F 
 15987      73657458 
 15987      4779726F 
 15987      4649464F 
 15988              	.LASF4:
 15989 0f63 73686F72 		.ascii	"short int\000"
 15989      7420696E 
 15989      7400
 15990              	.LASF209:
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 332


 15991 0f6d 4D505539 		.ascii	"MPU9250_setStandbyZGyroEnabled\000"
 15991      3235305F 
 15991      73657453 
 15991      74616E64 
 15991      62795A47 
 15992              	.LASF142:
 15993 0f8c 4D505539 		.ascii	"MPU9250_setClockOutputEnabled\000"
 15993      3235305F 
 15993      73657443 
 15993      6C6F636B 
 15993      4F757470 
 15994              	.LASF108:
 15995 0faa 4D505539 		.ascii	"MPU9250_getSlave4InterruptEnabled\000"
 15995      3235305F 
 15995      67657453 
 15995      6C617665 
 15995      34496E74 
 15996              	.LASF53:
 15997 0fcc 4D505539 		.ascii	"MPU9250_setMotionDetectionDuration\000"
 15997      3235305F 
 15997      7365744D 
 15997      6F74696F 
 15997      6E446574 
 15998              	.LASF109:
 15999 0fef 4D505539 		.ascii	"MPU9250_setSlave4InterruptEnabled\000"
 15999      3235305F 
 15999      73657453 
 15999      6C617665 
 15999      34496E74 
 16000              	.LASF159:
 16001 1011 4D505539 		.ascii	"MPU9250_getMotion6\000"
 16001      3235305F 
 16001      6765744D 
 16001      6F74696F 
 16001      6E3600
 16002              	.LASF148:
 16003 1024 4D505539 		.ascii	"MPU9250_setIntMotionEnabled\000"
 16003      3235305F 
 16003      73657449 
 16003      6E744D6F 
 16003      74696F6E 
 16004              	.LASF224:
 16005 1040 6D70755F 		.ascii	"mpu_9250.c\000"
 16005      39323530 
 16005      2E6300
 16006              	.LASF212:
 16007 104b 4D505539 		.ascii	"MPU9250_testConnection\000"
 16007      3235305F 
 16007      74657374 
 16007      436F6E6E 
 16007      65637469 
 16008              	.LASF216:
 16009 1062 62756666 		.ascii	"buffer\000"
 16009      657200
 16010              	.LASF76:
 16011 1069 4D505539 		.ascii	"MPU9250_getWaitForExternalSensorEnabled\000"
 16011      3235305F 
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 333


 16011      67657457 
 16011      61697446 
 16011      6F724578 
 16012              	.LASF222:
 16013 1091 49324357 		.ascii	"I2CWriteBits\000"
 16013      72697465 
 16013      42697473 
 16013      00
 16014              	.LASF173:
 16015 109e 4D505539 		.ascii	"MPU9250_resetAccelerometerPath\000"
 16015      3235305F 
 16015      72657365 
 16015      74416363 
 16015      656C6572 
 16016              	.LASF75:
 16017 10bd 4D505539 		.ascii	"MPU9250_setMultiMasterEnabled\000"
 16017      3235305F 
 16017      7365744D 
 16017      756C7469 
 16017      4D617374 
 16018              	.LASF69:
 16019 10db 4D505539 		.ascii	"MPU9250_setSlave2FIFOEnabled\000"
 16019      3235305F 
 16019      73657453 
 16019      6C617665 
 16019      32464946 
 16020              	.LASF107:
 16021 10f8 4D505539 		.ascii	"MPU9250_setSlave4Enabled\000"
 16021      3235305F 
 16021      73657453 
 16021      6C617665 
 16021      34456E61 
 16022              	.LASF93:
 16023 1111 4D505539 		.ascii	"MPU9250_getSlaveWriteMode\000"
 16023      3235305F 
 16023      67657453 
 16023      6C617665 
 16023      57726974 
 16024              	.LASF161:
 16025 112b 4D505539 		.ascii	"MPU9250_getXPosMotionDetected\000"
 16025      3235305F 
 16025      67657458 
 16025      506F734D 
 16025      6F74696F 
 16026              	.LASF43:
 16027 1149 62616E64 		.ascii	"bandwidth\000"
 16027      77696474 
 16027      6800
 16028              	.LASF183:
 16029 1153 4D505539 		.ascii	"MPU9250_resetSensors\000"
 16029      3235305F 
 16029      72657365 
 16029      7453656E 
 16029      736F7273 
 16030              	.LASF87:
 16031 1168 4D505539 		.ascii	"MPU9250_getSlaveRegister\000"
 16031      3235305F 
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 334


 16031      67657453 
 16031      6C617665 
 16031      52656769 
 16032              	.LASF34:
 16033 1181 656E6162 		.ascii	"enabled\000"
 16033      6C656400 
 16034              	.LASF78:
 16035 1189 4D505539 		.ascii	"MPU9250_getSlave3FIFOEnabled\000"
 16035      3235305F 
 16035      67657453 
 16035      6C617665 
 16035      33464946 
 16036              	.LASF118:
 16037 11a6 4D505539 		.ascii	"MPU9250_getLostArbitration\000"
 16037      3235305F 
 16037      6765744C 
 16037      6F737441 
 16037      72626974 
 16038              	.LASF99:
 16039 11c1 6C656E67 		.ascii	"length\000"
 16039      746800
 16040              	.LASF45:
 16041 11c8 4D505539 		.ascii	"MPU9250_setFreefallDetectionThreshold\000"
 16041      3235305F 
 16041      73657446 
 16041      72656566 
 16041      616C6C44 
 16042              	.LASF26:
 16043 11ee 6D6F6465 		.ascii	"mode\000"
 16043      00
 16044              	.LASF51:
 16045 11f3 4D505539 		.ascii	"MPU9250_setMotionDetectionThreshold\000"
 16045      3235305F 
 16045      7365744D 
 16045      6F74696F 
 16045      6E446574 
 16046              	.LASF79:
 16047 1217 4D505539 		.ascii	"MPU9250_setSlave3FIFOEnabled\000"
 16047      3235305F 
 16047      73657453 
 16047      6C617665 
 16047      33464946 
 16048              	.LASF125:
 16049 1234 4D505539 		.ascii	"MPU9250_setInterruptMode\000"
 16049      3235305F 
 16049      73657449 
 16049      6E746572 
 16049      72757074 
 16050              	.LASF35:
 16051 124d 4D505539 		.ascii	"MPU9250_getAccelYSelfTest\000"
 16051      3235305F 
 16051      67657441 
 16051      6363656C 
 16051      5953656C 
 16052              	.LASF157:
 16053 1267 4D505539 		.ascii	"MPU9250_getIntStatus\000"
 16053      3235305F 
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 335


 16053      67657449 
 16053      6E745374 
 16053      61747573 
 16054              	.LASF129:
 16055 127c 4D505539 		.ascii	"MPU9250_getInterruptLatch\000"
 16055      3235305F 
 16055      67657449 
 16055      6E746572 
 16055      72757074 
 16056              	.LASF139:
 16057 1296 4D505539 		.ascii	"MPU9250_getI2CBypassEnabled\000"
 16057      3235305F 
 16057      67657449 
 16057      32434279 
 16057      70617373 
 16058              	.LASF178:
 16059 12b2 4D505539 		.ascii	"MPU9250_setFreefallDetectionCounterDecrement\000"
 16059      3235305F 
 16059      73657446 
 16059      72656566 
 16059      616C6C44 
 16060              	.LASF101:
 16061 12df 4D505539 		.ascii	"MPU9250_setSlave4Address\000"
 16061      3235305F 
 16061      73657453 
 16061      6C617665 
 16061      34416464 
 16062              	.LASF58:
 16063 12f8 4D505539 		.ascii	"MPU9250_getTempFIFOEnabled\000"
 16063      3235305F 
 16063      67657454 
 16063      656D7046 
 16063      49464F45 
 16064              	.LASF167:
 16065 1313 4D505539 		.ascii	"MPU9250_setSlaveOutputByte\000"
 16065      3235305F 
 16065      73657453 
 16065      6C617665 
 16065      4F757470 
 16066              	.LASF104:
 16067 132e 4D505539 		.ascii	"MPU9250_setSlave4OutputByte\000"
 16067      3235305F 
 16067      73657453 
 16067      6C617665 
 16067      344F7574 
 16068              	.LASF81:
 16069 134a 4D505539 		.ascii	"MPU9250_setSlaveReadWriteTransitionEnabled\000"
 16069      3235305F 
 16069      73657453 
 16069      6C617665 
 16069      52656164 
 16070              	.LASF59:
 16071 1375 4D505539 		.ascii	"MPU9250_setTempFIFOEnabled\000"
 16071      3235305F 
 16071      73657454 
 16071      656D7046 
 16071      49464F45 
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 336


 16072              	.LASF184:
 16073 1390 4D505539 		.ascii	"MPU9250_reset\000"
 16073      3235305F 
 16073      72657365 
 16073      7400
 16074              	.LASF103:
 16075 139e 4D505539 		.ascii	"MPU9250_setSlave4Register\000"
 16075      3235305F 
 16075      73657453 
 16075      6C617665 
 16075      34526567 
 16076              	.LASF145:
 16077 13b8 4D505539 		.ascii	"MPU9250_getIntFreefallEnabled\000"
 16077      3235305F 
 16077      67657449 
 16077      6E744672 
 16077      65656661 
 16078              	.LASF92:
 16079 13d6 4D505539 		.ascii	"MPU9250_setSlaveWordByteSwap\000"
 16079      3235305F 
 16079      73657453 
 16079      6C617665 
 16079      576F7264 
 16080              	.LASF94:
 16081 13f3 4D505539 		.ascii	"MPU9250_setSlaveWriteMode\000"
 16081      3235305F 
 16081      73657453 
 16081      6C617665 
 16081      57726974 
 16082              	.LASF200:
 16083 140d 4D505539 		.ascii	"MPU9250_getStandbyYAccelEnabled\000"
 16083      3235305F 
 16083      67657453 
 16083      74616E64 
 16083      62795941 
 16084              	.LASF122:
 16085 142d 4D505539 		.ascii	"MPU9250_getSlave1Nack\000"
 16085      3235305F 
 16085      67657453 
 16085      6C617665 
 16085      314E6163 
 16086              	.LASF41:
 16087 1443 4D505539 		.ascii	"MPU9250_getDHPFMode\000"
 16087      3235305F 
 16087      67657444 
 16087      4850464D 
 16087      6F646500 
 16088              	.LASF144:
 16089 1457 4D505539 		.ascii	"MPU9250_setIntEnabled\000"
 16089      3235305F 
 16089      73657449 
 16089      6E74456E 
 16089      61626C65 
 16090              	.LASF194:
 16091 146d 4D505539 		.ascii	"MPU9250_initialize\000"
 16091      3235305F 
 16091      696E6974 
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 337


 16091      69616C69 
 16091      7A6500
 16092              	.LASF163:
 16093 1480 4D505539 		.ascii	"MPU9250_getYPosMotionDetected\000"
 16093      3235305F 
 16093      67657459 
 16093      506F734D 
 16093      6F74696F 
 16094              	.LASF40:
 16095 149e 4D505539 		.ascii	"MPU9250_setFullScaleAccelRange\000"
 16095      3235305F 
 16095      73657446 
 16095      756C6C53 
 16095      63616C65 
 16096              	.LASF112:
 16097 14bd 4D505539 		.ascii	"MPU9250_getSlave4MasterDelay\000"
 16097      3235305F 
 16097      67657453 
 16097      6C617665 
 16097      344D6173 
 16098              	.LASF138:
 16099 14da 4D505539 		.ascii	"MPU9250_setFSyncInterruptEnabled\000"
 16099      3235305F 
 16099      73657446 
 16099      53796E63 
 16099      496E7465 
 16100              	.LASF11:
 16101 14fb 75696E74 		.ascii	"uint8_t\000"
 16101      385F7400 
 16102              	.LASF65:
 16103 1503 4D505539 		.ascii	"MPU9250_setZGyroFIFOEnabled\000"
 16103      3235305F 
 16103      7365745A 
 16103      4779726F 
 16103      4649464F 
 16104              	.LASF23:
 16105 151f 73796E63 		.ascii	"sync\000"
 16105      00
 16106              	.LASF149:
 16107 1524 4D505539 		.ascii	"MPU9250_getIntZeroMotionEnabled\000"
 16107      3235305F 
 16107      67657449 
 16107      6E745A65 
 16107      726F4D6F 
 16108              	.LASF126:
 16109 1544 4D505539 		.ascii	"MPU9250_getInterruptDrive\000"
 16109      3235305F 
 16109      67657449 
 16109      6E746572 
 16109      72757074 
 16110              	.LASF90:
 16111 155e 4D505539 		.ascii	"MPU9250_setSlaveEnabled\000"
 16111      3235305F 
 16111      73657453 
 16111      6C617665 
 16111      456E6162 
 16112              	.LASF226:
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 338


 16113 1576 4D505539 		.ascii	"MPU9250_init\000"
 16113      3235305F 
 16113      696E6974 
 16113      00
 16114              	.LASF130:
 16115 1583 4D505539 		.ascii	"MPU9250_setInterruptLatch\000"
 16115      3235305F 
 16115      73657449 
 16115      6E746572 
 16115      72757074 
 16116              	.LASF37:
 16117 159d 4D505539 		.ascii	"MPU9250_getAccelZSelfTest\000"
 16117      3235305F 
 16117      67657441 
 16117      6363656C 
 16117      5A53656C 
 16118              	.LASF84:
 16119 15b7 73706565 		.ascii	"speed\000"
 16119      6400
 16120              	.LASF98:
 16121 15bd 4D505539 		.ascii	"MPU9250_setSlaveDataLength\000"
 16121      3235305F 
 16121      73657453 
 16121      6C617665 
 16121      44617461 
 16122              	.LASF14:
 16123 15d8 4D505539 		.ascii	"MPU9250_getAuxVDDIOLevel\000"
 16123      3235305F 
 16123      67657441 
 16123      75785644 
 16123      44494F4C 
 16124              	.LASF134:
 16125 15f1 636C6561 		.ascii	"clear\000"
 16125      7200
 16126              	.LASF60:
 16127 15f7 4D505539 		.ascii	"MPU9250_getXGyroFIFOEnabled\000"
 16127      3235305F 
 16127      67657458 
 16127      4779726F 
 16127      4649464F 
 16128              	.LASF208:
 16129 1613 4D505539 		.ascii	"MPU9250_getStandbyZGyroEnabled\000"
 16129      3235305F 
 16129      67657453 
 16129      74616E64 
 16129      62795A47 
 16130              	.LASF72:
 16131 1632 4D505539 		.ascii	"MPU9250_getSlave0FIFOEnabled\000"
 16131      3235305F 
 16131      67657453 
 16131      6C617665 
 16131      30464946 
 16132              	.LASF85:
 16133 164f 4D505539 		.ascii	"MPU9250_setSlaveAddress\000"
 16133      3235305F 
 16133      73657453 
 16133      6C617665 
ARM GAS  C:\Users\hima\AppData\Local\Temp\ccR4vqcc.s 			page 339


 16133      41646472 
 16134              	.LASF131:
 16135 1667 6C617463 		.ascii	"latch\000"
 16135      6800
 16136              	.LASF196:
 16137 166d 4D505539 		.ascii	"MPU9250_setWakeFrequency\000"
 16137      3235305F 
 16137      73657457 
 16137      616B6546 
 16137      72657175 
 16138              	.LASF147:
 16139 1686 4D505539 		.ascii	"MPU9250_getIntMotionEnabled\000"
 16139      3235305F 
 16139      67657449 
 16139      6E744D6F 
 16139      74696F6E 
 16140              	.LASF132:
 16141 16a2 4D505539 		.ascii	"MPU9250_getInterruptLatchClear\000"
 16141      3235305F 
 16141      67657449 
 16141      6E746572 
 16141      72757074 
 16142              	.LASF73:
 16143 16c1 4D505539 		.ascii	"MPU9250_setSlave0FIFOEnabled\000"
 16143      3235305F 
 16143      73657453 
 16143      6C617665 
 16143      30464946 
 16144              	.LASF162:
 16145 16de 4D505539 		.ascii	"MPU9250_getYNegMotionDetected\000"
 16145      3235305F 
 16145      67657459 
 16145      4E65674D 
 16145      6F74696F 
 16146              	.LASF172:
 16147 16fc 4D505539 		.ascii	"MPU9250_resetGyroscopePath\000"
 16147      3235305F 
 16147      72657365 
 16147      74477972 
 16147      6F73636F 
 16148              	.LASF201:
 16149 1717 4D505539 		.ascii	"MPU9250_setStandbyYAccelEnabled\000"
 16149      3235305F 
 16149      73657453 
 16149      74616E64 
 16149      62795941 
 16150              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
